# generated by datamodel-codegen:
#   filename:  alerts/api/createAlert.json
#   timestamp: 2023-05-15T12:45:58+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Extra, Field

from ...type import basic, entityReference
from .. import alerts, triggerConfig


class CreateAlert(BaseModel):
    class Config:
        extra = Extra.forbid

    name: basic.EntityName = Field(
        ..., description='Name that uniquely identifies this Alert.'
    )
    displayName: Optional[str] = Field(None, description='Display name for this Alert.')
    description: Optional[basic.Markdown] = Field(
        None,
        description='A short description of the Alert, comprehensible to regular users.',
    )
    owner: Optional[entityReference.EntityReference] = Field(
        None, description='Owner of this Alert.'
    )
    enabled: Optional[bool] = Field(True, description='Is the alert enabled.')
    triggerConfig: triggerConfig.TriggerConfig1
    filteringRules: alerts.Rules = Field(
        ...,
        description='Set of rules that the Alert Contains to allow conditional control for alerting.',
    )
    alertActions: Optional[entityReference.EntityReferenceList] = None
