# Generated by Django 3.2.15 on 2022-09-07 16:20

import django.db.models.deletion
import djangocms_bootstrap5.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("cms", "0022_auto_20180620_1551"),
        ("uploaded_material", "0005_communitymaterial"),
        ("activities", "0012_auto_20220824_1437"),
    ]

    operations = [
        migrations.CreateModel(
            name="ActivityMaterialListPluginModel",
            fields=[
                (
                    "cmsplugin_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        related_name="activities_activitymateriallistpluginmodel",
                        serialize=False,
                        to="cms.cmsplugin",
                    ),
                ),
                (
                    "activity",
                    models.ForeignKey(
                        help_text="The activity that you want to display the material for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="activities.activity",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        help_text="Select a category that you want to filter for.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="uploaded_material.materialcategory",
                    ),
                ),
                (
                    "keywords",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Select keywords that you want to filter for.",
                        to="uploaded_material.MaterialKeyword",
                    ),
                ),
                (
                    "license",
                    models.ForeignKey(
                        blank=True,
                        help_text="Select a license that you want to filter for?",
                        limit_choices_to={"active": True},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="uploaded_material.license",
                    ),
                ),
                (
                    "all_keywords_required",
                    models.BooleanField(
                        default=False,
                        help_text="Show only material that has all of the mentioned keywords.",
                    ),
                ),
                (
                    "members_only_material",
                    models.BooleanField(
                        blank=True,
                        help_text="If yes, only material for activity members is shown, if No, only material that is explicitly not only for members is shown.",
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("cms.cmsplugin",),
        ),
        migrations.CreateModel(
            name="AddActivityMaterialButtonPluginModel",
            fields=[
                (
                    "cmsplugin_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        related_name="activities_addactivitymaterialbuttonpluginmodel",
                        serialize=False,
                        to="cms.cmsplugin",
                    ),
                ),
                (
                    "button_text",
                    models.CharField(
                        blank=True,
                        default="Add material",
                        help_text="Display text on the button",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "members_only",
                    models.BooleanField(
                        default=False,
                        help_text="If yes, the option making material to members only is preselected.",
                    ),
                ),
                (
                    "activity",
                    models.ForeignKey(
                        help_text="The activity that you want to display the material for.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="activities.activity",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        help_text="Select a category that you want to filter for.",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="uploaded_material.materialcategory",
                    ),
                ),
                (
                    "keywords",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Select keywords that you want to filter for.",
                        to="uploaded_material.MaterialKeyword",
                    ),
                ),
                (
                    "license",
                    models.ForeignKey(
                        blank=True,
                        help_text="Select a license that you want to filter for?",
                        limit_choices_to={"active": True},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="uploaded_material.license",
                    ),
                ),
                (
                    "attributes",
                    djangocms_bootstrap5.fields.AttributesField(
                        blank=True, default=dict, verbose_name="Attributes"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("cms.cmsplugin",),
        ),
    ]
