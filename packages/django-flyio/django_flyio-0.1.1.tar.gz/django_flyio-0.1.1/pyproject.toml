[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "django-flyio"
description = 'A set of simple utilities for Django apps running on Fly.io'
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = []
authors = [{ name = "Josh", email = "josh@joshthomas.dev" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = ["django>=3.2", "dj_database_url"]
dynamic = ["version"]

[project.optional-dependencies]
dev = ["black", "hatch", "ruff"]
test = ["coverage[toml]", "pytest", "pytest-asyncio", "pytest-django"]
types = ["django-stubs", "mypy"]

[project.urls]
Documentation = "https://github.com/joshuadavidthomas/django-flyio#readme"
Issues = "https://github.com/joshuadavidthomas/django-flyio/issues"
Source = "https://github.com/joshuadavidthomas/django-flyio"

[tool.hatch.version]
path = "src/django_flyio/__init__.py"

[tool.black]
target-version = ["py37"]
line-length = 120
skip-string-normalization = true

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.mypy]
mypy_path = "src/"
namespace_packages = false
show_error_codes = true
strict = true
warn_unreachable = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
allow_untyped_defs = true

[tool.pytest.ini_options]
django_find_project = false
DJANGO_SETTINGS_MODULE = "tests.settings"
pythonpath = ". src"

[tool.ruff]
target-version = "py37"
line-length = 120
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105",
  "S106",
  "S107",
  # Ignore complexity
  "C901",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915",
]
unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.isort]
known-first-party = ["django_flyio"]
force-single-line = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]
