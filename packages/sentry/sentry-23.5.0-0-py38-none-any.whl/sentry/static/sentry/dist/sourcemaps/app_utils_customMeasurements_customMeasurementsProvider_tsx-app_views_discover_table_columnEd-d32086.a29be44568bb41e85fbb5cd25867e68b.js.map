{"version":3,"file":"chunks/app_utils_customMeasurements_customMeasurementsProvider_tsx-app_views_discover_table_columnEd-d32086.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/customMeasurements/customMeasurementsProvider.tsx","webpack:///./app/utils/userselect.tsx","webpack:///./app/utils/touch.tsx","webpack:///./app/views/discover/table/columnEditCollection.tsx"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport {Query} from 'history';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {getFieldTypeFromUnit} from 'sentry/components/events/eventCustomPerformanceMetrics';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t} from 'sentry/locale';\nimport {Organization, PageFilters} from 'sentry/types';\nimport {CustomMeasurementCollection} from 'sentry/utils/customMeasurements/customMeasurements';\nimport getXhrErrorResponseHandler from 'sentry/utils/handleXhrErrorResponse';\nimport useApi from 'sentry/utils/useApi';\n\nimport {\n  CustomMeasurementsContext,\n  CustomMeasurementsContextValue,\n} from './customMeasurementsContext';\n\ntype MeasurementsMetaResponse = {\n  [x: string]: {functions: string[]; unit: string};\n};\n\nfunction fetchCustomMeasurements(\n  api: Client,\n  organization: Organization,\n  selection?: PageFilters\n): Promise<MeasurementsMetaResponse> {\n  const query: Query = selection?.datetime\n    ? {...normalizeDateTimeParams(selection.datetime)}\n    : {};\n\n  if (selection?.projects) {\n    query.project = selection.projects.map(String);\n  }\n\n  return api.requestPromise(`/organizations/${organization.slug}/measurements-meta/`, {\n    method: 'GET',\n    query,\n  });\n}\n\ntype CustomMeasurementsProviderProps = {\n  children:\n    | React.ReactNode\n    | ((props: CustomMeasurementsContextValue) => React.ReactNode);\n  organization: Organization;\n  selection?: PageFilters;\n};\n\nexport function CustomMeasurementsProvider({\n  children,\n  organization,\n  selection,\n}: CustomMeasurementsProviderProps) {\n  const api = useApi();\n  const [state, setState] = useState({customMeasurements: {}});\n\n  useEffect(() => {\n    let shouldCancelRequest = false;\n\n    if (\n      organization.features.includes('dashboards-mep') ||\n      organization.features.includes('mep-rollout-flag')\n    ) {\n      fetchCustomMeasurements(api, organization, selection)\n        .then(response => {\n          if (shouldCancelRequest) {\n            return;\n          }\n\n          const newCustomMeasurements = Object.keys(\n            response\n          ).reduce<CustomMeasurementCollection>((acc, customMeasurement) => {\n            acc[customMeasurement] = {\n              key: customMeasurement,\n              name: customMeasurement,\n              functions: response[customMeasurement].functions,\n              unit: response[customMeasurement].unit,\n              fieldType: getFieldTypeFromUnit(response[customMeasurement].unit),\n            };\n            return acc;\n          }, {});\n\n          setState({customMeasurements: newCustomMeasurements});\n        })\n        .catch(e => {\n          if (shouldCancelRequest) {\n            return;\n          }\n\n          const errorResponse =\n            e?.responseJSON ?? t('Unable to fetch custom performance metrics');\n          addErrorMessage(errorResponse);\n          getXhrErrorResponseHandler(errorResponse)(e);\n        });\n    }\n\n    return () => {\n      shouldCancelRequest = true;\n    };\n  }, [selection, api, organization]);\n\n  return (\n    <CustomMeasurementsContext.Provider value={state}>\n      {typeof children === 'function' ? children(state) : children}\n    </CustomMeasurementsContext.Provider>\n  );\n}\n","export type UserSelectValues = {\n  MozUserSelect: string | null;\n  msUserSelect: string | null;\n  userSelect: string | null;\n  webkitUserSelect: string | null;\n};\n\nexport const setBodyUserSelect = (nextValues: UserSelectValues): UserSelectValues => {\n  // NOTE: Vendor prefixes other than `ms` should begin with a capital letter.\n  // ref: https://reactjs.org/docs/dom-elements.html#style\n\n  const previousValues = {\n    userSelect: document.body.style.userSelect,\n    // MozUserSelect is not typed in TS\n    // @ts-expect-error\n    MozUserSelect: document.body.style.MozUserSelect,\n    // msUserSelect is not typed in TS\n    // @ts-expect-error\n    msUserSelect: document.body.style.msUserSelect,\n    webkitUserSelect: document.body.style.webkitUserSelect,\n  };\n\n  document.body.style.userSelect = nextValues.userSelect || '';\n  // MozUserSelect is not typed in TS\n  // @ts-expect-error\n  document.body.style.MozUserSelect = nextValues.MozUserSelect || '';\n  // msUserSelect is not typed in TS\n  // @ts-expect-error\n  document.body.style.msUserSelect = nextValues.msUserSelect || '';\n  document.body.style.webkitUserSelect = nextValues.webkitUserSelect || '';\n\n  return previousValues;\n};\n","function isReactEvent(\n  maybe: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent\n): maybe is React.MouseEvent | React.TouchEvent {\n  return 'nativeEvent' in maybe;\n}\n\n/**\n * Handle getting position out of both React and Raw DOM events\n * as both are handled here due to mousedown/mousemove events\n * working differently.\n */\nexport function getPointerPosition(\n  event: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent,\n  property: 'pageX' | 'pageY' | 'clientX' | 'clientY'\n): number {\n  const actual = isReactEvent(event) ? event.nativeEvent : event;\n  if (window.TouchEvent && actual instanceof TouchEvent) {\n    return actual.targetTouches[0][property];\n  }\n  if (actual instanceof MouseEvent) {\n    return actual[property];\n  }\n  return 0;\n}\n","import {Component, createRef, Fragment} from 'react';\nimport {createPortal} from 'react-dom';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {parseArithmetic} from 'sentry/components/arithmeticInput/parser';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport Input from 'sentry/components/input';\nimport {getOffsetOfElement} from 'sentry/components/performance/waterfall/utils';\nimport {IconAdd, IconDelete, IconGrabbable} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport {\n  AGGREGATIONS,\n  Column,\n  generateFieldAsString,\n  hasDuplicate,\n  isLegalEquationColumn,\n} from 'sentry/utils/discover/fields';\nimport theme from 'sentry/utils/theme';\nimport {getPointerPosition} from 'sentry/utils/touch';\nimport {setBodyUserSelect, UserSelectValues} from 'sentry/utils/userselect';\nimport {WidgetType} from 'sentry/views/dashboards/types';\nimport {FieldKey} from 'sentry/views/dashboards/widgetBuilder/issueWidget/fields';\nimport {SESSIONS_OPERATIONS} from 'sentry/views/dashboards/widgetBuilder/releaseWidget/fields';\n\nimport {generateFieldOptions} from '../utils';\n\nimport {FieldValueOption, QueryField} from './queryField';\nimport {FieldValueKind} from './types';\n\ntype Sources = WidgetType;\n\ntype Props = {\n  // Input columns\n  columns: Column[];\n  fieldOptions: ReturnType<typeof generateFieldOptions>;\n  // Fired when columns are added/removed/modified\n  onChange: (columns: Column[]) => void;\n  organization: Organization;\n  className?: string;\n  filterAggregateParameters?: (option: FieldValueOption) => boolean;\n  filterPrimaryOptions?: (option: FieldValueOption) => boolean;\n  noFieldsMessage?: string;\n  showAliasField?: boolean;\n  source?: Sources;\n};\n\ntype State = {\n  draggingGrabbedOffset: undefined | {x: number; y: number};\n  draggingIndex: undefined | number;\n  draggingTargetIndex: undefined | number;\n  error: Map<number, string | undefined>;\n  isDragging: boolean;\n  left: undefined | number;\n  top: undefined | number;\n};\n\nconst DRAG_CLASS = 'draggable-item';\nconst GHOST_PADDING = 4;\nconst MAX_COL_COUNT = 20;\n\nenum PlaceholderPosition {\n  TOP,\n  BOTTOM,\n}\n\nclass ColumnEditCollection extends Component<Props, State> {\n  state: State = {\n    isDragging: false,\n    draggingIndex: void 0,\n    draggingTargetIndex: void 0,\n    draggingGrabbedOffset: void 0,\n    error: new Map(),\n    left: void 0,\n    top: void 0,\n  };\n\n  componentDidMount() {\n    if (!this.portal) {\n      const portal = document.createElement('div');\n\n      portal.style.position = 'absolute';\n      portal.style.top = '0';\n      portal.style.left = '0';\n      portal.style.zIndex = String(theme.zIndex.modal);\n\n      this.portal = portal;\n\n      document.body.appendChild(this.portal);\n    }\n    this.checkColumnErrors(this.props.columns);\n  }\n\n  componentWillUnmount() {\n    if (this.portal) {\n      document.body.removeChild(this.portal);\n    }\n    this.cleanUpListeners();\n  }\n\n  checkColumnErrors(columns: Column[]) {\n    const error = new Map();\n    for (let i = 0; i < columns.length; i += 1) {\n      const column = columns[i];\n      if (column.kind === 'equation') {\n        const result = parseArithmetic(column.field);\n        if (result.error) {\n          error.set(i, result.error);\n        }\n      }\n    }\n    this.setState({error});\n  }\n\n  previousUserSelect: UserSelectValues | null = null;\n  portal: HTMLElement | null = null;\n  dragGhostRef = createRef<HTMLDivElement>();\n\n  keyForColumn(column: Column, isGhost: boolean): string {\n    if (column.kind === 'function') {\n      return [...column.function, isGhost].join(':');\n    }\n    return [...column.field, isGhost].join(':');\n  }\n\n  cleanUpListeners() {\n    if (this.state.isDragging) {\n      window.removeEventListener('mousemove', this.onDragMove);\n      window.removeEventListener('touchmove', this.onDragMove);\n      window.removeEventListener('mouseup', this.onDragEnd);\n      window.removeEventListener('touchend', this.onDragEnd);\n    }\n  }\n\n  // Signal to the parent that a new column has been added.\n  handleAddColumn = () => {\n    const newColumn: Column = {kind: 'field', field: ''};\n    this.props.onChange([...this.props.columns, newColumn]);\n  };\n\n  handleAddEquation = () => {\n    const {organization} = this.props;\n    const newColumn: Column = {kind: FieldValueKind.EQUATION, field: ''};\n    trackAnalytics('discover_v2.add_equation', {organization});\n    this.props.onChange([...this.props.columns, newColumn]);\n  };\n\n  handleUpdateColumn = (index: number, updatedColumn: Column) => {\n    const newColumns = [...this.props.columns];\n\n    if (updatedColumn.kind === 'equation') {\n      this.setState(prevState => {\n        const error = new Map(prevState.error);\n        error.set(index, parseArithmetic(updatedColumn.field).error);\n        return {\n          ...prevState,\n          error,\n        };\n      });\n    } else {\n      // Update any equations that contain the existing column\n      this.updateEquationFields(newColumns, index, updatedColumn);\n    }\n\n    newColumns.splice(index, 1, updatedColumn);\n    this.props.onChange(newColumns);\n  };\n\n  updateEquationFields = (newColumns: Column[], index: number, updatedColumn: Column) => {\n    const oldColumn = newColumns[index];\n    const existingColumn = generateFieldAsString(newColumns[index]);\n    const updatedColumnString = generateFieldAsString(updatedColumn);\n    if (!isLegalEquationColumn(updatedColumn) || hasDuplicate(newColumns, oldColumn)) {\n      return;\n    }\n    // Find the equations in the list of columns\n    for (let i = 0; i < newColumns.length; i++) {\n      const newColumn = newColumns[i];\n\n      if (newColumn.kind === 'equation') {\n        const result = parseArithmetic(newColumn.field);\n        let newEquation = '';\n        // Track where to continue from, not reconstructing from result so we don't have to worry\n        // about spacing\n        let lastIndex = 0;\n\n        // the parser separates fields & functions, so we only need to check one\n        const fields =\n          oldColumn.kind === 'function' ? result.tc.functions : result.tc.fields;\n\n        // for each field, add the text before it, then the new function and update index\n        // to be where we want to start again\n        for (const field of fields) {\n          if (field.term === existingColumn && lastIndex !== field.location.end.offset) {\n            newEquation +=\n              newColumn.field.substring(lastIndex, field.location.start.offset) +\n              updatedColumnString;\n            lastIndex = field.location.end.offset;\n          }\n        }\n\n        // Add whatever remains to be added from the equation, if existing field wasn't found\n        // add the entire equation\n        newEquation += newColumn.field.substring(lastIndex);\n        newColumns[i] = {\n          kind: 'equation',\n          field: newEquation,\n          alias: newColumns[i].alias,\n        };\n      }\n    }\n  };\n\n  removeColumn(index: number) {\n    const newColumns = [...this.props.columns];\n    newColumns.splice(index, 1);\n    this.checkColumnErrors(newColumns);\n    this.props.onChange(newColumns);\n  }\n\n  startDrag(\n    event: React.MouseEvent<HTMLButtonElement> | React.TouchEvent<HTMLButtonElement>,\n    index: number\n  ) {\n    const isDragging = this.state.isDragging;\n    if (isDragging || !['mousedown', 'touchstart'].includes(event.type)) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n\n    const top = getPointerPosition(event, 'pageY');\n    const left = getPointerPosition(event, 'pageX');\n\n    // Compute where the user clicked on the drag handle. Avoids the element\n    // jumping from the cursor on mousedown.\n    const draggingElement = Array.from(document.querySelectorAll(`.${DRAG_CLASS}`)).find(\n      n => n.contains(event.currentTarget)\n    )!;\n    const {x, y} = getOffsetOfElement(draggingElement);\n\n    const draggingGrabbedOffset = {\n      x: left - x + GHOST_PADDING,\n      y: top - y + GHOST_PADDING,\n    };\n\n    // prevent the user from selecting things when dragging a column.\n    this.previousUserSelect = setBodyUserSelect({\n      userSelect: 'none',\n      MozUserSelect: 'none',\n      msUserSelect: 'none',\n      webkitUserSelect: 'none',\n    });\n\n    // attach event listeners so that the mouse cursor can drag anywhere\n    window.addEventListener('mousemove', this.onDragMove);\n    window.addEventListener('touchmove', this.onDragMove);\n    window.addEventListener('mouseup', this.onDragEnd);\n    window.addEventListener('touchend', this.onDragEnd);\n\n    this.setState({\n      isDragging: true,\n      draggingIndex: index,\n      draggingTargetIndex: index,\n      draggingGrabbedOffset,\n      top,\n      left,\n    });\n  }\n\n  onDragMove = (event: MouseEvent | TouchEvent) => {\n    const {isDragging, draggingTargetIndex, draggingGrabbedOffset} = this.state;\n\n    if (!isDragging || !['mousemove', 'touchmove'].includes(event.type)) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n\n    const pointerX = getPointerPosition(event, 'pageX');\n    const pointerY = getPointerPosition(event, 'pageY');\n\n    const dragOffsetX = draggingGrabbedOffset?.x ?? 0;\n    const dragOffsetY = draggingGrabbedOffset?.y ?? 0;\n\n    if (this.dragGhostRef.current) {\n      // move the ghost box\n      const ghostDOM = this.dragGhostRef.current;\n      // Adjust so cursor is over the grab handle.\n      ghostDOM.style.left = `${pointerX - dragOffsetX}px`;\n      ghostDOM.style.top = `${pointerY - dragOffsetY}px`;\n    }\n\n    const dragItems = document.querySelectorAll(`.${DRAG_CLASS}`);\n    // Find the item that the ghost is currently over.\n    const targetIndex = Array.from(dragItems).findIndex(dragItem => {\n      const rects = dragItem.getBoundingClientRect();\n      const top = pointerY;\n\n      const thresholdStart = window.scrollY + rects.top;\n      const thresholdEnd = window.scrollY + rects.top + rects.height;\n\n      return top >= thresholdStart && top <= thresholdEnd;\n    });\n\n    // Issue column in Issue widgets are fixed (cannot be moved or deleted)\n    if (targetIndex >= 0 && targetIndex !== draggingTargetIndex) {\n      this.setState({draggingTargetIndex: targetIndex});\n    }\n  };\n\n  isFixedIssueColumn = (columnIndex: number) => {\n    const {source, columns} = this.props;\n    const column = columns[columnIndex];\n    const issueFieldColumnCount = columns.filter(\n      col => col.kind === 'field' && col.field === FieldKey.ISSUE\n    ).length;\n    return (\n      issueFieldColumnCount <= 1 &&\n      source === WidgetType.ISSUE &&\n      column.kind === 'field' &&\n      column.field === FieldKey.ISSUE\n    );\n  };\n\n  isRemainingReleaseHealthAggregate = (columnIndex: number) => {\n    const {source, columns} = this.props;\n    const column = columns[columnIndex];\n    const aggregateCount = columns.filter(\n      col => col.kind === FieldValueKind.FUNCTION\n    ).length;\n    return (\n      aggregateCount <= 1 &&\n      source === WidgetType.RELEASE &&\n      column.kind === FieldValueKind.FUNCTION\n    );\n  };\n\n  onDragEnd = (event: MouseEvent | TouchEvent) => {\n    if (!this.state.isDragging || !['mouseup', 'touchend'].includes(event.type)) {\n      return;\n    }\n\n    const sourceIndex = this.state.draggingIndex;\n    const targetIndex = this.state.draggingTargetIndex;\n    if (typeof sourceIndex !== 'number' || typeof targetIndex !== 'number') {\n      return;\n    }\n\n    // remove listeners that were attached in startColumnDrag\n    this.cleanUpListeners();\n\n    // restore body user-select values\n    if (this.previousUserSelect) {\n      setBodyUserSelect(this.previousUserSelect);\n      this.previousUserSelect = null;\n    }\n\n    // Reorder columns and trigger change.\n    const newColumns = [...this.props.columns];\n    const removed = newColumns.splice(sourceIndex, 1);\n    newColumns.splice(targetIndex, 0, removed[0]);\n    this.checkColumnErrors(newColumns);\n    this.props.onChange(newColumns);\n\n    this.setState({\n      isDragging: false,\n      left: undefined,\n      top: undefined,\n      draggingIndex: undefined,\n      draggingTargetIndex: undefined,\n      draggingGrabbedOffset: undefined,\n    });\n  };\n\n  renderGhost({gridColumns, singleColumn}: {gridColumns: number; singleColumn: boolean}) {\n    const {isDragging, draggingIndex, draggingGrabbedOffset} = this.state;\n\n    const index = draggingIndex;\n    if (typeof index !== 'number' || !isDragging || !this.portal) {\n      return null;\n    }\n    const dragOffsetX = draggingGrabbedOffset?.x ?? 0;\n    const dragOffsetY = draggingGrabbedOffset?.y ?? 0;\n\n    const top = Number(this.state.top) - dragOffsetY;\n    const left = Number(this.state.left) - dragOffsetX;\n    const col = this.props.columns[index];\n\n    const style = {\n      top: `${top}px`,\n      left: `${left}px`,\n    };\n    const ghost = (\n      <Ghost ref={this.dragGhostRef} style={style}>\n        {this.renderItem(col, index, {\n          singleColumn,\n          isGhost: true,\n          gridColumns,\n        })}\n      </Ghost>\n    );\n\n    return createPortal(ghost, this.portal);\n  }\n\n  renderItem(\n    col: Column,\n    i: number,\n    {\n      singleColumn = false,\n      canDelete = true,\n      canDrag = true,\n      isGhost = false,\n      gridColumns = 2,\n      disabled = false,\n    }: {\n      gridColumns: number;\n      singleColumn: boolean;\n      canDelete?: boolean;\n      canDrag?: boolean;\n      disabled?: boolean;\n      isGhost?: boolean;\n    }\n  ) {\n    const {\n      columns,\n      fieldOptions,\n      filterAggregateParameters,\n      filterPrimaryOptions,\n      noFieldsMessage,\n      showAliasField,\n    } = this.props;\n    const {isDragging, draggingTargetIndex, draggingIndex} = this.state;\n\n    let placeholder: React.ReactNode = null;\n    // Add a placeholder above the target row.\n    if (isDragging && isGhost === false && draggingTargetIndex === i) {\n      placeholder = (\n        <DragPlaceholder\n          key={`placeholder:${this.keyForColumn(col, isGhost)}`}\n          className={DRAG_CLASS}\n        />\n      );\n    }\n\n    // If the current row is the row in the drag ghost return the placeholder\n    // or a hole if the placeholder is elsewhere.\n    if (isDragging && isGhost === false && draggingIndex === i) {\n      return placeholder;\n    }\n\n    const position =\n      Number(draggingTargetIndex) <= Number(draggingIndex)\n        ? PlaceholderPosition.TOP\n        : PlaceholderPosition.BOTTOM;\n\n    return (\n      <Fragment key={`${i}:${this.keyForColumn(col, isGhost)}`}>\n        {position === PlaceholderPosition.TOP && placeholder}\n        <RowContainer\n          showAliasField={showAliasField}\n          singleColumn={singleColumn}\n          className={isGhost ? '' : DRAG_CLASS}\n        >\n          {canDrag ? (\n            <DragAndReorderButton\n              aria-label={t('Drag to reorder')}\n              onMouseDown={event => this.startDrag(event, i)}\n              onTouchStart={event => this.startDrag(event, i)}\n              icon={<IconGrabbable size=\"xs\" />}\n              size=\"zero\"\n              borderless\n            />\n          ) : singleColumn && showAliasField ? null : (\n            <span />\n          )}\n          <QueryField\n            fieldOptions={fieldOptions}\n            gridColumns={gridColumns}\n            fieldValue={col}\n            onChange={value => this.handleUpdateColumn(i, value)}\n            error={this.state.error.get(i)}\n            takeFocus={i === this.props.columns.length - 1}\n            otherColumns={columns}\n            shouldRenderTag\n            disabled={disabled}\n            filterPrimaryOptions={filterPrimaryOptions}\n            filterAggregateParameters={filterAggregateParameters}\n            noFieldsMessage={noFieldsMessage}\n            skipParameterPlaceholder={showAliasField}\n          />\n          {showAliasField && (\n            <AliasField singleColumn={singleColumn}>\n              <AliasInput\n                name=\"alias\"\n                placeholder={t('Alias')}\n                value={col.alias ?? ''}\n                onChange={value => {\n                  this.handleUpdateColumn(i, {\n                    ...col,\n                    alias: value.target.value,\n                  });\n                }}\n              />\n            </AliasField>\n          )}\n          {canDelete || col.kind === 'equation' ? (\n            showAliasField ? (\n              <RemoveButton\n                data-test-id={`remove-column-${i}`}\n                aria-label={t('Remove column')}\n                title={t('Remove column')}\n                onClick={() => this.removeColumn(i)}\n                icon={<IconDelete />}\n                borderless\n              />\n            ) : (\n              <RemoveButton\n                data-test-id={`remove-column-${i}`}\n                aria-label={t('Remove column')}\n                onClick={() => this.removeColumn(i)}\n                icon={<IconDelete />}\n                borderless\n              />\n            )\n          ) : singleColumn && showAliasField ? null : (\n            <span />\n          )}\n        </RowContainer>\n        {position === PlaceholderPosition.BOTTOM && placeholder}\n      </Fragment>\n    );\n  }\n\n  render() {\n    const {className, columns, showAliasField, source} = this.props;\n    const canDelete = columns.filter(field => field.kind !== 'equation').length > 1;\n    const canDrag = columns.length > 1;\n    const canAdd = columns.length < MAX_COL_COUNT;\n    const title = canAdd\n      ? undefined\n      : t(\n          `Sorry, you've reached the maximum number of columns (%d). Delete columns to add more.`,\n          MAX_COL_COUNT\n        );\n\n    const singleColumn = columns.length === 1;\n\n    // Get the longest number of columns so we can layout the rows.\n    // We always want at least 2 columns.\n    const gridColumns =\n      source === WidgetType.ISSUE\n        ? 1\n        : Math.max(\n            ...columns.map(col => {\n              if (col.kind !== 'function') {\n                return 2;\n              }\n              const operation =\n                AGGREGATIONS[col.function[0]] ?? SESSIONS_OPERATIONS[col.function[0]];\n              if (!operation || !operation.parameters) {\n                // Operation should be in the look-up table, but not all operations are (eg. private). This should be changed at some point.\n                return 3;\n              }\n              return operation.parameters.length === 2 ? 3 : 2;\n            })\n          );\n\n    return (\n      <div className={className}>\n        {this.renderGhost({gridColumns, singleColumn})}\n        {!showAliasField && source !== WidgetType.ISSUE && (\n          <RowContainer showAliasField={showAliasField} singleColumn={singleColumn}>\n            <Heading gridColumns={gridColumns}>\n              <StyledSectionHeading>{t('Tag / Field / Function')}</StyledSectionHeading>\n              <StyledSectionHeading>{t('Field Parameter')}</StyledSectionHeading>\n            </Heading>\n          </RowContainer>\n        )}\n        {columns.map((col: Column, i: number) => {\n          // Issue column in Issue widgets are fixed (cannot be changed or deleted)\n          if (this.isFixedIssueColumn(i)) {\n            return this.renderItem(col, i, {\n              singleColumn,\n              canDelete: false,\n              canDrag,\n              gridColumns,\n              disabled: true,\n            });\n          }\n          if (this.isRemainingReleaseHealthAggregate(i)) {\n            return this.renderItem(col, i, {\n              singleColumn,\n              canDelete: false,\n              canDrag,\n              gridColumns,\n            });\n          }\n          return this.renderItem(col, i, {\n            singleColumn,\n            canDelete,\n            canDrag,\n            gridColumns,\n          });\n        })}\n        <RowContainer showAliasField={showAliasField} singleColumn={singleColumn}>\n          <Actions gap={1} showAliasField={showAliasField}>\n            <Button\n              size=\"sm\"\n              aria-label={t('Add a Column')}\n              onClick={this.handleAddColumn}\n              title={title}\n              disabled={!canAdd}\n              icon={<IconAdd isCircled size=\"xs\" />}\n            >\n              {t('Add a Column')}\n            </Button>\n            {source !== WidgetType.ISSUE && source !== WidgetType.RELEASE && (\n              <Button\n                size=\"sm\"\n                aria-label={t('Add an Equation')}\n                onClick={this.handleAddEquation}\n                title={title}\n                disabled={!canAdd}\n                icon={<IconAdd isCircled size=\"xs\" />}\n              >\n                {t('Add an Equation')}\n              </Button>\n            )}\n          </Actions>\n        </RowContainer>\n      </div>\n    );\n  }\n}\n\nconst Actions = styled(ButtonBar)<{showAliasField?: boolean}>`\n  grid-column: ${p => (p.showAliasField ? '1/-1' : ' 2/3')};\n  justify-content: flex-start;\n`;\n\nconst RowContainer = styled('div')<{\n  singleColumn: boolean;\n  showAliasField?: boolean;\n}>`\n  display: grid;\n  grid-template-columns: ${space(3)} 1fr 40px;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  touch-action: none;\n  padding-bottom: ${space(1)};\n\n  ${p =>\n    p.showAliasField &&\n    css`\n      align-items: flex-start;\n      grid-template-columns: ${p.singleColumn ? `1fr` : `${space(3)} 1fr 40px`};\n\n      @media (min-width: ${p.theme.breakpoints.small}) {\n        grid-template-columns: ${p.singleColumn\n          ? `1fr calc(200px + ${space(1)})`\n          : `${space(3)} 1fr calc(200px + ${space(1)}) 40px`};\n      }\n    `};\n`;\n\nconst Ghost = styled('div')`\n  background: ${p => p.theme.background};\n  display: block;\n  position: absolute;\n  padding: ${GHOST_PADDING}px;\n  border-radius: ${p => p.theme.borderRadius};\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.15);\n  width: 710px;\n  opacity: 0.8;\n  cursor: grabbing;\n  padding-right: ${space(2)};\n\n  & > ${RowContainer} {\n    padding-bottom: 0;\n  }\n\n  & svg {\n    cursor: grabbing;\n  }\n`;\n\nconst DragPlaceholder = styled('div')`\n  margin: 0 ${space(3)} ${space(1)} ${space(3)};\n  border: 2px dashed ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  height: ${p => p.theme.form.md.height}px;\n`;\n\nconst Heading = styled('div')<{gridColumns: number}>`\n  grid-column: 2 / 3;\n\n  /* Emulate the grid used in the column editor rows */\n  display: grid;\n  grid-template-columns: repeat(${p => p.gridColumns}, 1fr);\n  grid-column-gap: ${space(1)};\n`;\n\nconst StyledSectionHeading = styled(SectionHeading)`\n  margin: 0;\n`;\n\nconst AliasInput = styled(Input)`\n  min-width: 50px;\n`;\n\nconst AliasField = styled('div')<{singleColumn: boolean}>`\n  margin-top: ${space(1)};\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    margin-top: 0;\n    margin-left: ${space(1)};\n  }\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-row: 2/2;\n    grid-column: ${p => (p.singleColumn ? '1/-1' : '2/2')};\n  }\n`;\n\nconst RemoveButton = styled(Button)`\n  margin-left: ${space(1)};\n  height: ${p => p.theme.form.md.height}px;\n`;\n\nconst DragAndReorderButton = styled(Button)`\n  height: ${p => p.theme.form.md.height}px;\n`;\n\nexport default ColumnEditCollection;\n"],"names":["CustomMeasurementsProvider","_ref","children","organization","selection","api","useApi","state","setState","useState","customMeasurements","useEffect","shouldCancelRequest","features","includes","query","datetime","normalizeDateTimeParams","projects","project","map","String","requestPromise","slug","method","fetchCustomMeasurements","then","response","newCustomMeasurements","Object","keys","reduce","acc","customMeasurement","key","name","functions","unit","fieldType","getFieldTypeFromUnit","catch","e","errorResponse","responseJSON","t","addErrorMessage","getXhrErrorResponseHandler","_jsx","CustomMeasurementsContext","value","displayName","setBodyUserSelect","nextValues","previousValues","userSelect","document","body","style","MozUserSelect","msUserSelect","webkitUserSelect","getPointerPosition","event","property","actual","nativeEvent","window","TouchEvent","targetTouches","MouseEvent","DRAG_CLASS","PlaceholderPosition","ColumnEditCollection","Component","constructor","arguments","_defineProperty","isDragging","draggingIndex","draggingTargetIndex","draggingGrabbedOffset","error","Map","left","top","createRef","this","props","onChange","columns","kind","field","newColumn","FieldValueKind","trackAnalytics","index","updatedColumn","newColumns","prevState","set","parseArithmetic","updateEquationFields","splice","oldColumn","existingColumn","generateFieldAsString","updatedColumnString","isLegalEquationColumn","hasDuplicate","i","length","result","newEquation","lastIndex","fields","tc","term","location","end","offset","substring","start","alias","type","preventDefault","stopPropagation","pointerX","pointerY","dragOffsetX","x","dragOffsetY","y","dragGhostRef","current","ghostDOM","dragItems","querySelectorAll","targetIndex","Array","from","findIndex","dragItem","rects","getBoundingClientRect","thresholdStart","scrollY","thresholdEnd","height","columnIndex","source","column","filter","col","FieldKey","WidgetType","sourceIndex","cleanUpListeners","previousUserSelect","removed","checkColumnErrors","undefined","componentDidMount","portal","createElement","position","zIndex","theme","appendChild","componentWillUnmount","removeChild","keyForColumn","isGhost","function","join","removeEventListener","onDragMove","onDragEnd","removeColumn","startDrag","draggingElement","find","n","contains","currentTarget","getOffsetOfElement","addEventListener","renderGhost","gridColumns","singleColumn","Number","ghost","Ghost","ref","renderItem","createPortal","_ref2","canDelete","canDrag","disabled","fieldOptions","filterAggregateParameters","filterPrimaryOptions","noFieldsMessage","showAliasField","placeholder","DragPlaceholder","className","TOP","BOTTOM","_jsxs","Fragment","RowContainer","DragAndReorderButton","onMouseDown","onTouchStart","icon","IconGrabbable","size","borderless","QueryField","fieldValue","handleUpdateColumn","get","takeFocus","otherColumns","shouldRenderTag","skipParameterPlaceholder","AliasField","AliasInput","target","RemoveButton","title","onClick","IconDelete","render","canAdd","Math","max","operation","AGGREGATIONS","SESSIONS_OPERATIONS","parameters","Heading","StyledSectionHeading","isFixedIssueColumn","isRemainingReleaseHealthAggregate","Actions","gap","Button","handleAddColumn","IconAdd","isCircled","handleAddEquation","_styled","ButtonBar","p","space","css","breakpoints","small","background","borderRadius","border","form","md","SectionHeading","styles","Input"],"sourceRoot":""}