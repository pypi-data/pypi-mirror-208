{"version":3,"file":"chunks/app_components_performance_searchBar_tsx-app_views_performance_landing_utils_tsx-app_views_pe-e5f306.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/performance/searchBar.tsx","webpack:///./app/views/performance/landing/utils.tsx","webpack:///./app/views/performance/vitalDetail/utils.tsx"],"sourcesContent":["import {useCallback, useRef, useState} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport BaseSearchBar from 'sentry/components/searchBar';\nimport {getSearchGroupWithItemMarkedActive} from 'sentry/components/smartSearchBar/utils';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {doDiscoverQuery} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport useApi from 'sentry/utils/useApi';\nimport useOnClickOutside from 'sentry/utils/useOnClickOutside';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport {transactionSummaryRouteWithQuery} from 'sentry/views/performance/transactionSummary/utils';\n\nimport SearchDropdown from '../smartSearchBar/searchDropdown';\nimport {ItemType, SearchGroup} from '../smartSearchBar/types';\n\nexport type SearchBarProps = {\n  eventView: EventView;\n  onSearch: (query: string) => void;\n  organization: Organization;\n  query: string;\n};\n\nfunction SearchBar(props: SearchBarProps) {\n  const {organization, eventView: _eventView, onSearch, query: searchQuery} = props;\n\n  const [searchResults, setSearchResults] = useState<SearchGroup[]>([]);\n  const transactionCount = searchResults[0]?.children?.length || 0;\n  const [highlightedItemIndex, setHighlightedItemIndex] = useState(-1);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const openDropdown = () => setIsDropdownOpen(true);\n  const closeDropdown = () => setIsDropdownOpen(false);\n  const [loading, setLoading] = useState(false);\n  const [searchString, setSearchString] = useState(searchQuery);\n  const containerRef = useRef<HTMLDivElement>(null);\n  useOnClickOutside(containerRef, useCallback(closeDropdown, []));\n\n  const api = useApi();\n  const eventView = _eventView.clone();\n\n  const url = `/organizations/${organization.slug}/events/`;\n\n  const projectIdStrings = (eventView.project as Readonly<number>[])?.map(String);\n\n  const handleSearchChange = query => {\n    setSearchString(query);\n\n    if (query.length === 0) {\n      onSearch('');\n    }\n\n    if (query.length < 3) {\n      setSearchResults([]);\n      closeDropdown();\n      return;\n    }\n\n    openDropdown();\n    getSuggestedTransactions(query);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent) => {\n    const {key} = event;\n\n    if (loading) {\n      return;\n    }\n\n    if (key === 'Escape' && isDropdownOpen) {\n      closeDropdown();\n      return;\n    }\n\n    if (\n      (key === 'ArrowUp' || key === 'ArrowDown') &&\n      isDropdownOpen &&\n      transactionCount > 0\n    ) {\n      const currentHighlightedItem = searchResults[0].children[highlightedItemIndex];\n      const nextHighlightedItemIndex =\n        (highlightedItemIndex + transactionCount + (key === 'ArrowUp' ? -1 : 1)) %\n        transactionCount;\n      setHighlightedItemIndex(nextHighlightedItemIndex);\n      const nextHighlightedItem = searchResults[0].children[nextHighlightedItemIndex];\n\n      let newSearchResults = searchResults;\n      if (currentHighlightedItem) {\n        newSearchResults = getSearchGroupWithItemMarkedActive(\n          searchResults,\n          currentHighlightedItem,\n          false\n        );\n      }\n\n      if (nextHighlightedItem) {\n        newSearchResults = getSearchGroupWithItemMarkedActive(\n          newSearchResults,\n          nextHighlightedItem,\n          true\n        );\n      }\n\n      setSearchResults(newSearchResults);\n      return;\n    }\n\n    if (key === 'Enter') {\n      event.preventDefault();\n      const currentItem = searchResults[0]?.children[highlightedItemIndex];\n\n      if (currentItem?.value) {\n        handleChooseItem(currentItem.value);\n      } else {\n        handleSearch(searchString, true);\n      }\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const getSuggestedTransactions = useCallback(\n    debounce(\n      async query => {\n        try {\n          setLoading(true);\n          const conditions = new MutableSearch('');\n          conditions.addFilterValues('transaction', [wrapQueryInWildcards(query)], false);\n          conditions.addFilterValues('event.type', ['transaction']);\n\n          // clear any active requests\n          if (Object.keys(api.activeRequests).length) {\n            api.clear();\n          }\n\n          const [results] = await doDiscoverQuery<{\n            data: DataItem[];\n          }>(api, url, {\n            field: ['transaction', 'project_id', 'count()'],\n            project: projectIdStrings,\n            sort: '-count()',\n            query: conditions.formatString(),\n            statsPeriod: eventView.statsPeriod,\n            referrer: 'api.performance.transaction-name-search-bar',\n          });\n\n          const parsedResults = results.data.reduce(\n            (searchGroup: SearchGroup, item) => {\n              searchGroup.children.push({\n                value: encodeItemToValue(item),\n                title: item.transaction,\n                type: ItemType.LINK,\n                desc: '',\n              });\n              return searchGroup;\n            },\n            {\n              title: 'All Transactions',\n              children: [],\n              icon: null,\n              type: 'header',\n            }\n          );\n\n          setHighlightedItemIndex(-1);\n\n          setSearchResults([parsedResults]);\n        } catch (_) {\n          throw new Error('Unable to fetch event field values');\n        } finally {\n          setLoading(false);\n        }\n      },\n      DEFAULT_DEBOUNCE_DURATION,\n      {leading: true}\n    ),\n    [api, url, eventView.statsPeriod, projectIdStrings.join(',')]\n  );\n\n  const handleChooseItem = (value: string) => {\n    const item = decodeValueToItem(value);\n    handleSearch(item.transaction, false);\n  };\n\n  const handleClickItemIcon = (value: string) => {\n    const item = decodeValueToItem(value);\n    navigateToItemTransactionSummary(item);\n  };\n\n  const handleSearch = (query: string, asRawText: boolean) => {\n    setSearchResults([]);\n    setSearchString(query);\n    query = new MutableSearch(query).formatString();\n\n    const fullQuery = asRawText ? query : `transaction:\"${query}\"`;\n    onSearch(query ? fullQuery : '');\n    closeDropdown();\n  };\n\n  const navigateToItemTransactionSummary = (item: DataItem) => {\n    const {transaction, project_id} = item;\n\n    const query = eventView.generateQueryStringObject();\n    setSearchResults([]);\n\n    const next = transactionSummaryRouteWithQuery({\n      orgSlug: organization.slug,\n      transaction,\n      projectID: String(project_id),\n      query,\n    });\n\n    browserHistory.push(normalizeUrl(next));\n  };\n\n  return (\n    <Container data-test-id=\"transaction-search-bar\" ref={containerRef}>\n      <BaseSearchBar\n        placeholder={t('Search Transactions')}\n        onChange={handleSearchChange}\n        onKeyDown={handleKeyDown}\n        query={searchString}\n      />\n      {isDropdownOpen && (\n        <SearchDropdown\n          maxMenuHeight={300}\n          searchSubstring={searchString}\n          loading={loading}\n          items={searchResults}\n          onClick={handleChooseItem}\n          onIconClick={handleClickItemIcon}\n        />\n      )}\n    </Container>\n  );\n}\n\nconst encodeItemToValue = (item: DataItem) => {\n  return `${item.transaction}:${item.project_id}`;\n};\n\nconst decodeValueToItem = (value: string): DataItem => {\n  const lastIndex = value.lastIndexOf(':');\n\n  return {\n    project_id: parseInt(value.slice(lastIndex + 1), 10),\n    transaction: value.slice(0, lastIndex),\n  };\n};\n\ninterface DataItem {\n  project_id: number;\n  transaction: string;\n  'count()'?: number;\n}\n\nexport const wrapQueryInWildcards = (query: string) => {\n  if (!query.startsWith('*')) {\n    query = '*' + query;\n  }\n\n  if (!query.endsWith('*')) {\n    query = query + '*';\n  }\n\n  return query;\n};\n\nconst Container = styled('div')`\n  position: relative;\n`;\n\nexport default SearchBar;\n","import {browserHistory} from 'react-router';\nimport {Location} from 'history';\nimport omit from 'lodash/omit';\n\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {\n  formatAbbreviatedNumber,\n  formatFloat,\n  formatPercentage,\n  getDuration,\n} from 'sentry/utils/formatters';\nimport {HistogramData} from 'sentry/utils/performance/histogram/types';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\n\nimport {AxisOption, getTermHelp, PERFORMANCE_TERM} from '../data';\nimport {Rectangle} from '../transactionSummary/transactionVitals/types';\nimport {platformToPerformanceType, PROJECT_PERFORMANCE_TYPE} from '../utils';\n\nexport const LEFT_AXIS_QUERY_KEY = 'left';\nexport const RIGHT_AXIS_QUERY_KEY = 'right';\n\ntype LandingDisplay = {\n  field: LandingDisplayField;\n  label: string;\n};\n\nexport enum LandingDisplayField {\n  ALL = 'all',\n  FRONTEND_PAGELOAD = 'frontend_pageload',\n  FRONTEND_OTHER = 'frontend_other',\n  BACKEND = 'backend',\n  MOBILE = 'mobile',\n}\n\nexport const LANDING_DISPLAYS = [\n  {\n    label: t('All Transactions'),\n    field: LandingDisplayField.ALL,\n  },\n  {\n    label: t('Web Vitals'),\n    field: LandingDisplayField.FRONTEND_PAGELOAD,\n  },\n  {\n    label: t('Frontend'),\n    field: LandingDisplayField.FRONTEND_OTHER,\n  },\n  {\n    label: t('Backend'),\n    field: LandingDisplayField.BACKEND,\n  },\n  {\n    label: t('Mobile'),\n    field: LandingDisplayField.MOBILE,\n  },\n];\n\nexport function excludeTransaction(\n  transaction: string | React.ReactText,\n  props: {eventView: EventView; location: Location}\n) {\n  const {eventView, location} = props;\n\n  const searchConditions = new MutableSearch(eventView.query);\n  searchConditions.addFilterValues('!transaction', [`${transaction}`]);\n\n  browserHistory.push({\n    pathname: location.pathname,\n    query: {\n      ...location.query,\n      cursor: undefined,\n      query: searchConditions.formatString(),\n    },\n  });\n}\n\nexport function getLandingDisplayFromParam(location: Location) {\n  const landingField = decodeScalar(location?.query?.landingDisplay);\n\n  const display = LANDING_DISPLAYS.find(({field}) => field === landingField);\n  return display;\n}\n\nexport function getDefaultDisplayForPlatform(projects: Project[], eventView?: EventView) {\n  const defaultDisplayField = getDefaultDisplayFieldForPlatform(projects, eventView);\n\n  const defaultDisplay = LANDING_DISPLAYS.find(\n    ({field}) => field === defaultDisplayField\n  );\n  return defaultDisplay || LANDING_DISPLAYS[0];\n}\n\nexport function getCurrentLandingDisplay(\n  location: Location,\n  projects: Project[],\n  eventView?: EventView\n): LandingDisplay {\n  const display = getLandingDisplayFromParam(location);\n  if (display) {\n    return display;\n  }\n\n  return getDefaultDisplayForPlatform(projects, eventView);\n}\n\nexport function handleLandingDisplayChange(\n  field: LandingDisplayField,\n  location: Location,\n  projects: Project[],\n  organization: Organization,\n  eventView?: EventView\n) {\n  // Transaction op can affect the display and show no results if it is explicitly set.\n  const query = decodeScalar(location.query.query, '');\n  const searchConditions = new MutableSearch(query);\n  searchConditions.removeFilter('transaction.op');\n\n  const queryWithConditions = {\n    ...omit(location.query, ['landingDisplay', 'sort']),\n    query: searchConditions.formatString(),\n  };\n\n  delete queryWithConditions[LEFT_AXIS_QUERY_KEY];\n  delete queryWithConditions[RIGHT_AXIS_QUERY_KEY];\n\n  const defaultDisplay = getDefaultDisplayFieldForPlatform(projects, eventView);\n  const currentDisplay = getCurrentLandingDisplay(location, projects, eventView).field;\n\n  const newQuery: {query: string; landingDisplay?: LandingDisplayField} =\n    defaultDisplay === field\n      ? {...queryWithConditions}\n      : {...queryWithConditions, landingDisplay: field};\n\n  trackAnalytics('performance_views.landingv3.display_change', {\n    organization,\n    change_to_display: field,\n    default_display: defaultDisplay,\n    current_display: currentDisplay,\n    is_default: defaultDisplay === currentDisplay,\n  });\n\n  browserHistory.push({\n    pathname: location.pathname,\n    query: newQuery,\n  });\n}\n\nexport function getChartWidth(chartData: HistogramData, refPixelRect: Rectangle | null) {\n  const distance = refPixelRect ? refPixelRect.point2.x - refPixelRect.point1.x : 0;\n  const chartWidth = chartData.length * distance;\n\n  return {\n    chartWidth,\n  };\n}\n\nexport function getDefaultDisplayFieldForPlatform(\n  projects: Project[],\n  eventView?: EventView\n) {\n  if (!eventView) {\n    return LandingDisplayField.ALL;\n  }\n  const projectIds = eventView.project;\n\n  const performanceTypeToDisplay = {\n    [PROJECT_PERFORMANCE_TYPE.ANY]: LandingDisplayField.ALL,\n    [PROJECT_PERFORMANCE_TYPE.FRONTEND]: LandingDisplayField.FRONTEND_PAGELOAD,\n    [PROJECT_PERFORMANCE_TYPE.BACKEND]: LandingDisplayField.BACKEND,\n    [PROJECT_PERFORMANCE_TYPE.MOBILE]: LandingDisplayField.MOBILE,\n  };\n  const performanceType = platformToPerformanceType(projects, projectIds);\n  const landingField =\n    performanceTypeToDisplay[performanceType] ?? LandingDisplayField.ALL;\n  return landingField;\n}\n\ntype VitalCardDetail = {\n  formatter: (value: number) => string | number;\n  title: string;\n  tooltip: string;\n};\n\nexport const vitalCardDetails = (\n  organization: Organization\n): {[key: string]: VitalCardDetail | undefined} => {\n  return {\n    'p75(transaction.duration)': {\n      title: t('Duration (p75)'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.P75),\n      formatter: value => getDuration(value / 1000, value >= 1000 ? 3 : 0, true),\n    },\n    'tpm()': {\n      title: t('Throughput'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.THROUGHPUT),\n      formatter: formatAbbreviatedNumber,\n    },\n    'failure_rate()': {\n      title: t('Failure Rate'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.FAILURE_RATE),\n      formatter: value => formatPercentage(value, 2),\n    },\n    'apdex()': {\n      title: t('Apdex'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APDEX),\n      formatter: value => formatFloat(value, 4),\n    },\n    'p75(measurements.frames_slow_rate)': {\n      title: t('Slow Frames (p75)'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.SLOW_FRAMES),\n      formatter: value => formatPercentage(value, 2),\n    },\n    'p75(measurements.frames_frozen_rate)': {\n      title: t('Frozen Frames (p75)'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.FROZEN_FRAMES),\n      formatter: value => formatPercentage(value, 2),\n    },\n    'p75(measurements.app_start_cold)': {\n      title: t('Cold Start (p75)'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_COLD),\n      formatter: value => getDuration(value / 1000, value >= 1000 ? 3 : 0, true),\n    },\n    'p75(measurements.app_start_warm)': {\n      title: t('Warm Start (p75)'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.APP_START_WARM),\n      formatter: value => getDuration(value / 1000, value >= 1000 ? 3 : 0, true),\n    },\n    'p75(measurements.stall_percentage)': {\n      title: t('Stall Percentage (p75)'),\n      tooltip: getTermHelp(organization, PERFORMANCE_TERM.STALL_PERCENTAGE),\n      formatter: value => formatPercentage(value, 2),\n    },\n  };\n};\n\nexport function getDisplayAxes(options: AxisOption[], location: Location) {\n  const leftDefault = options.find(opt => opt.isLeftDefault) || options[0];\n  const rightDefault = options.find(opt => opt.isRightDefault) || options[1];\n\n  const leftAxis =\n    options.find(opt => opt.value === location.query[LEFT_AXIS_QUERY_KEY]) || leftDefault;\n  const rightAxis =\n    options.find(opt => opt.value === location.query[RIGHT_AXIS_QUERY_KEY]) ||\n    rightDefault;\n  return {\n    leftAxis,\n    rightAxis,\n  };\n}\n\nexport function checkIsReactNative(eventView) {\n  // only react native should contain the stall percentage column\n  return Boolean(\n    eventView.getFields().find(field => field.includes('measurements.stall_percentage'))\n  );\n}\n","import {Theme} from '@emotion/react';\nimport {Location, Query} from 'history';\n\nimport MarkLine from 'sentry/components/charts/components/markLine';\nimport {LineChartProps} from 'sentry/components/charts/lineChart';\nimport {getSeriesSelection} from 'sentry/components/charts/utils';\nimport {IconHappy, IconMeh, IconSad} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Series} from 'sentry/types/echarts';\nimport {axisLabelFormatter, tooltipFormatter} from 'sentry/utils/discover/charts';\nimport {aggregateOutputType, getAggregateAlias} from 'sentry/utils/discover/fields';\nimport {WebVital} from 'sentry/utils/fields';\nimport {Browser} from 'sentry/utils/performance/vitals/constants';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {Color} from 'sentry/utils/theme';\nimport {AlertType} from 'sentry/views/alerts/wizard/options';\n\nexport function generateVitalDetailRoute({orgSlug}: {orgSlug: string}): string {\n  return `/organizations/${orgSlug}/performance/vitaldetail/`;\n}\n\nexport const webVitalPoor = {\n  [WebVital.FP]: 3000,\n  [WebVital.FCP]: 3000,\n  [WebVital.LCP]: 4000,\n  [WebVital.FID]: 300,\n  [WebVital.CLS]: 0.25,\n};\n\nexport const webVitalMeh = {\n  [WebVital.FP]: 1000,\n  [WebVital.FCP]: 1000,\n  [WebVital.LCP]: 2500,\n  [WebVital.FID]: 100,\n  [WebVital.CLS]: 0.1,\n};\n\nexport enum VitalState {\n  POOR = 'Poor',\n  MEH = 'Meh',\n  GOOD = 'Good',\n}\n\nexport const vitalStateColors: Record<VitalState, Color> = {\n  [VitalState.POOR]: 'red300',\n  [VitalState.MEH]: 'yellow300',\n  [VitalState.GOOD]: 'green300',\n};\n\nexport const vitalStateIcons: Record<VitalState, React.ReactNode> = {\n  [VitalState.POOR]: <IconSad color={vitalStateColors[VitalState.POOR]} />,\n  [VitalState.MEH]: <IconMeh color={vitalStateColors[VitalState.MEH]} />,\n  [VitalState.GOOD]: <IconHappy color={vitalStateColors[VitalState.GOOD]} />,\n};\n\nexport function vitalDetailRouteWithQuery({\n  orgSlug,\n  vitalName,\n  projectID,\n  query,\n}: {\n  orgSlug: string;\n  query: Query;\n  vitalName: string;\n  projectID?: string | string[];\n}) {\n  const pathname = generateVitalDetailRoute({\n    orgSlug,\n  });\n\n  return {\n    pathname,\n    query: {\n      vitalName,\n      project: projectID,\n      environment: query.environment,\n      statsPeriod: query.statsPeriod,\n      start: query.start,\n      end: query.end,\n      query: query.query,\n    },\n  };\n}\n\nexport function vitalNameFromLocation(location: Location): WebVital {\n  const _vitalName = decodeScalar(location.query.vitalName);\n\n  const vitalName = Object.values(WebVital).find(v => v === _vitalName);\n\n  if (vitalName) {\n    return vitalName;\n  }\n  return WebVital.LCP;\n}\n\nexport function getVitalChartTitle(webVital: WebVital): string {\n  if (webVital === WebVital.CLS) {\n    return t('CLS p75');\n  }\n  return t('Duration p75');\n}\n\nexport function getVitalDetailTablePoorStatusFunction(vitalName: WebVital): string {\n  const vitalThreshold = webVitalPoor[vitalName];\n  const statusFunction = `compare_numeric_aggregate(${getAggregateAlias(\n    `p75(${vitalName})`\n  )},greater,${vitalThreshold})`;\n  return statusFunction;\n}\n\nexport function getVitalDetailTableMehStatusFunction(vitalName: WebVital): string {\n  const vitalThreshold = webVitalMeh[vitalName];\n  const statusFunction = `compare_numeric_aggregate(${getAggregateAlias(\n    `p75(${vitalName})`\n  )},greater,${vitalThreshold})`;\n  return statusFunction;\n}\n\nexport const vitalMap: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]: t('First Contentful Paint'),\n  [WebVital.CLS]: t('Cumulative Layout Shift'),\n  [WebVital.FID]: t('First Input Delay'),\n  [WebVital.LCP]: t('Largest Contentful Paint'),\n};\n\nexport const vitalChartTitleMap = vitalMap;\n\nexport const vitalDescription: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]: t(\n    'First Contentful Paint (FCP) measures the amount of time the first content takes to render in the viewport. Like FP, this could also show up in any form from the document object model (DOM), such as images, SVGs, or text blocks. At the moment, there is support for FCP in the following browsers:'\n  ),\n  [WebVital.CLS]: t(\n    'Cumulative Layout Shift (CLS) is the sum of individual layout shift scores for every unexpected element shift during the rendering process. Imagine navigating to an article and trying to click a link before the page finishes loading. Before your cursor even gets there, the link may have shifted down due to an image rendering. Rather than using duration for this Web Vital, the CLS score represents the degree of disruptive and visually unstable shifts. At the moment, there is support for CLS in the following browsers:'\n  ),\n  [WebVital.FID]: t(\n    'First Input Delay (FID) measures the response time when the user tries to interact with the viewport. Actions maybe include clicking a button, link or other custom Javascript controller. It is key in helping the user determine if a page is usable or not. At the moment, there is support for FID in the following browsers:'\n  ),\n  [WebVital.LCP]: t(\n    'Largest Contentful Paint (LCP) measures the render time for the largest content to appear in the viewport. This may be in any form from the document object model (DOM), such as images, SVGs, or text blocks. It’s the largest pixel area in the viewport, thus most visually defining. LCP helps developers understand how long it takes to see the main content on the page. At the moment, there is support for LCP in the following browsers:'\n  ),\n};\n\nexport const vitalAbbreviations: Partial<Record<WebVital, string>> = {\n  [WebVital.FCP]: 'FCP',\n  [WebVital.CLS]: 'CLS',\n  [WebVital.FID]: 'FID',\n  [WebVital.LCP]: 'LCP',\n};\n\nexport const vitalAlertTypes: Partial<Record<WebVital, AlertType>> = {\n  [WebVital.FCP]: 'custom',\n  [WebVital.CLS]: 'cls',\n  [WebVital.FID]: 'fid',\n  [WebVital.LCP]: 'lcp',\n};\n\nexport function getMaxOfSeries(series: Series[]) {\n  let max = -Infinity;\n  for (const {data} of series) {\n    for (const point of data) {\n      max = Math.max(max, point.value);\n    }\n  }\n  return max;\n}\n\nexport const vitalSupportedBrowsers: Partial<Record<WebVital, Browser[]>> = {\n  [WebVital.LCP]: [Browser.CHROME, Browser.EDGE, Browser.OPERA],\n  [WebVital.FID]: [\n    Browser.CHROME,\n    Browser.EDGE,\n    Browser.OPERA,\n    Browser.FIREFOX,\n    Browser.SAFARI,\n    Browser.IE,\n  ],\n  [WebVital.CLS]: [Browser.CHROME, Browser.EDGE, Browser.OPERA],\n  [WebVital.FP]: [Browser.CHROME, Browser.EDGE, Browser.OPERA],\n  [WebVital.FCP]: [\n    Browser.CHROME,\n    Browser.EDGE,\n    Browser.OPERA,\n    Browser.FIREFOX,\n    Browser.SAFARI,\n  ],\n  [WebVital.TTFB]: [\n    Browser.CHROME,\n    Browser.EDGE,\n    Browser.OPERA,\n    Browser.FIREFOX,\n    Browser.SAFARI,\n    Browser.IE,\n  ],\n};\n\nexport function getVitalChartDefinitions({\n  theme,\n  location,\n  vital,\n  yAxis,\n}: {\n  location: Location;\n  theme: Theme;\n  vital: string;\n  yAxis: string;\n}) {\n  const utc = decodeScalar(location.query.utc) !== 'false';\n\n  const vitalPoor = webVitalPoor[vital];\n  const vitalMeh = webVitalMeh[vital];\n\n  const legend = {\n    right: 10,\n    top: 0,\n    selected: getSeriesSelection(location),\n  };\n\n  const chartOptions: Omit<LineChartProps, 'series'> = {\n    grid: {\n      left: '5px',\n      right: '10px',\n      top: '35px',\n      bottom: '0px',\n    },\n    seriesOptions: {\n      showSymbol: false,\n    },\n    tooltip: {\n      trigger: 'axis',\n      valueFormatter: (value: number, seriesName?: string) =>\n        tooltipFormatter(\n          value,\n          aggregateOutputType(vital === WebVital.CLS ? seriesName : yAxis)\n        ),\n    },\n    yAxis: {\n      min: 0,\n      max: vitalPoor,\n      axisLabel: {\n        color: theme.chartLabel,\n        showMaxLabel: false,\n        // coerces the axis to be time based\n        formatter: (value: number) =>\n          axisLabelFormatter(value, aggregateOutputType(yAxis)),\n      },\n    },\n  };\n\n  const markLines = [\n    {\n      seriesName: 'Thresholds',\n      type: 'line' as const,\n      data: [],\n      markLine: MarkLine({\n        silent: true,\n        lineStyle: {\n          color: theme.red300,\n          type: 'dashed',\n          width: 1.5,\n        },\n        label: {\n          show: true,\n          position: 'insideEndTop',\n          formatter: t('Poor'),\n        },\n        data: [\n          {\n            yAxis: vitalPoor,\n          } as any, // TODO(ts): date on this type is likely incomplete (needs @types/echarts@4.6.2)\n        ],\n      }),\n    },\n    {\n      seriesName: 'Thresholds',\n      type: 'line' as const,\n      data: [],\n      markLine: MarkLine({\n        silent: true,\n        lineStyle: {\n          color: theme.yellow300,\n          type: 'dashed',\n          width: 1.5,\n        },\n        label: {\n          show: true,\n          position: 'insideEndTop',\n          formatter: t('Meh'),\n        },\n        data: [\n          {\n            yAxis: vitalMeh,\n          } as any, // TODO(ts): date on this type is likely incomplete (needs @types/echarts@4.6.2)\n        ],\n      }),\n    },\n  ];\n\n  return {\n    vitalPoor,\n    vitalMeh,\n    legend,\n    chartOptions,\n    markLines,\n    utc,\n  };\n}\n"],"names":["SearchBar","props","organization","eventView","_eventView","onSearch","query","searchQuery","searchResults","setSearchResults","useState","transactionCount","children","length","highlightedItemIndex","setHighlightedItemIndex","isDropdownOpen","setIsDropdownOpen","closeDropdown","loading","setLoading","searchString","setSearchString","containerRef","useRef","useOnClickOutside","useCallback","api","useApi","clone","url","slug","projectIdStrings","project","map","String","getSuggestedTransactions","debounce","async","conditions","MutableSearch","addFilterValues","wrapQueryInWildcards","Object","keys","activeRequests","clear","results","doDiscoverQuery","field","sort","formatString","statsPeriod","referrer","parsedResults","data","reduce","searchGroup","item","push","value","encodeItemToValue","title","transaction","type","ItemType","desc","icon","_","Error","DEFAULT_DEBOUNCE_DURATION","leading","join","handleChooseItem","decodeValueToItem","handleSearch","asRawText","_jsxs","Container","ref","_jsx","BaseSearchBar","placeholder","t","onChange","onKeyDown","event","key","currentHighlightedItem","nextHighlightedItemIndex","nextHighlightedItem","newSearchResults","getSearchGroupWithItemMarkedActive","preventDefault","currentItem","SearchDropdown","maxMenuHeight","searchSubstring","items","onClick","onIconClick","project_id","generateQueryStringObject","next","transactionSummaryRouteWithQuery","orgSlug","projectID","browserHistory","normalizeUrl","navigateToItemTransactionSummary","displayName","lastIndex","lastIndexOf","parseInt","slice","startsWith","endsWith","_styled","target","name","styles","LEFT_AXIS_QUERY_KEY","RIGHT_AXIS_QUERY_KEY","LandingDisplayField","LANDING_DISPLAYS","label","ALL","FRONTEND_PAGELOAD","FRONTEND_OTHER","BACKEND","MOBILE","excludeTransaction","location","searchConditions","pathname","cursor","undefined","getLandingDisplayFromParam","landingField","decodeScalar","landingDisplay","find","_ref","getDefaultDisplayForPlatform","projects","defaultDisplayField","getDefaultDisplayFieldForPlatform","_ref2","getCurrentLandingDisplay","handleLandingDisplayChange","removeFilter","queryWithConditions","omit","defaultDisplay","currentDisplay","newQuery","trackAnalytics","change_to_display","default_display","current_display","is_default","projectIds","PROJECT_PERFORMANCE_TYPE","platformToPerformanceType","vitalCardDetails","tooltip","getTermHelp","PERFORMANCE_TERM","formatter","getDuration","formatAbbreviatedNumber","formatPercentage","formatFloat","checkIsReactNative","Boolean","getFields","includes","webVitalPoor","WebVital","webVitalMeh","VitalState","vitalStateColors","POOR","MEH","GOOD","vitalStateIcons","IconSad","color","IconMeh","IconHappy","vitalDetailRouteWithQuery","vitalName","generateVitalDetailRoute","environment","start","end","vitalNameFromLocation","_vitalName","values","v","getVitalChartTitle","webVital","getVitalDetailTablePoorStatusFunction","vitalThreshold","getAggregateAlias","getVitalDetailTableMehStatusFunction","vitalMap","vitalDescription","vitalAbbreviations","vitalAlertTypes","getMaxOfSeries","series","max","point","Math","vitalSupportedBrowsers","Browser","getVitalChartDefinitions","_ref3","theme","vital","yAxis","utc","vitalPoor","vitalMeh","legend","right","top","selected","getSeriesSelection","chartOptions","grid","left","bottom","seriesOptions","showSymbol","trigger","valueFormatter","seriesName","tooltipFormatter","aggregateOutputType","min","axisLabel","chartLabel","showMaxLabel","axisLabelFormatter","markLines","markLine","MarkLine","silent","lineStyle","red300","width","show","position","yellow300"],"sourceRoot":""}