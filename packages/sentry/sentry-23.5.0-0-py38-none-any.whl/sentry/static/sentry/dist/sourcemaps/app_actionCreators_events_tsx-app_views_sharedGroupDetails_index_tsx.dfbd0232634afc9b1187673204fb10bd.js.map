{"version":3,"file":"chunks/app_actionCreators_events_tsx-app_views_sharedGroupDetails_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/events.tsx","webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/components/events/eventEntries.tsx","webpack:///./app/components/events/eventMessage.tsx","webpack:///./app/utils/getPeriod.tsx","webpack:///./app/views/sharedGroupDetails/sharedGroupHeader.tsx","webpack:///./app/views/sharedGroupDetails/index.tsx"],"sourcesContent":["import {LocationDescriptor} from 'history';\nimport pick from 'lodash/pick';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client, ResponseMeta} from 'sentry/api';\nimport {canIncludePreviousPeriod} from 'sentry/components/charts/utils';\nimport {t} from 'sentry/locale';\nimport {\n  DateString,\n  EventsStats,\n  IssueAttachment,\n  MultiSeriesEventsStats,\n  OrganizationSummary,\n} from 'sentry/types';\nimport {LocationQuery} from 'sentry/utils/discover/eventView';\nimport {DiscoverDatasets} from 'sentry/utils/discover/types';\nimport {getPeriod} from 'sentry/utils/getPeriod';\nimport {PERFORMANCE_URL_PARAM} from 'sentry/utils/performance/constants';\nimport {QueryBatching} from 'sentry/utils/performance/contexts/genericQueryBatcher';\nimport {\n  ApiQueryKey,\n  getApiQueryData,\n  setApiQueryData,\n  useApiQuery,\n  UseApiQueryOptions,\n  useMutation,\n  UseMutationOptions,\n  useQueryClient,\n} from 'sentry/utils/queryClient';\nimport RequestError from 'sentry/utils/requestError/requestError';\nimport useApi from 'sentry/utils/useApi';\nimport useOrganization from 'sentry/utils/useOrganization';\n\ntype Options = {\n  organization: OrganizationSummary;\n  partial: boolean;\n  comparisonDelta?: number;\n  dataset?: DiscoverDatasets;\n  end?: DateString;\n  environment?: Readonly<string[]>;\n  excludeOther?: boolean;\n  field?: string[];\n  generatePathname?: (org: OrganizationSummary) => string;\n  includePrevious?: boolean;\n  interval?: string;\n  limit?: number;\n  orderby?: string;\n  period?: string | null;\n  project?: Readonly<number[]>;\n  query?: string;\n  queryBatching?: QueryBatching;\n  queryExtras?: Record<string, string>;\n  referrer?: string;\n  start?: DateString;\n  team?: Readonly<string | string[]>;\n  topEvents?: number;\n  withoutZerofill?: boolean;\n  yAxis?: string | string[];\n};\n\n/**\n * Make requests to `events-stats` endpoint\n *\n * @param {Object} api API client instance\n * @param {Object} options Request parameters\n * @param {Object} options.organization Organization object\n * @param {Number[]} options.project List of project ids\n * @param {String[]} options.environment List of environments to query for\n * @param {Boolean} options.excludeOther Exclude the \"Other\" series when making a topEvents query\n * @param {String[]} options.team List of teams to query for\n * @param {String} options.period Time period to query for, in the format: <integer><units> where units are \"d\" or \"h\"\n * @param {String} options.interval Time interval to group results in, in the format: <integer><units> where units are \"d\", \"h\", \"m\", \"s\"\n * @param {Number} options.comparisonDelta Comparison delta for change alert event stats to include comparison stats\n * @param {Boolean} options.includePrevious Should request also return reqsults for previous period?\n * @param {Number} options.limit The number of rows to return\n * @param {String} options.query Search query\n * @param {QueryBatching} options.queryBatching A container for batching functions from a provider\n * @param {Record<string, string>} options.queryExtras A list of extra query parameters\n * @param {(org: OrganizationSummary) => string} options.generatePathname A function that returns an override for the pathname\n */\nexport const doEventsRequest = <IncludeAllArgsType extends boolean = false>(\n  api: Client,\n  {\n    organization,\n    project,\n    environment,\n    team,\n    period,\n    start,\n    end,\n    interval,\n    comparisonDelta,\n    includePrevious,\n    query,\n    yAxis,\n    field,\n    topEvents,\n    orderby,\n    partial,\n    withoutZerofill,\n    referrer,\n    queryBatching,\n    generatePathname,\n    queryExtras,\n    excludeOther,\n    includeAllArgs,\n    dataset,\n  }: {includeAllArgs?: IncludeAllArgsType} & Options\n): IncludeAllArgsType extends true\n  ? Promise<\n      [EventsStats | MultiSeriesEventsStats, string | undefined, ResponseMeta | undefined]\n    >\n  : Promise<EventsStats | MultiSeriesEventsStats> => {\n  const pathname =\n    generatePathname?.(organization) ??\n    `/organizations/${organization.slug}/events-stats/`;\n\n  const shouldDoublePeriod = canIncludePreviousPeriod(includePrevious, period);\n  const urlQuery = Object.fromEntries(\n    Object.entries({\n      interval,\n      comparisonDelta,\n      project,\n      environment,\n      team,\n      query,\n      yAxis,\n      field,\n      topEvents,\n      orderby,\n      partial: partial ? '1' : undefined,\n      withoutZerofill: withoutZerofill ? '1' : undefined,\n      referrer: referrer ? referrer : 'api.organization-event-stats',\n      excludeOther: excludeOther ? '1' : undefined,\n      dataset,\n    }).filter(([, value]) => typeof value !== 'undefined')\n  );\n\n  // Doubling period for absolute dates is not accurate unless starting and\n  // ending times are the same (at least for daily intervals). This is\n  // the tradeoff for now.\n  const periodObj = getPeriod({period, start, end}, {shouldDoublePeriod});\n\n  const queryObject = {\n    includeAllArgs,\n    query: {\n      ...urlQuery,\n      ...periodObj,\n      ...queryExtras,\n    },\n  };\n\n  if (queryBatching?.batchRequest) {\n    return queryBatching.batchRequest(api, pathname, queryObject);\n  }\n\n  return api.requestPromise<IncludeAllArgsType>(pathname, queryObject);\n};\n\nexport type EventQuery = {\n  field: string[];\n  query: string;\n  dataset?: DiscoverDatasets;\n  environment?: string[];\n  equation?: string[];\n  noPagination?: boolean;\n  per_page?: number;\n  project?: string | string[];\n  referrer?: string;\n  sort?: string | string[];\n  team?: string | string[];\n};\n\nexport type TagSegment = {\n  count: number;\n  name: string;\n  url: LocationDescriptor;\n  value: string;\n  isOther?: boolean;\n  key?: string;\n};\n\nexport type Tag = {\n  key: string;\n  topValues: Array<TagSegment>;\n};\n\n/**\n * Fetches tag facets for a query\n */\nexport function fetchTagFacets(\n  api: Client,\n  orgSlug: string,\n  query: EventQuery\n): Promise<Tag[]> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  return api.requestPromise(`/organizations/${orgSlug}/events-facets/`, {\n    query: queryOption,\n  });\n}\n\n/**\n * Fetches total count of events for a given query\n */\nexport function fetchTotalCount(\n  api: Client,\n  orgSlug: string,\n  query: EventQuery & LocationQuery\n): Promise<number> {\n  const urlParams = pick(query, Object.values(PERFORMANCE_URL_PARAM));\n\n  const queryOption = {...urlParams, query: query.query};\n\n  type Response = {\n    count: number;\n  };\n\n  return api\n    .requestPromise(`/organizations/${orgSlug}/events-meta/`, {\n      query: queryOption,\n    })\n    .then((res: Response) => res.count);\n}\n\ntype FetchEventAttachmentParameters = {\n  eventId: string;\n  orgSlug: string;\n  projectSlug: string;\n};\n\ntype FetchEventAttachmentResponse = IssueAttachment[];\n\nexport const makeFetchEventAttachmentsQueryKey = ({\n  orgSlug,\n  projectSlug,\n  eventId,\n}: FetchEventAttachmentParameters): ApiQueryKey => [\n  `/projects/${orgSlug}/${projectSlug}/events/${eventId}/attachments/`,\n];\n\nexport const useFetchEventAttachments = (\n  {orgSlug, projectSlug, eventId}: FetchEventAttachmentParameters,\n  options: Partial<UseApiQueryOptions<FetchEventAttachmentResponse>> = {}\n) => {\n  const organization = useOrganization();\n  return useApiQuery<FetchEventAttachmentResponse>(\n    [`/projects/${orgSlug}/${projectSlug}/events/${eventId}/attachments/`],\n    {\n      staleTime: Infinity,\n      ...options,\n      enabled:\n        (organization.features?.includes('event-attachments') ?? false) &&\n        options.enabled !== false,\n    }\n  );\n};\n\ntype DeleteEventAttachmentVariables = {\n  attachmentId: string;\n  eventId: string;\n  orgSlug: string;\n  projectSlug: string;\n};\n\ntype DeleteEventAttachmentResponse = unknown;\n\ntype DeleteEventAttachmentContext = {\n  previous?: IssueAttachment[];\n};\n\ntype DeleteEventAttachmentOptions = UseMutationOptions<\n  DeleteEventAttachmentResponse,\n  RequestError,\n  DeleteEventAttachmentVariables,\n  DeleteEventAttachmentContext\n>;\n\nexport const useDeleteEventAttachmentOptimistic = (\n  incomingOptions: Partial<DeleteEventAttachmentOptions> = {}\n) => {\n  const api = useApi({persistInFlight: true});\n  const queryClient = useQueryClient();\n\n  const options: DeleteEventAttachmentOptions = {\n    ...incomingOptions,\n    mutationFn: ({orgSlug, projectSlug, eventId, attachmentId}) => {\n      return api.requestPromise(\n        `/projects/${orgSlug}/${projectSlug}/events/${eventId}/attachments/${attachmentId}/`,\n        {method: 'DELETE'}\n      );\n    },\n    onMutate: async variables => {\n      await queryClient.cancelQueries(makeFetchEventAttachmentsQueryKey(variables));\n\n      const previous = getApiQueryData<FetchEventAttachmentResponse>(\n        queryClient,\n        makeFetchEventAttachmentsQueryKey(variables)\n      );\n\n      setApiQueryData<FetchEventAttachmentResponse>(\n        queryClient,\n        makeFetchEventAttachmentsQueryKey(variables),\n        oldData => {\n          if (!Array.isArray(oldData)) {\n            return oldData;\n          }\n\n          return oldData.filter(attachment => attachment?.id !== variables.attachmentId);\n        }\n      );\n\n      incomingOptions.onMutate?.(variables);\n\n      return {previous};\n    },\n    onError: (error, variables, context) => {\n      addErrorMessage(t('An error occurred while deleting the attachment'));\n\n      if (context) {\n        setApiQueryData(\n          queryClient,\n          makeFetchEventAttachmentsQueryKey(variables),\n          context.previous\n        );\n      }\n\n      incomingOptions.onError?.(error, variables, context);\n    },\n  };\n\n  return useMutation(options);\n};\n","import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport {CommitRow} from 'sentry/components/commitRow';\nimport {EventEvidence} from 'sentry/components/events/eventEvidence';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {\n  Entry,\n  Event,\n  Group,\n  Organization,\n  Project,\n  SharedViewOrganization,\n} from 'sentry/types';\nimport {isNotSharedOrganization} from 'sentry/types/utils';\nimport {objectIsEmpty} from 'sentry/utils';\n\nimport {EventContexts} from './contexts';\nimport {EventDevice} from './device';\nimport {EventAttachments} from './eventAttachments';\nimport {EventCause} from './eventCause';\nimport {EventDataSection} from './eventDataSection';\nimport {EventEntry} from './eventEntry';\nimport {EventErrors} from './eventErrors';\nimport {EventExtraData} from './eventExtraData';\nimport {EventSdk} from './eventSdk';\nimport {EventTagsAndScreenshot} from './eventTagsAndScreenshot';\nimport {EventViewHierarchy} from './eventViewHierarchy';\nimport {EventGroupingInfo} from './groupingInfo';\nimport {EventPackageData} from './packageData';\nimport {EventRRWebIntegration} from './rrwebIntegration';\nimport {DataSection} from './styles';\nimport {EventUserFeedback} from './userFeedback';\n\ntype Props = {\n  location: Location;\n  /**\n   * The organization can be the shared view on a public issue view.\n   */\n  organization: Organization | SharedViewOrganization;\n  project: Project;\n  className?: string;\n  event?: Event;\n  group?: Group;\n  isShare?: boolean;\n  showTagSummary?: boolean;\n};\n\nfunction EventEntries({\n  organization,\n  project,\n  location,\n  event,\n  group,\n  className,\n  isShare = false,\n  showTagSummary = true,\n}: Props) {\n  const orgSlug = organization.slug;\n  const projectSlug = project.slug;\n  const orgFeatures = organization?.features ?? [];\n\n  if (!event) {\n    return (\n      <LatestEventNotAvailable>\n        <h3>{t('Latest Event Not Available')}</h3>\n      </LatestEventNotAvailable>\n    );\n  }\n\n  const hasContext = !objectIsEmpty(event.user ?? {}) || !objectIsEmpty(event.contexts);\n\n  return (\n    <div className={className}>\n      <EventErrors event={event} project={project} isShare={isShare} />\n      {!isShare && isNotSharedOrganization(organization) && (\n        <EventCause\n          project={project}\n          eventId={event.id}\n          group={group}\n          commitRow={CommitRow}\n        />\n      )}\n      {event.userReport && group && (\n        <EventDataSection title=\"User Feedback\" type=\"user-feedback\">\n          <EventUserFeedback\n            report={event.userReport}\n            orgId={orgSlug}\n            issueId={group.id}\n          />\n        </EventDataSection>\n      )}\n      {showTagSummary && (\n        <EventTagsAndScreenshot\n          event={event}\n          organization={organization as Organization}\n          projectSlug={projectSlug}\n          location={location}\n          isShare={isShare}\n        />\n      )}\n      <EventEvidence event={event} projectSlug={project.slug} />\n      <Entries\n        definedEvent={event}\n        projectSlug={projectSlug}\n        group={group}\n        organization={organization}\n        isShare={isShare}\n      />\n      {hasContext && <EventContexts group={group} event={event} />}\n      <EventExtraData event={event} />\n      <EventPackageData event={event} />\n      <EventDevice event={event} />\n      {!isShare && <EventViewHierarchy event={event} project={project} />}\n      {!isShare && <EventAttachments event={event} projectSlug={projectSlug} />}\n      <EventSdk sdk={event.sdk} meta={event._meta?.sdk} />\n      {!isShare && event.groupID && (\n        <EventGroupingInfo\n          projectSlug={projectSlug}\n          event={event}\n          showGroupingConfig={\n            orgFeatures.includes('set-grouping-config') && 'groupingConfig' in event\n          }\n          group={group}\n        />\n      )}\n      {!isShare && (\n        <EventRRWebIntegration event={event} orgId={orgSlug} projectSlug={projectSlug} />\n      )}\n    </div>\n  );\n}\n\nfunction Entries({\n  definedEvent,\n  projectSlug,\n  isShare,\n  group,\n  organization,\n}: {\n  definedEvent: Event;\n  projectSlug: string;\n  isShare?: boolean;\n} & Pick<Props, 'group' | 'organization'>) {\n  if (!Array.isArray(definedEvent.entries)) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      {(definedEvent.entries as Array<Entry>).map((entry, entryIdx) => (\n        <EventEntry\n          key={entryIdx}\n          projectSlug={projectSlug}\n          group={group}\n          organization={organization}\n          event={definedEvent}\n          entry={entry}\n          isShare={isShare}\n        />\n      ))}\n    </Fragment>\n  );\n}\n\nconst LatestEventNotAvailable = styled('div')`\n  padding: ${space(2)} ${space(4)};\n`;\n\nconst BorderlessEventEntries = styled(EventEntries)`\n  & ${DataSection} {\n    margin-left: 0 !important;\n    margin-right: 0 !important;\n    padding: ${space(3)} 0 0 0;\n  }\n  & ${DataSection}:first-child {\n    padding-top: 0;\n    border-top: 0;\n  }\n`;\n\nexport {EventEntries, BorderlessEventEntries};\n","import styled from '@emotion/styled';\n\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport {space} from 'sentry/styles/space';\nimport {Level} from 'sentry/types';\n\ntype Props = {\n  annotations?: React.ReactNode;\n  className?: string;\n  hasGuideAnchor?: boolean;\n  level?: Level;\n  levelIndicatorSize?: string;\n  message?: React.ReactNode;\n};\n\nconst EventMessage = styled(\n  ({className, level, levelIndicatorSize, message, annotations}: Props) => (\n    <div className={className}>\n      {level && (\n        <ErrorLevel size={levelIndicatorSize} level={level}>\n          {level}\n        </ErrorLevel>\n      )}\n\n      {message && <Message>{message}</Message>}\n\n      {annotations}\n    </div>\n  )\n)`\n  display: flex;\n  gap: ${space(1)};\n  align-items: center;\n  position: relative;\n  line-height: 1.2;\n  overflow: hidden;\n`;\n\nconst Message = styled('span')`\n  ${p => p.theme.overflowEllipsis}\n  width: auto;\n  max-height: 38px;\n`;\n\nexport default EventMessage;\n","import moment from 'moment';\n\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {DateString} from 'sentry/types';\nimport {getUtcDateString} from 'sentry/utils/dates';\n\ntype DateObject = {\n  /**\n   * Ending date object\n   */\n  end?: DateString;\n  /**\n   * Relative period string in format \"<int><unit>\" (e.g. 4d for 4 days)\n   */\n  period?: string | null;\n  /**\n   * Starting date object\n   */\n  start?: DateString;\n};\n\ntype Options = {\n  /**\n   * Doubles the given period (useful for getting previous period data)\n   */\n  shouldDoublePeriod?: boolean;\n};\n\n/**\n * Gets the period to query with if we need to double the initial period in order\n * to get data for the previous period\n *\n * Returns an object with either a period or start/end dates ({statsPeriod: string} or {start: string, end: string})\n */\nexport function getPeriod(\n  {period, start, end}: DateObject,\n  {shouldDoublePeriod}: Options = {}\n) {\n  if (!period && !start && !end) {\n    period = DEFAULT_STATS_PERIOD;\n  }\n\n  // you can not specify both relative and absolute periods\n  // relative period takes precedence\n  if (period) {\n    if (!shouldDoublePeriod) {\n      return {statsPeriod: period};\n    }\n    const [, periodNumber, periodLength] = period.match(/([0-9]+)([mhdw])/)!;\n\n    return {statsPeriod: `${parseInt(periodNumber, 10) * 2}${periodLength}`};\n  }\n\n  if (!start || !end) {\n    throw new Error('start and end required');\n  }\n\n  const formattedStart = getUtcDateString(start);\n  const formattedEnd = getUtcDateString(end);\n\n  if (shouldDoublePeriod) {\n    // get duration of end - start and double\n    const diff = moment(end).diff(moment(start));\n\n    const previousPeriodStart = moment(start).subtract(diff);\n\n    // This is not as accurate as having 2 start/end objs\n    return {\n      start: getUtcDateString(previousPeriodStart),\n      end: formattedEnd,\n    };\n  }\n\n  return {\n    start: formattedStart,\n    end: formattedEnd,\n  };\n}\n","import styled from '@emotion/styled';\n\nimport EventMessage from 'sentry/components/events/eventMessage';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport ShortId from 'sentry/components/shortId';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Group, IssueCategory} from 'sentry/types';\n\nimport UnhandledTag, {TagAndMessageWrapper} from '../issueDetails/unhandledTag';\n\ntype Props = {\n  group: Group;\n};\n\nfunction SharedGroupHeader({group}: Props) {\n  return (\n    <Wrapper>\n      <Details>\n        <TitleWrap>\n          <Title>{group.title}</Title>\n          <ShortIdWrapper>\n            <ShortId\n              shortId={group.shortId}\n              avatar={<ProjectBadge project={group.project} avatarSize={20} hideName />}\n            />\n            {group.issueCategory === IssueCategory.PERFORMANCE && (\n              <FeatureBadge\n                type=\"beta\"\n                title={t(\n                  'Not all features have been implemented for shared Performance Issues and these issues may be missing context.'\n                )}\n              />\n            )}\n          </ShortIdWrapper>\n        </TitleWrap>\n\n        <TagAndMessageWrapper>\n          {group.isUnhandled && <UnhandledTag />}\n          <EventMessage message={group.culprit} />\n        </TagAndMessageWrapper>\n      </Details>\n    </Wrapper>\n  );\n}\n\nexport default SharedGroupHeader;\n\nconst Wrapper = styled('div')`\n  padding: ${space(3)} ${space(4)} ${space(3)} ${space(4)};\n  border-bottom: 1px solid ${p => p.theme.border};\n  position: relative;\n`;\n\nconst Details = styled('div')`\n  max-width: 960px;\n  margin: 0 auto;\n`;\n\nconst ShortIdWrapper = styled('div')`\n  display: flex;\n`;\n\nconst TitleWrap = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  align-items: center;\n  margin-bottom: ${space(1)};\n`;\n\nconst Title = styled('h3')`\n  color: ${p => p.theme.headingColor};\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  line-height: ${p => p.theme.text.lineHeightHeading};\n  margin-right: ${space(2)};\n  margin-bottom: 0;\n  ${p => p.theme.overflowEllipsis};\n\n  @media (min-width: ${props => props.theme.breakpoints.small}) {\n    font-size: ${p => p.theme.headerFontSize};\n  }\n`;\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'sentry/api';\nimport NotFound from 'sentry/components/errors/notFound';\nimport {BorderlessEventEntries} from 'sentry/components/events/eventEntries';\nimport Footer from 'sentry/components/footer';\nimport Link from 'sentry/components/links/link';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport SentryTypes from 'sentry/sentryTypes';\nimport {space} from 'sentry/styles/space';\nimport {Group} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\n\nimport {OrganizationContext} from '../organizationContext';\n\nimport SharedGroupHeader from './sharedGroupHeader';\n\ntype Props = RouteComponentProps<{shareId: string; orgId?: string}, {}> & {\n  api: Client;\n};\n\ntype State = {\n  error: boolean;\n  group: Group | null;\n  loading: boolean;\n};\n\nclass SharedGroupDetails extends Component<Props, State> {\n  static childContextTypes = {\n    group: SentryTypes.Group,\n  };\n\n  state: State = this.getInitialState();\n\n  getInitialState() {\n    return {\n      group: null,\n      loading: true,\n      error: false,\n    };\n  }\n\n  getChildContext() {\n    return {\n      group: this.state.group,\n    };\n  }\n\n  componentWillMount() {\n    document.body.classList.add('shared-group');\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentWillUnmount() {\n    document.body.classList.remove('shared-group');\n  }\n\n  orgSlug(): string | null {\n    const {params} = this.props;\n    if (params.orgId) {\n      return params.orgId;\n    }\n    const {customerDomain} = window.__initialData || {};\n    if (customerDomain?.subdomain) {\n      return customerDomain.subdomain;\n    }\n    return null;\n  }\n\n  async fetchData() {\n    const {params, api} = this.props;\n    const {shareId} = params;\n    const orgSlug = this.orgSlug();\n    try {\n      if (orgSlug) {\n        const group = await api.requestPromise(\n          `/organizations/${orgSlug}/shared/issues/${shareId}/`\n        );\n        this.setState({loading: false, group});\n      } else {\n        const group = await api.requestPromise(`/shared/issues/${shareId}/`);\n        this.setState({loading: false, group});\n      }\n    } catch {\n      this.setState({loading: false, error: true});\n    }\n  }\n\n  handleRetry = () => {\n    this.setState(this.getInitialState());\n    this.fetchData();\n  };\n\n  getTitle() {\n    const {group} = this.state;\n\n    return group?.title ?? 'Sentry';\n  }\n\n  render() {\n    const {group, loading, error} = this.state;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n\n    if (!group) {\n      return <NotFound />;\n    }\n\n    if (error) {\n      return <LoadingError onRetry={this.handleRetry} />;\n    }\n\n    const {location} = this.props;\n    const {permalink, latestEvent, project} = group;\n    const title = this.getTitle();\n    // project.organization is not a real organization, it's just the slug and name\n    // Add the features array to avoid errors when using OrganizationContext\n    const org = {...project.organization, features: []};\n\n    return (\n      <SentryDocumentTitle noSuffix title={title}>\n        <OrganizationContext.Provider value={org}>\n          <div className=\"app\">\n            <div className=\"pattern-bg\" />\n            <div className=\"container\">\n              <div className=\"box box-modal\">\n                <div className=\"box-header\">\n                  <Link className=\"logo\" to=\"/\">\n                    <span className=\"icon-sentry-logo-full\" />\n                  </Link>\n                  {permalink && (\n                    <Link className=\"details\" to={permalink}>\n                      {t('Details')}\n                    </Link>\n                  )}\n                </div>\n                <div className=\"box-content\">\n                  <SharedGroupHeader group={group} />\n                  <Container className=\"group-overview event-details-container\">\n                    <BorderlessEventEntries\n                      location={location}\n                      organization={org}\n                      group={group}\n                      event={latestEvent}\n                      project={project}\n                      isShare\n                    />\n                  </Container>\n                  <Footer />\n                </div>\n              </div>\n            </div>\n          </div>\n        </OrganizationContext.Provider>\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nconst Container = styled('div')`\n  padding: ${space(4)};\n`;\n\nexport {SharedGroupDetails};\nexport default withApi(SharedGroupDetails);\n"],"names":["doEventsRequest","api","_ref","organization","project","environment","team","period","start","end","interval","comparisonDelta","includePrevious","query","yAxis","field","topEvents","orderby","partial","withoutZerofill","referrer","queryBatching","generatePathname","queryExtras","excludeOther","includeAllArgs","dataset","pathname","slug","shouldDoublePeriod","canIncludePreviousPeriod","queryObject","Object","fromEntries","entries","undefined","filter","_ref2","value","getPeriod","batchRequest","requestPromise","fetchTagFacets","orgSlug","queryOption","pick","values","PERFORMANCE_URL_PARAM","fetchTotalCount","then","res","count","makeFetchEventAttachmentsQueryKey","_ref3","projectSlug","eventId","useFetchEventAttachments","_ref4","options","arguments","length","useOrganization","useApiQuery","staleTime","Infinity","enabled","features","includes","useDeleteEventAttachmentOptimistic","incomingOptions","useApi","persistInFlight","queryClient","useQueryClient","mutationFn","_ref5","attachmentId","method","onMutate","async","cancelQueries","variables","previous","getApiQueryData","setApiQueryData","oldData","Array","isArray","attachment","id","onError","error","context","addErrorMessage","t","useMutation","DEFAULT_SIZE","_styled","target","p","size","level","theme","EventEntries","location","event","group","className","isShare","showTagSummary","orgFeatures","_jsx","LatestEventNotAvailable","children","hasContext","objectIsEmpty","user","contexts","_jsxs","EventErrors","isNotSharedOrganization","EventCause","commitRow","CommitRow","userReport","EventDataSection","title","type","EventUserFeedback","report","orgId","issueId","EventTagsAndScreenshot","EventEvidence","Entries","definedEvent","EventContexts","EventExtraData","EventPackageData","EventDevice","EventViewHierarchy","EventAttachments","EventSdk","sdk","meta","_meta","groupID","EventGroupingInfo","showGroupingConfig","EventRRWebIntegration","Fragment","map","entry","entryIdx","EventEntry","displayName","space","BorderlessEventEntries","DataSection","EventMessage","levelIndicatorSize","message","annotations","ErrorLevel","Message","overflowEllipsis","DEFAULT_STATS_PERIOD","statsPeriod","periodNumber","periodLength","match","parseInt","Error","formattedStart","getUtcDateString","formattedEnd","diff","moment","previousPeriodStart","subtract","SharedGroupHeader","Wrapper","Details","TitleWrap","Title","ShortIdWrapper","ShortId","shortId","avatar","ProjectBadge","avatarSize","hideName","issueCategory","IssueCategory","FeatureBadge","TagAndMessageWrapper","isUnhandled","UnhandledTag","culprit","border","name","styles","headingColor","fontSizeExtraLarge","text","lineHeightHeading","props","breakpoints","small","headerFontSize","SharedGroupDetails","Component","constructor","_defineProperty","this","getInitialState","setState","fetchData","loading","getChildContext","state","componentWillMount","document","body","classList","add","componentDidMount","componentWillUnmount","remove","params","customerDomain","window","__initialData","subdomain","shareId","getTitle","render","LoadingIndicator","NotFound","LoadingError","onRetry","handleRetry","permalink","latestEvent","org","SentryDocumentTitle","noSuffix","OrganizationContext","Link","to","Container","Footer","SentryTypes","withApi"],"sourceRoot":""}