{"version":3,"file":"chunks/app_data_forms_accountEmails_tsx-app_views_settings_components_settingsLayout_tsx-node_module-7a7593.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/breadcrumbDropdown.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/crumb.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/divider.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/findFirstRouteWithoutRouteParam.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/menuItem.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/organizationCrumb.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/projectCrumb.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/teamCrumb.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/index.tsx","webpack:///./app/views/settings/components/settingsSearch/index.tsx","webpack:///./app/views/settings/components/settingsLayout.tsx","webpack:///../node_modules/lodash/flattenDepth.js","webpack:///../node_modules/lodash/groupBy.js"],"sourcesContent":["import {JsonFormObject} from 'sentry/components/forms/types';\nimport {t} from 'sentry/locale';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: t('Add Secondary Emails'),\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: t('Additional Email'),\n        placeholder: t('e.g. secondary@example.com'),\n        help: t('Designate an alternative email for this account'),\n        saveOnBlur: false,\n        saveMessage: t('Add this new email address to your account?'),\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import {useState} from 'react';\n\nimport DropdownAutoCompleteMenu from 'sentry/components/dropdownAutoComplete/menu';\nimport {Item} from 'sentry/components/dropdownAutoComplete/types';\nimport Crumb from 'sentry/views/settings/components/settingsBreadcrumb/crumb';\nimport Divider from 'sentry/views/settings/components/settingsBreadcrumb/divider';\n\nimport {RouteWithName} from './types';\n\ninterface AdditionalDropdownProps\n  extends Pick<\n    React.ComponentProps<typeof DropdownAutoCompleteMenu>,\n    'onChange' | 'busyItemsStillVisible'\n  > {}\n\nexport interface BreadcrumbDropdownProps extends AdditionalDropdownProps {\n  items: Item[];\n  name: React.ReactNode;\n  onSelect: (item: Item) => void;\n  route: RouteWithName;\n  hasMenu?: boolean;\n  isLast?: boolean;\n}\n\nfunction BreadcrumbDropdown({\n  hasMenu,\n  route,\n  isLast,\n  name,\n  onSelect,\n  ...dropdownProps\n}: BreadcrumbDropdownProps) {\n  const [isActive, setIsActive] = useState(false);\n\n  return (\n    <DropdownAutoCompleteMenu\n      blendCorner={false}\n      isOpen={isActive}\n      virtualizedHeight={41}\n      onSelect={item => {\n        setIsActive(false);\n        onSelect(item);\n      }}\n      menuProps={{\n        onMouseEnter: () => setIsActive(true),\n        onMouseLeave: () => setIsActive(false),\n      }}\n      {...dropdownProps}\n    >\n      {({getActorProps, isOpen}) => (\n        <Crumb\n          {...getActorProps({\n            onClick: () => setIsActive(false),\n            onMouseEnter: () => setIsActive(true),\n            onMouseLeave: () => setIsActive(false),\n          })}\n        >\n          <span>{name || route.name} </span>\n          <Divider isHover={hasMenu && isOpen} isLast={isLast} />\n        </Crumb>\n      )}\n    </DropdownAutoCompleteMenu>\n  );\n}\n\nexport default BreadcrumbDropdown;\n","import styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\nconst Crumb = styled('div')`\n  display: flex;\n  align-items: center;\n  position: relative;\n  color: ${p => p.theme.subText};\n  padding-right: ${space(1)};\n  cursor: pointer;\n  white-space: nowrap;\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport default Crumb;\n","import styled from '@emotion/styled';\n\nimport {IconChevron} from 'sentry/icons';\n\ntype Props = {\n  isHover?: boolean;\n  isLast?: boolean;\n};\n\nfunction Divider({isHover, isLast}: Props) {\n  return isLast ? null : (\n    <StyledDivider>\n      <StyledIconChevron direction={isHover ? 'down' : 'right'} legacySize=\"14px\" />\n    </StyledDivider>\n  );\n}\n\nconst StyledIconChevron = styled(IconChevron)`\n  display: block;\n`;\n\nconst StyledDivider = styled('span')`\n  display: inline-block;\n  margin-left: 6px;\n  color: ${p => p.theme.gray200};\n  position: relative;\n`;\n\nexport default Divider;\n","import {PlainRoute} from 'react-router';\n\n/**\n * For all routes with a `path`, find the first route without a route param (e.g. :apiKey)\n *\n * @param routes A list of react-router route objects\n * @param route If given, will only take into account routes between `route` and end of the routes list\n * @return Object Returns a react-router route object\n */\nexport default function findFirstRouteWithoutRouteParam(\n  routes: PlainRoute[],\n  route?: PlainRoute\n) {\n  const routeIndex = route !== undefined ? routes.indexOf(route) : -1;\n  const routesToSearch = route && routeIndex > -1 ? routes.slice(routeIndex) : routes;\n\n  return (\n    routesToSearch.filter(({path}) => !!path).find(({path}) => !path?.includes(':')) ||\n    route\n  );\n}\n","import styled from '@emotion/styled';\n\nconst MenuItem = styled('div')`\n  font-size: 14px;\n  ${p => p.theme.overflowEllipsis};\n`;\n\nexport default MenuItem;\n","import {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport IdBadge from 'sentry/components/idBadge';\nimport {Organization} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport shouldUseLegacyRoute from 'sentry/utils/shouldUseLegacyRoute';\nimport withLatestContext from 'sentry/utils/withLatestContext';\nimport BreadcrumbDropdown from 'sentry/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';\nimport findFirstRouteWithoutRouteParam from 'sentry/views/settings/components/settingsBreadcrumb/findFirstRouteWithoutRouteParam';\nimport MenuItem from 'sentry/views/settings/components/settingsBreadcrumb/menuItem';\n\nimport {CrumbLink} from '.';\n\ntype Props = RouteComponentProps<{projectId?: string}, {}> & {\n  organization: Organization;\n  organizations: Organization[];\n};\n\nfunction OrganizationCrumb({\n  organization,\n  organizations,\n  params,\n  routes,\n  route,\n  ...props\n}: Props) {\n  const handleSelect = (item: {value: Organization}) => {\n    // If we are currently in a project context, and we're attempting to switch organizations,\n    // then we need to default to index route (e.g. `route`)\n    //\n    // Otherwise, find the last route without a router param\n    // e.g. if you are on API details, we want the API listing\n    // This fails if our route tree is not nested\n    const hasProjectParam = !!params.projectId;\n    let destination = hasProjectParam\n      ? route\n      : findFirstRouteWithoutRouteParam(routes.slice(routes.indexOf(route)));\n\n    // It's possible there is no route without route params (e.g. organization settings index),\n    // in which case, we can use the org settings index route (e.g. `route`)\n    if (!hasProjectParam && typeof destination === 'undefined') {\n      destination = route;\n    }\n\n    if (destination === undefined) {\n      return;\n    }\n    const org = item.value;\n    const path = recreateRoute(destination, {\n      routes,\n      params: {...params, orgId: org.slug},\n    });\n    if (shouldUseLegacyRoute(org)) {\n      browserHistory.push(path);\n    } else {\n      const {organizationUrl} = org.links;\n      window.location.assign(`${organizationUrl}${path}`);\n    }\n  };\n\n  if (!organization) {\n    return null;\n  }\n\n  const hasMenu = organizations.length > 1;\n  const orgSettings = `/settings/${organization.slug}/`;\n\n  return (\n    <BreadcrumbDropdown\n      name={\n        <CrumbLink to={orgSettings}>\n          <BadgeWrapper>\n            <IdBadge avatarSize={18} organization={organization} />\n          </BadgeWrapper>\n        </CrumbLink>\n      }\n      onSelect={handleSelect}\n      hasMenu={hasMenu}\n      route={route}\n      items={organizations.map((org, index) => ({\n        index,\n        value: org,\n        label: (\n          <MenuItem>\n            <IdBadge organization={org} />\n          </MenuItem>\n        ),\n      }))}\n      {...props}\n    />\n  );\n}\n\nconst BadgeWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nexport {OrganizationCrumb};\nexport default withLatestContext(OrganizationCrumb);\n","import {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport IdBadge from 'sentry/components/idBadge';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport withLatestContext from 'sentry/utils/withLatestContext';\nimport withProjects from 'sentry/utils/withProjects';\nimport BreadcrumbDropdown from 'sentry/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';\nimport findFirstRouteWithoutRouteParam from 'sentry/views/settings/components/settingsBreadcrumb/findFirstRouteWithoutRouteParam';\nimport MenuItem from 'sentry/views/settings/components/settingsBreadcrumb/menuItem';\n\nimport {CrumbLink} from '.';\n\ntype Props = RouteComponentProps<{projectId?: string}, {}> & {\n  organization: Organization;\n  project: Project;\n  projects: Project[];\n};\n\nfunction ProjectCrumb({\n  organization: latestOrganization,\n  project: latestProject,\n  projects,\n  params,\n  routes,\n  route,\n  ...props\n}: Props) {\n  const handleSelect = (item: {value: string}) => {\n    // We have to make exceptions for routes like \"Project Alerts Rule Edit\" or \"Client Key Details\"\n    // Since these models are project specific, we need to traverse up a route when switching projects\n    //\n    // we manipulate `routes` so that it doesn't include the current project's route\n    // which, unlike the org version, does not start with a route param\n    const returnTo = findFirstRouteWithoutRouteParam(\n      routes.slice(routes.indexOf(route) + 1),\n      route\n    );\n\n    if (returnTo === undefined) {\n      return;\n    }\n\n    browserHistory.push(\n      recreateRoute(returnTo, {routes, params: {...params, projectId: item.value}})\n    );\n  };\n\n  if (!latestOrganization) {\n    return null;\n  }\n  if (!projects) {\n    return null;\n  }\n\n  const hasMenu = projects && projects.length > 1;\n\n  return (\n    <BreadcrumbDropdown\n      hasMenu={hasMenu}\n      route={route}\n      name={\n        <ProjectName>\n          {!latestProject ? (\n            <LoadingIndicator mini />\n          ) : (\n            <CrumbLink\n              to={replaceRouterParams('/settings/:orgId/projects/:projectId/', {\n                orgId: latestOrganization.slug,\n                projectId: latestProject.slug,\n              })}\n            >\n              <IdBadge project={latestProject} avatarSize={18} disableLink />\n            </CrumbLink>\n          )}\n        </ProjectName>\n      }\n      onSelect={handleSelect}\n      items={projects.map((project, index) => ({\n        index,\n        value: project.slug,\n        label: (\n          <MenuItem>\n            <IdBadge\n              project={project}\n              avatarProps={{consistentWidth: true}}\n              avatarSize={18}\n              disableLink\n            />\n          </MenuItem>\n        ),\n      }))}\n      {...props}\n    />\n  );\n}\n\nexport {ProjectCrumb};\nexport default withProjects(withLatestContext(ProjectCrumb));\n\n// Set height of crumb because of spinner\nconst SPINNER_SIZE = '24px';\n\nconst ProjectName = styled('div')`\n  display: flex;\n\n  .loading {\n    width: ${SPINNER_SIZE};\n    height: ${SPINNER_SIZE};\n    margin: 0 ${space(0.25)} 0 0;\n  }\n`;\n","import {browserHistory, RouteComponentProps} from 'react-router';\nimport debounce from 'lodash/debounce';\n\nimport IdBadge from 'sentry/components/idBadge';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport {useParams} from 'sentry/utils/useParams';\nimport {useTeams} from 'sentry/utils/useTeams';\nimport BreadcrumbDropdown from 'sentry/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';\nimport MenuItem from 'sentry/views/settings/components/settingsBreadcrumb/menuItem';\n\nimport {CrumbLink} from '.';\n\ntype Props = RouteComponentProps<{teamId: string}, {}>;\n\nfunction TeamCrumb({routes, route, ...props}: Props) {\n  const {teams, onSearch, fetching} = useTeams();\n  const params = useParams();\n\n  const team = teams.find(({slug}) => slug === params.teamId);\n  const hasMenu = teams.length > 1;\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearch(e.target.value);\n  };\n  const debouncedHandleSearch = debounce(handleSearchChange, DEFAULT_DEBOUNCE_DURATION);\n\n  if (!team) {\n    return null;\n  }\n  const teamUrl = `/settings/${params.orgId}/teams/${team.slug}/`;\n\n  return (\n    <BreadcrumbDropdown\n      name={\n        <CrumbLink to={teamUrl}>\n          <IdBadge avatarSize={18} team={team} />\n        </CrumbLink>\n      }\n      onSelect={item => {\n        browserHistory.push(\n          recreateRoute('', {\n            routes,\n            params: {...params, teamId: item.value},\n          })\n        );\n      }}\n      hasMenu={hasMenu}\n      route={route}\n      items={teams.map((teamItem, index) => ({\n        index,\n        value: teamItem.slug,\n        label: (\n          <MenuItem>\n            <IdBadge team={teamItem} />\n          </MenuItem>\n        ),\n      }))}\n      onChange={debouncedHandleSearch}\n      busyItemsStillVisible={fetching}\n      {...props}\n    />\n  );\n}\n\nexport default TeamCrumb;\n","import {Link as RouterLink} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {t} from 'sentry/locale';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport Crumb from 'sentry/views/settings/components/settingsBreadcrumb/crumb';\nimport Divider from 'sentry/views/settings/components/settingsBreadcrumb/divider';\nimport OrganizationCrumb from 'sentry/views/settings/components/settingsBreadcrumb/organizationCrumb';\nimport ProjectCrumb from 'sentry/views/settings/components/settingsBreadcrumb/projectCrumb';\nimport TeamCrumb from 'sentry/views/settings/components/settingsBreadcrumb/teamCrumb';\n\nimport {useBreadcrumbsPathmap} from './context';\nimport {RouteWithName} from './types';\n\nconst MENUS = {\n  Organization: OrganizationCrumb,\n  Project: ProjectCrumb,\n  Team: TeamCrumb,\n} as const;\n\ntype Props = {\n  params: {[param: string]: string | undefined};\n  route: any;\n  routes: RouteWithName[];\n  className?: string;\n};\n\nfunction SettingsBreadcrumb({className, routes, params}: Props) {\n  const pathMap = useBreadcrumbsPathmap();\n\n  const lastRouteIndex = routes.map(r => !!r.name).lastIndexOf(true);\n\n  return (\n    <Breadcrumbs aria-label={t('Settings Breadcrumbs')} className={className}>\n      {routes.map((route, i) => {\n        if (!route.name) {\n          return null;\n        }\n        const pathTitle = pathMap[getRouteStringFromRoutes(routes.slice(0, i + 1))];\n        const isLast = i === lastRouteIndex;\n        const createMenu = MENUS[route.name];\n        const Menu = typeof createMenu === 'function' && createMenu;\n        const hasMenu = !!Menu;\n\n        if (hasMenu) {\n          return (\n            <Menu\n              key={`${route.name}:${route.path}`}\n              routes={routes}\n              params={params}\n              route={route}\n              isLast={isLast}\n            />\n          );\n        }\n        return (\n          <Crumb key={`${route.name}:${route.path}`}>\n            <CrumbLink to={recreateRoute(route, {routes, params})}>\n              {pathTitle || route.name}\n            </CrumbLink>\n            <Divider isLast={isLast} />\n          </Crumb>\n        );\n      })}\n    </Breadcrumbs>\n  );\n}\n\nexport default SettingsBreadcrumb;\n\nconst CrumbLink = styled(RouterLink)`\n  display: block;\n\n  color: ${p => p.theme.subText};\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport {CrumbLink};\n\nconst Breadcrumbs = styled('nav')`\n  display: flex;\n  align-items: center;\n`;\n","import {useRef} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Search} from 'sentry/components/search';\nimport {IconSearch} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {useHotkeys} from 'sentry/utils/useHotkeys';\n\nconst MIN_SEARCH_LENGTH = 1;\nconst MAX_RESULTS = 10;\n\nfunction SettingsSearch() {\n  const searchInput = useRef<HTMLInputElement>(null);\n\n  useHotkeys([{match: '/', callback: () => searchInput.current?.focus()}], []);\n\n  return (\n    <Search\n      entryPoint=\"settings_search\"\n      minSearch={MIN_SEARCH_LENGTH}\n      maxResults={MAX_RESULTS}\n      renderInput={({getInputProps}) => (\n        <SearchInputWrapper>\n          <SearchInputIcon legacySize=\"14px\" />\n          <SearchInput\n            aria-label={t('Search Settings')}\n            {...getInputProps({type: 'text', placeholder: t('Search')})}\n            ref={searchInput}\n          />\n        </SearchInputWrapper>\n      )}\n    />\n  );\n}\n\nexport default SettingsSearch;\n\nconst SearchInputWrapper = styled('div')`\n  position: relative;\n`;\n\nconst SearchInputIcon = styled(IconSearch)`\n  color: ${p => p.theme.gray300};\n  position: absolute;\n  left: 10px;\n  top: 8px;\n`;\n\nconst SearchInput = styled('input')`\n  color: ${p => p.theme.formText};\n  background-color: ${p => p.theme.background};\n  transition: border-color 0.15s ease;\n  font-size: 14px;\n  width: 260px;\n  line-height: 1;\n  padding: 5px 8px 4px 28px;\n  border: 1px solid ${p => p.theme.border};\n  border-radius: 30px;\n  height: 28px;\n\n  box-shadow: inset ${p => p.theme.dropShadowMedium};\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${p => p.theme.border};\n  }\n\n  &::placeholder {\n    color: ${p => p.theme.formPlaceholder};\n  }\n`;\n","import {isValidElement, useEffect, useRef, useState} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport {IconClose, IconMenu} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {fadeIn, slideInLeft} from 'sentry/styles/animations';\nimport {space} from 'sentry/styles/space';\n\nimport SettingsBreadcrumb from './settingsBreadcrumb';\nimport SettingsHeader from './settingsHeader';\nimport SettingsSearch from './settingsSearch';\n\ntype Props = {\n  children: React.ReactNode;\n  renderNavigation?: (opts: {isMobileNavVisible: boolean}) => React.ReactNode;\n} & RouteComponentProps<{}, {}>;\n\nfunction SettingsLayout(props: Props) {\n  // This is used when the screen is small enough that the navigation should be\n  // hidden. This state is only used when the media query matches.\n  //\n  // [!!] On large screens this state is totally unused!\n  const [isMobileNavVisible, setMobileNavVisible] = useState(false);\n\n  // Offset mobile settings navigation by the height of main navigation,\n  // settings breadcrumbs and optional warnings.\n  const [navOffsetTop, setNavOffsetTop] = useState(0);\n\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  function toggleNav(visible: boolean) {\n    const bodyElement = document.getElementsByTagName('body')[0];\n\n    window.scrollTo?.(0, 0);\n    bodyElement.classList[visible ? 'add' : 'remove']('scroll-lock');\n\n    setMobileNavVisible(visible);\n    setNavOffsetTop(headerRef.current?.getBoundingClientRect().bottom ?? 0);\n  }\n\n  // Close menu when navigating away\n  useEffect(() => browserHistory.listen(() => toggleNav(false)), []);\n\n  const {renderNavigation, children, params, routes, route} = props;\n\n  // We want child's view's props\n  const childProps = children && isValidElement(children) ? children.props : props;\n  const childRoutes = childProps.routes || routes || [];\n  const childRoute = childProps.route || route || {};\n  const shouldRenderNavigation = typeof renderNavigation === 'function';\n\n  return (\n    <SettingsColumn>\n      <SettingsHeader ref={headerRef}>\n        <HeaderContent>\n          {shouldRenderNavigation && (\n            <NavMenuToggle\n              priority=\"link\"\n              aria-label={isMobileNavVisible ? t('Close the menu') : t('Open the menu')}\n              icon={\n                isMobileNavVisible ? <IconClose aria-hidden /> : <IconMenu aria-hidden />\n              }\n              onClick={() => toggleNav(!isMobileNavVisible)}\n            />\n          )}\n          <StyledSettingsBreadcrumb\n            params={params}\n            routes={childRoutes}\n            route={childRoute}\n          />\n          <SettingsSearch />\n        </HeaderContent>\n      </SettingsHeader>\n\n      <MaxWidthContainer>\n        {shouldRenderNavigation && (\n          <SidebarWrapper\n            aria-label={t('Settings Navigation')}\n            isVisible={isMobileNavVisible}\n            offsetTop={navOffsetTop}\n          >\n            {renderNavigation({isMobileNavVisible})}\n          </SidebarWrapper>\n        )}\n        <NavMask isVisible={isMobileNavVisible} onClick={() => toggleNav(false)} />\n        <Content>{children}</Content>\n      </MaxWidthContainer>\n    </SettingsColumn>\n  );\n}\n\nconst SettingsColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  flex: 1; /* so this stretches vertically so that footer is fixed at bottom */\n  min-width: 0; /* fixes problem when child content stretches beyond layout width */\n  footer {\n    margin-top: 0;\n  }\n`;\n\nconst HeaderContent = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst NavMenuToggle = styled(Button)`\n  display: none;\n  margin: -${space(1)} ${space(1)} -${space(1)} -${space(1)};\n  padding: ${space(1)};\n  color: ${p => p.theme.subText};\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${p => p.theme.textColor};\n  }\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    display: block;\n  }\n`;\n\nconst StyledSettingsBreadcrumb = styled(SettingsBreadcrumb)`\n  flex: 1;\n`;\n\nconst MaxWidthContainer = styled('div')`\n  display: flex;\n  max-width: ${p => p.theme.settings.containerWidth};\n  flex: 1;\n`;\n\nconst SidebarWrapper = styled('nav')<{isVisible: boolean; offsetTop: number}>`\n  flex-shrink: 0;\n  width: ${p => p.theme.settings.sidebarWidth};\n  background: ${p => p.theme.background};\n  border-right: 1px solid ${p => p.theme.border};\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    display: ${p => (p.isVisible ? 'block' : 'none')};\n    position: fixed;\n    top: ${p => p.offsetTop}px;\n    bottom: 0;\n    overflow-y: auto;\n    animation: ${slideInLeft} 100ms ease-in-out;\n    z-index: ${p => p.theme.zIndex.settingsSidebarNav};\n    box-shadow: ${p => p.theme.dropShadowHeavy};\n  }\n`;\n\nconst NavMask = styled('div')<{isVisible: boolean}>`\n  display: none;\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    display: ${p => (p.isVisible ? 'block' : 'none')};\n    background: rgba(0, 0, 0, 0.35);\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    z-index: ${p => p.theme.zIndex.settingsSidebarNavMask};\n    animation: ${fadeIn} 250ms ease-in-out;\n  }\n`;\n\n/**\n * Note: `overflow: hidden` will cause some buttons in `SettingsPageHeader` to be cut off because it has negative margin.\n * Will also cut off tooltips.\n */\nconst Content = styled('div')`\n  flex: 1;\n  padding: ${space(4)};\n  min-width: 0; /* keep children from stretching container */\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    padding: ${space(2)};\n  }\n\n  /**\n   * Layout.Page is not normally used in settings but <PermissionDenied /> uses\n   * it under the hood. This prevents double padding.\n   */\n  ${Layout.Page} {\n    padding: 0;\n  }\n`;\n\nexport default SettingsLayout;\n","var baseFlatten = require('./_baseFlatten'),\n    toInteger = require('./toInteger');\n\n/**\n * Recursively flatten `array` up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * var array = [1, [2, [3, [4]], 5]];\n *\n * _.flattenDepth(array, 1);\n * // => [1, 2, [3, [4]], 5]\n *\n * _.flattenDepth(array, 2);\n * // => [1, 2, 3, [4], 5]\n */\nfunction flattenDepth(array, depth) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(array, depth);\n}\n\nmodule.exports = flattenDepth;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n"],"names":["route","title","t","fields","name","type","label","placeholder","help","saveOnBlur","saveMessage","BreadcrumbDropdown","_ref","hasMenu","isLast","onSelect","dropdownProps","isActive","setIsActive","useState","_jsx","DropdownAutoCompleteMenu","blendCorner","isOpen","virtualizedHeight","item","menuProps","onMouseEnter","onMouseLeave","children","_ref2","getActorProps","_jsxs","Crumb","onClick","Divider","isHover","displayName","_styled","target","p","theme","subText","space","textColor","StyledIconChevron","IconChevron","styles","StyledDivider","gray200","direction","legacySize","findFirstRouteWithoutRouteParam","routes","routeIndex","undefined","indexOf","slice","filter","path","find","includes","overflowEllipsis","OrganizationCrumb","organization","organizations","params","props","length","orgSettings","slug","CrumbLink","to","BadgeWrapper","IdBadge","avatarSize","hasProjectParam","projectId","destination","org","value","recreateRoute","orgId","shouldUseLegacyRoute","browserHistory","organizationUrl","links","window","location","assign","items","map","index","MenuItem","withLatestContext","ProjectCrumb","latestOrganization","project","latestProject","projects","ProjectName","replaceRouterParams","disableLink","LoadingIndicator","mini","returnTo","avatarProps","consistentWidth","withProjects","SPINNER_SIZE","TeamCrumb","teams","onSearch","fetching","useTeams","useParams","team","teamId","debouncedHandleSearch","debounce","e","DEFAULT_DEBOUNCE_DURATION","teamUrl","teamItem","onChange","busyItemsStillVisible","MENUS","Organization","Project","Team","SettingsBreadcrumb","className","pathMap","useBreadcrumbsPathmap","lastRouteIndex","r","lastIndexOf","Breadcrumbs","i","pathTitle","getRouteStringFromRoutes","createMenu","Menu","RouterLink","SettingsSearch","searchInput","useRef","useHotkeys","match","callback","current","focus","Search","entryPoint","minSearch","maxResults","renderInput","getInputProps","SearchInputWrapper","SearchInputIcon","SearchInput","ref","IconSearch","gray300","formText","background","border","dropShadowMedium","formPlaceholder","SettingsLayout","isMobileNavVisible","setMobileNavVisible","navOffsetTop","setNavOffsetTop","headerRef","toggleNav","visible","bodyElement","document","getElementsByTagName","scrollTo","classList","getBoundingClientRect","bottom","useEffect","renderNavigation","childProps","isValidElement","childRoutes","childRoute","shouldRenderNavigation","SettingsColumn","SettingsHeader","HeaderContent","NavMenuToggle","priority","icon","IconClose","IconMenu","StyledSettingsBreadcrumb","MaxWidthContainer","SidebarWrapper","isVisible","offsetTop","NavMask","Content","Button","breakpoints","medium","settings","containerWidth","sidebarWidth","slideInLeft","zIndex","settingsSidebarNav","dropShadowHeavy","settingsSidebarNavMask","fadeIn","Layout","baseFlatten","toInteger","module","exports","array","depth","baseAssignValue","createAggregator","hasOwnProperty","Object","prototype","groupBy","result","key","call","push"],"sourceRoot":""}