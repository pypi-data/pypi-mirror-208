{"version":3,"file":"chunks/app_views_settings_project_projectTeams_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/components/teamSelect/teamSelectForProject.tsx","webpack:///./app/views/settings/project/projectTeams.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import Access from 'sentry/components/acl/access';\nimport {Alert} from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {Project, Scope, Team} from 'sentry/types';\n\ninterface Props extends React.ComponentPropsWithoutRef<typeof Alert> {\n  access?: Scope[];\n  project?: Project | null | undefined;\n  team?: Team | null | undefined;\n}\n\nfunction PermissionAlert({access = ['project:write'], project, team, ...props}: Props) {\n  return (\n    <Access access={access} project={project} team={team}>\n      {({hasAccess}) =>\n        !hasAccess && (\n          <Alert data-test-id=\"project-permission-alert\" type=\"warning\" {...props}>\n            {t(\n              'These settings can only be edited by users with the organization-level owner, manager, or team-level admin roles.'\n            )}\n          </Alert>\n        )\n      }\n    </Access>\n  );\n}\n\nexport default PermissionAlert;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport {TeamBadge} from 'sentry/components/idBadge/teamBadge';\nimport Link from 'sentry/components/links/link';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport {IconSubtract} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Project, Team} from 'sentry/types';\nimport {useTeams} from 'sentry/utils/useTeams';\n\nimport {DropdownAddTeam, TeamSelectProps} from './utils';\n\ntype Props = TeamSelectProps & {\n  canCreateTeam: boolean;\n  project: Project;\n  /**\n   * Used when showing Teams for a Project\n   */\n  selectedTeams: Team[];\n  /**\n   * Message to display when the last team is removed\n   * if empty no confirm will be displayed.\n   */\n  confirmLastTeamRemoveMessage?: string;\n};\n\nfunction TeamSelect({\n  disabled,\n  canCreateTeam,\n  confirmLastTeamRemoveMessage,\n  project,\n  selectedTeams,\n  organization,\n  onAddTeam,\n  onRemoveTeam,\n  onCreateTeam,\n}: Props) {\n  const renderBody = () => {\n    const numTeams = selectedTeams.length;\n    if (numTeams === 0) {\n      return <EmptyMessage>{t('No Teams assigned')}</EmptyMessage>;\n    }\n\n    const confirmMessage =\n      numTeams === 1 && confirmLastTeamRemoveMessage\n        ? confirmLastTeamRemoveMessage\n        : null;\n\n    return (\n      <React.Fragment>\n        {selectedTeams.map(team => (\n          <TeamRow\n            key={team.slug}\n            disabled={disabled}\n            confirmMessage={confirmMessage}\n            organization={organization}\n            team={team}\n            onRemoveTeam={slug => onRemoveTeam(slug)}\n          />\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  const {teams, onSearch, fetching: isLoadingTeams} = useTeams();\n\n  return (\n    <Panel>\n      <PanelHeader hasButtons>\n        {t('Team')}\n\n        <DropdownAddTeam\n          disabled={disabled}\n          isLoadingTeams={isLoadingTeams}\n          isAddingTeamToProject\n          canCreateTeam={canCreateTeam}\n          onSearch={onSearch}\n          onSelect={onAddTeam}\n          onCreateTeam={onCreateTeam}\n          organization={organization}\n          selectedTeams={selectedTeams.map(tm => tm.slug)}\n          teams={teams}\n          project={project}\n        />\n      </PanelHeader>\n\n      <PanelBody>{isLoadingTeams ? <LoadingIndicator /> : renderBody()}</PanelBody>\n    </Panel>\n  );\n}\n\nfunction TeamRow({\n  organization,\n  team,\n  onRemoveTeam,\n  disabled,\n  confirmMessage,\n}: {\n  confirmMessage: string | null;\n  disabled: boolean;\n  onRemoveTeam: Props['onRemoveTeam'];\n  organization: Organization;\n  team: Team;\n}) {\n  return (\n    <TeamPanelItem data-test-id=\"team-row-for-project\">\n      <TeamPanelItemLeft>\n        <Link to={`/settings/${organization.slug}/teams/${team.slug}/`}>\n          <TeamBadge team={team} />\n        </Link>\n      </TeamPanelItemLeft>\n\n      <Confirm\n        message={confirmMessage}\n        bypass={!confirmMessage}\n        onConfirm={() => onRemoveTeam(team.slug)}\n        disabled={disabled}\n      >\n        <Button size=\"xs\" icon={<IconSubtract isCircled size=\"xs\" />} disabled={disabled}>\n          {t('Remove')}\n        </Button>\n      </Confirm>\n    </TeamPanelItem>\n  );\n}\n\nconst TeamPanelItem = styled(PanelItem)`\n  padding: ${space(2)};\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst TeamPanelItemLeft = styled('div')`\n  flex-grow: 4;\n`;\n\nexport default TeamSelect;\n","import {RouteComponentProps} from 'react-router';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {openCreateTeamModal} from 'sentry/actionCreators/modal';\nimport {addTeamToProject, removeTeamFromProject} from 'sentry/actionCreators/projects';\nimport {t, tct} from 'sentry/locale';\nimport TeamStore from 'sentry/stores/teamStore';\nimport {Organization, Project, Team} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TeamSelectForProject from 'sentry/views/settings/components/teamSelect/teamSelectForProject';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{projectId: string}, {}>;\n\ntype State = {\n  projectTeams: null | Team[];\n} & AsyncView['state'];\n\nclass ProjectTeams extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, project} = this.props;\n    return [['projectTeams', `/projects/${organization.slug}/${project.slug}/teams/`]];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Project Teams'), projectId, false);\n  }\n\n  canCreateTeam = () => {\n    const access = this.props.organization.access;\n    return (\n      access.includes('org:write') &&\n      access.includes('team:write') &&\n      access.includes('project:write')\n    );\n  };\n\n  handleRemove = (teamSlug: Team['slug']) => {\n    if (this.state.loading) {\n      return;\n    }\n\n    const {organization, project} = this.props;\n\n    removeTeamFromProject(this.api, organization.slug, project.slug, teamSlug)\n      .then(() => this.handleRemovedTeam(teamSlug))\n      .catch(() => {\n        addErrorMessage(t('Could not remove the %s team', teamSlug));\n        this.setState({loading: false});\n      });\n  };\n\n  handleRemovedTeam = (teamSlug: Team['slug']) => {\n    this.setState(prevState => ({\n      projectTeams: [\n        ...(prevState.projectTeams || []).filter(team => team.slug !== teamSlug),\n      ],\n    }));\n  };\n\n  handleAddedTeam = (team: Team) => {\n    this.setState(prevState => ({\n      projectTeams: [...(prevState.projectTeams || []), team],\n    }));\n  };\n\n  handleAdd = (teamSlug: string) => {\n    if (this.state.loading) {\n      return;\n    }\n\n    const team = TeamStore.getBySlug(teamSlug);\n    if (!team) {\n      addErrorMessage(tct('Unable to find \"[teamSlug]\"', {teamSlug}));\n      this.setState({error: true});\n      return;\n    }\n\n    const {organization, project} = this.props;\n\n    addTeamToProject(this.api, organization.slug, project.slug, team).then(\n      () => {\n        this.handleAddedTeam(team);\n      },\n      () => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      }\n    );\n  };\n\n  handleCreateTeam = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    const {project, organization} = this.props;\n\n    if (!this.canCreateTeam()) {\n      return;\n    }\n\n    openCreateTeamModal({\n      project,\n      organization,\n      onClose: data => {\n        addTeamToProject(this.api, organization.slug, project.slug, data).then(\n          this.remountComponent,\n          this.remountComponent\n        );\n      },\n    });\n  };\n\n  renderBody() {\n    const {project, organization} = this.props;\n\n    const canCreateTeam = this.canCreateTeam();\n    const hasAccess = organization.access.includes('project:write');\n    const confirmRemove = t(\n      'This is the last team with access to this project. Removing it will mean only organization owners and managers will be able to access the project pages. Are you sure you want to remove this team from the project %s?',\n      project.slug\n    );\n    const {projectTeams} = this.state;\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Project Teams for %s', project.slug)} />\n        <PermissionAlert project={project} />\n        <TeamSelectForProject\n          disabled={!hasAccess}\n          canCreateTeam={canCreateTeam}\n          organization={organization}\n          project={project}\n          selectedTeams={projectTeams ?? []}\n          onAddTeam={this.handleAdd}\n          onRemoveTeam={this.handleRemove}\n          onCreateTeam={(team: Team) => {\n            addTeamToProject(this.api, organization.slug, project.slug, team).then(\n              this.remountComponent,\n              this.remountComponent\n            );\n          }}\n          confirmLastTeamRemoveMessage={confirmRemove}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ProjectTeams;\n"],"names":["routeName","orgSlug","projectSlug","arguments","length","undefined","tmplBase","tmpl","PermissionAlert","_ref","access","project","team","props","_jsx","Access","children","_ref2","hasAccess","Alert","type","t","displayName","TeamSelect","disabled","canCreateTeam","confirmLastTeamRemoveMessage","selectedTeams","organization","onAddTeam","onRemoveTeam","onCreateTeam","teams","onSearch","fetching","isLoadingTeams","useTeams","_jsxs","Panel","PanelHeader","hasButtons","DropdownAddTeam","isAddingTeamToProject","onSelect","map","tm","slug","PanelBody","LoadingIndicator","renderBody","numTeams","EmptyMessage","confirmMessage","React","TeamRow","TeamPanelItem","TeamPanelItemLeft","Link","to","TeamBadge","Confirm","message","bypass","onConfirm","Button","size","icon","IconSubtract","isCircled","_styled","PanelItem","target","space","name","styles","ProjectTeams","AsyncView","constructor","_defineProperty","this","includes","teamSlug","state","loading","removeTeamFromProject","api","then","handleRemovedTeam","catch","addErrorMessage","setState","prevState","projectTeams","filter","TeamStore","tct","error","addTeamToProject","handleAddedTeam","e","stopPropagation","preventDefault","openCreateTeamModal","onClose","data","remountComponent","getEndpoints","getTitle","projectId","params","routeTitleGen","confirmRemove","SettingsPageHeader","title","TeamSelectForProject","handleAdd","handleRemove"],"sourceRoot":""}