{"version":3,"file":"chunks/app_views_projectInstall_overview_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"klCA4BA,MAAMA,UAA+BC,EAAAA,EAA6BC,cAAA,SAAAC,YAAAC,EAAAA,EAAAA,GAAA,uBAW9CC,IAChB,MAAM,aAACC,GAAgBC,KAAKC,OACtB,UAACC,GAAaF,KAAKC,MAAME,OAEzBC,EAAaJ,KAAKK,iBACnB,kBAAiBN,EAAaO,iBAAiBJ,qBAA6BJ,MAC7ES,EAAAA,EAAAA,GAAe,GAAET,KAAa,IACzBE,KAAKC,MACRO,UAAW,IAGjBC,EAAAA,eAAAA,MAAoBC,EAAAA,EAAAA,GAAaN,GAAY,KAC9CP,EAAAA,EAAAA,GAAA,kBAEW,KACVG,KAAKW,UAASC,IAAS,CAAEC,SAAUD,EAAMC,WAAU,GACpD,CA1BGR,uBACF,OAAOS,OAAOC,SAASC,KAAKC,QAAQ,mBAAqB,CAC3D,CAEAC,eACE,MAAM,aAACnB,GAAgBC,KAAKC,OACtB,UAACC,GAAaF,KAAKC,MAAME,OAC/B,MAAO,CAAC,CAAC,UAAY,aAAYJ,EAAaO,QAAQJ,WACxD,CAoBAiB,SACE,MAAM,aAACpB,GAAgBC,KAAKC,OACtB,UAACC,GAAaF,KAAKC,MAAME,QACzB,QAACiB,EAAO,QAAEP,GAAWb,KAAKY,MAE1BS,EAAmB,kBAAiBtB,EAAaO,uBAEvD,OACEgB,EAAAA,EAAAA,IAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAmB,CAACC,OAAOC,EAAAA,EAAAA,GAAE,mBAAoBC,YAAa1B,KAC/DsB,EAAAA,EAAAA,IAACK,EAAAA,EAAkB,CAACH,OAAOC,EAAAA,EAAAA,GAAE,iCAC7BH,EAAAA,EAAAA,IAACM,EAAAA,EAAS,CAAAP,UACPI,EAAAA,EAAAA,GACC,qFAIHd,GACCS,EAAAA,EAAAA,IAACS,EAAO,CAAAR,SAAA,EACND,EAAAA,EAAAA,IAACU,EAAY,CAAAT,SAAA,EACXC,EAAAA,EAAAA,IAAA,UAAAD,UAASI,EAAAA,EAAAA,GAAE,UACXH,EAAAA,EAAAA,IAACS,EAAQ,CAAAV,SAAEH,IAAU,GAAGc,IAAIC,aAG9BX,EAAAA,EAAAA,IAACY,EAAAA,GAAM,CAACC,SAAS,UAAUC,GAAIjB,EAAgBE,UAC5CI,EAAAA,EAAAA,GAAE,8CAIPH,EAAAA,EAAAA,IAAA,KAAAD,UACED,EAAAA,EAAAA,IAAA,SAAAC,SAAA,EACGgB,EAAAA,EAAAA,IAAI,iDAAkD,CACrDC,MACEhB,EAAAA,EAAAA,IAACY,EAAAA,GAAM,CACLC,SAAS,OACTI,QAASzC,KAAK0C,UACd,cAAYf,EAAAA,EAAAA,GAAE,oBAGjB,UAKTH,EAAAA,EAAAA,IAACmB,EAAAA,EAAc,CACbC,YAAaC,GACX7C,KAAK8C,eAAeD,GAAkBE,IAAM,MAE9CC,WAAW,EACXjD,aAAcC,KAAKC,MAAMF,gBAE3ByB,EAAAA,EAAAA,IAAA,KAAAD,UACGgB,EAAAA,EAAAA,IACE,6GAED,CAACU,SAASzB,EAAAA,EAAAA,IAAC0B,EAAAA,EAAY,CAAClC,KAAK,iCAKvC,EAzFIvB,EAAsB0D,YAAA,yBA4F5B,MAAMlB,GAAWmB,EAAAA,EAAAA,IAAOC,IACtB7B,EAAAA,EAAAA,IAAA,WAAU6B,EAAC9B,UACTC,EAAAA,EAAAA,IAAC8B,EAAAA,EAAc,CAAA/B,SAAE8B,EAAE9B,cAEtB,CAAAgC,OAAA,aAJgBH,CAIf,CAAAI,KAAA,SAAAC,OAAA,oBAII1B,GAAUqB,EAAAA,EAAAA,GAAO,MAAK,CAAAG,OAAA,aAAZH,CAAa,kBACVM,EAAAA,EAAAA,GAAM,GAAE,KAGrB1B,GAAeoB,EAAAA,EAAAA,GAAO,MAAK,CAAAG,OAAA,aAAZH,CAAa,2DAGzBM,EAAAA,EAAAA,GAAM,KAAI,KAAIA,EAAAA,EAAAA,GAAM,GAAE,sCAEZA,EAAAA,EAAAA,GAAM,GAAE,KAG3B,GAAeC,EAAAA,EAAAA,GAAiBlE,E","sources":["webpack:///./app/views/projectInstall/overview.tsx"],"sourcesContent":["import {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport AutoSelectText from 'sentry/components/autoSelectText';\nimport {Button} from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport PlatformPicker from 'sentry/components/platformPicker';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {PlatformKey} from 'sentry/data/platformCategories';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = RouteComponentProps<{projectId: string}, {}> & {\n  organization: Organization;\n} & AsyncComponent['props'];\n\ntype State = {\n  keyList: Array<ProjectKey> | null;\n} & AsyncComponent['state'];\n\nclass ProjectInstallOverview extends AsyncComponent<Props, State> {\n  get isGettingStarted() {\n    return window.location.href.indexOf('getting-started') > 0;\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n    return [['keyList', `/projects/${organization.slug}/${projectId}/keys/`]];\n  }\n\n  redirectToDocs = (platform: PlatformKey | null) => {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    const installUrl = this.isGettingStarted\n      ? `/organizations/${organization.slug}/projects/${projectId}/getting-started/${platform}/`\n      : recreateRoute(`${platform}/`, {\n          ...this.props,\n          stepBack: -1,\n        });\n\n    browserHistory.push(normalizeUrl(installUrl));\n  };\n\n  toggleDsn = () => {\n    this.setState(state => ({showDsn: !state.showDsn}));\n  };\n\n  render() {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n    const {keyList, showDsn} = this.state;\n\n    const issueStreamLink = `/organizations/${organization.slug}/issues/#welcome`;\n\n    return (\n      <div>\n        <SentryDocumentTitle title={t('Instrumentation')} projectSlug={projectId} />\n        <SettingsPageHeader title={t('Configure your application')} />\n        <TextBlock>\n          {t(\n            'Get started by selecting the platform or language that powers your application.'\n          )}\n        </TextBlock>\n\n        {showDsn ? (\n          <DsnInfo>\n            <DsnContainer>\n              <strong>{t('DSN')}</strong>\n              <DsnValue>{keyList?.[0].dsn.public}</DsnValue>\n            </DsnContainer>\n\n            <Button priority=\"primary\" to={issueStreamLink}>\n              {t('Got it! Take me to the Issue Stream.')}\n            </Button>\n          </DsnInfo>\n        ) : (\n          <p>\n            <small>\n              {tct('Already have things setup? [link:Get your DSN]', {\n                link: (\n                  <Button\n                    priority=\"link\"\n                    onClick={this.toggleDsn}\n                    aria-label={t('Get your DSN')}\n                  />\n                ),\n              })}\n              .\n            </small>\n          </p>\n        )}\n        <PlatformPicker\n          setPlatform={selectedPlatform =>\n            this.redirectToDocs(selectedPlatform?.id ?? null)\n          }\n          showOther={false}\n          organization={this.props.organization}\n        />\n        <p>\n          {tct(\n            `For a complete list of client integrations, please see\n             [docLink:our in-depth documentation].`,\n            {docLink: <ExternalLink href=\"https://docs.sentry.io\" />}\n          )}\n        </p>\n      </div>\n    );\n  }\n}\n\nconst DsnValue = styled(p => (\n  <code {...p}>\n    <AutoSelectText>{p.children}</AutoSelectText>\n  </code>\n))`\n  overflow: hidden;\n`;\n\nconst DsnInfo = styled('div')`\n  margin-bottom: ${space(3)};\n`;\n\nconst DsnContainer = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr;\n  gap: ${space(1.5)} ${space(2)};\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n\nexport default withOrganization(ProjectInstallOverview);\n"],"names":["ProjectInstallOverview","AsyncComponent","constructor","arguments","_defineProperty","platform","organization","this","props","projectId","params","installUrl","isGettingStarted","slug","recreateRoute","stepBack","browserHistory","normalizeUrl","setState","state","showDsn","window","location","href","indexOf","getEndpoints","render","keyList","issueStreamLink","_jsxs","children","_jsx","SentryDocumentTitle","title","t","projectSlug","SettingsPageHeader","TextBlock","DsnInfo","DsnContainer","DsnValue","dsn","public","Button","priority","to","tct","link","onClick","toggleDsn","PlatformPicker","setPlatform","selectedPlatform","redirectToDocs","id","showOther","docLink","ExternalLink","displayName","_styled","p","AutoSelectText","target","name","styles","space","withOrganization"],"sourceRoot":""}