{"version":3,"file":"chunks/app_components_gridEditable_sortLink_tsx-app_views_performance_landing_widgets_components_per-5df0e3.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/errorPanel.tsx","webpack:///./app/components/gridEditable/sortLink.tsx","webpack:///./app/views/performance/landing/widgets/components/performanceWidgetContainer.tsx","webpack:///./app/views/performance/landing/widgets/components/dataStateSwitch.tsx","webpack:///./app/views/performance/landing/widgets/components/queryHandler.tsx","webpack:///./app/views/performance/landing/widgets/components/widgetHeader.tsx","webpack:///./app/views/performance/landing/widgets/components/performanceWidget.tsx","webpack:///./app/views/performance/landing/widgets/components/selectableList.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst ErrorPanel = styled('div')<{height?: string}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  flex: 1;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: ${p => p.height || '200px'};\n  position: relative;\n  border-color: transparent;\n  margin-bottom: 0;\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n`;\n\nexport default ErrorPanel;\n","import {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\n\nimport Link from 'sentry/components/links/link';\nimport {IconArrow} from 'sentry/icons';\n\nexport type Alignments = 'left' | 'right' | undefined;\nexport type Directions = 'desc' | 'asc' | undefined;\n\ntype Props = {\n  align: Alignments;\n  canSort: boolean;\n  direction: Directions;\n  generateSortLink: () => LocationDescriptorObject | undefined;\n  title: React.ReactNode;\n  onClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n  replace?: boolean;\n};\n\nfunction SortLink({\n  align,\n  title,\n  canSort,\n  generateSortLink,\n  onClick,\n  direction,\n  replace,\n}: Props) {\n  const target = generateSortLink();\n\n  if (!target || !canSort) {\n    return <StyledNonLink align={align}>{title}</StyledNonLink>;\n  }\n\n  const arrow = !direction ? null : (\n    <StyledIconArrow size=\"xs\" direction={direction === 'desc' ? 'down' : 'up'} />\n  );\n\n  const handleOnClick: React.MouseEventHandler<HTMLAnchorElement> = e => {\n    if (replace) {\n      e.preventDefault();\n      browserHistory.replace(target);\n    }\n    onClick?.(e);\n  };\n\n  return (\n    <StyledLink align={align} to={target} onClick={handleOnClick}>\n      {title} {arrow}\n    </StyledLink>\n  );\n}\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\ntype StyledLinkProps = LinkProps & {align: Alignments};\n\nconst StyledLink = styled((props: StyledLinkProps) => {\n  // @ts-ignore It doesn't look like the `css` property is a part of the props,\n  // but prior to this style of destructure-omitting it, it was being omitted\n  // with lodash.omit. I mean keeping it omitted here just in case.\n  const {align: _align, css: _css, ...forwardProps} = props;\n  return <Link {...forwardProps} />;\n})`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  color: inherit;\n\n  &:hover,\n  &:active,\n  &:focus,\n  &:visited {\n    color: inherit;\n  }\n\n  ${(p: StyledLinkProps) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledNonLink = styled('div')<{align: Alignments}>`\n  display: block;\n  width: 100%;\n  white-space: nowrap;\n  ${(p: {align: Alignments}) => (p.align ? `text-align: ${p.align};` : '')}\n`;\n\nconst StyledIconArrow = styled(IconArrow)`\n  vertical-align: top;\n`;\n\nexport default SortLink;\n","import styled from '@emotion/styled';\n\nimport {Panel} from 'sentry/components/panels';\nimport {space} from 'sentry/styles/space';\n\nexport type PerformanceWidgetContainerTypes = 'panel' | 'inline';\n\nconst StyledPanel = styled(Panel)`\n  padding-top: ${space(2)};\n  margin-bottom: 0;\n`;\nconst Div = styled('div')``;\n\nconst getPerformanceWidgetContainer = ({\n  containerType,\n}: {\n  containerType: PerformanceWidgetContainerTypes;\n}) => {\n  if (containerType === 'panel') {\n    return StyledPanel;\n  }\n  if (containerType === 'inline') {\n    return Div;\n  }\n  return Div;\n};\n\nexport default getPerformanceWidgetContainer;\n","import {Fragment} from 'react';\n\nexport function DataStateSwitch(props: {\n  dataComponents: JSX.Element[];\n  emptyComponent: JSX.Element;\n  errorComponent: JSX.Element;\n\n  hasData: boolean;\n  isErrored: boolean;\n  isLoading: boolean;\n  loadingComponent?: JSX.Element;\n}): JSX.Element {\n  if (props.isErrored) {\n    return props.errorComponent;\n  }\n  if (props.isLoading && props.loadingComponent) {\n    return props.loadingComponent;\n  }\n  if (!props.hasData) {\n    return props.emptyComponent;\n  }\n  return <Fragment>{props.dataComponents}</Fragment>;\n}\n","import {Fragment, useEffect} from 'react';\n\nimport {getUtcToLocalDateObject} from 'sentry/utils/dates';\nimport {\n  getIsMetricsDataFromResults,\n  useMEPDataContext,\n} from 'sentry/utils/performance/contexts/metricsEnhancedPerformanceDataContext';\n\nimport {QueryDefinitionWithKey, QueryHandlerProps, WidgetDataConstraint} from '../types';\nimport {PerformanceWidgetSetting} from '../widgetDefinitions';\n\n/*\n  Component to handle switching component-style queries over to state. This should be temporary to make it easier to switch away from waterfall style api components.\n*/\nexport function QueryHandler<T extends WidgetDataConstraint>(\n  props: QueryHandlerProps<T>\n) {\n  const children = props.children ?? <Fragment />;\n\n  if (!props.queries.length) {\n    return <Fragment>{children}</Fragment>;\n  }\n\n  return (\n    <Fragment>\n      {props.queries\n        .filter(q => (q.enabled ? q.enabled(props.widgetData) : true))\n        .map(query => (\n          <SingleQueryHandler key={query.queryKey} {...props} query={query} />\n        ))}\n    </Fragment>\n  );\n}\n\nfunction genericQueryReferrer(setting: PerformanceWidgetSetting) {\n  return `api.performance.generic-widget-chart.${setting.replace(/_/g, '-')}`;\n}\n\nfunction SingleQueryHandler<T extends WidgetDataConstraint>(\n  props: QueryHandlerProps<T> & {query: QueryDefinitionWithKey<T>}\n) {\n  const query = props.query;\n  const globalSelection = props.queryProps.eventView.getPageFilters();\n  const start = globalSelection.datetime.start\n    ? getUtcToLocalDateObject(globalSelection.datetime.start)\n    : null;\n\n  const end = globalSelection.datetime.end\n    ? getUtcToLocalDateObject(globalSelection.datetime.end)\n    : null;\n\n  useEffect(\n    () => () => {\n      // Destroy previous data on unmount, in case enabled value changes and unmounts the query component.\n      props.removeWidgetDataForKey(query.queryKey);\n    },\n    []\n  );\n\n  return (\n    <query.component\n      key={query.queryKey}\n      fields={query.fields}\n      yAxis={query.fields}\n      start={start}\n      end={end}\n      period={globalSelection.datetime.period}\n      project={globalSelection.projects}\n      environment={globalSelection.environments}\n      organization={props.queryProps.organization}\n      orgSlug={props.queryProps.organization.slug}\n      eventView={props.queryProps.eventView}\n      query={props.queryProps.eventView.getQueryWithAdditionalConditions()}\n      widgetData={props.widgetData}\n      referrer={genericQueryReferrer(props.queryProps.chartSetting)}\n    >\n      {results => {\n        return (\n          <Fragment>\n            <QueryResultSaver<T> results={results} {...props} query={query} />\n          </Fragment>\n        );\n      }}\n    </query.component>\n  );\n}\n\nfunction QueryResultSaver<T extends WidgetDataConstraint>(\n  props: {\n    // TODO(k-fish): Fix this any.\n    query: QueryDefinitionWithKey<T>;\n    results: any;\n  } & QueryHandlerProps<T>\n) {\n  const mepContext = useMEPDataContext();\n  const {results, query} = props;\n\n  const transformed = query.transform(props.queryProps, results, props.query);\n\n  useEffect(() => {\n    const isMetricsData = getIsMetricsDataFromResults(\n      results,\n      props.queryProps.fields[0]\n    );\n    mepContext.setIsMetricsData(isMetricsData);\n    props.setWidgetDataForKey(query.queryKey, transformed);\n  }, [transformed?.hasData, transformed?.isLoading, transformed?.isErrored]);\n  return <Fragment />;\n}\n","import styled from '@emotion/styled';\n\nimport {HeaderTitleLegend} from 'sentry/components/charts/styles';\nimport QuestionTooltip from 'sentry/components/questionTooltip';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {space} from 'sentry/styles/space';\nimport {MEPTag} from 'sentry/utils/performance/contexts/metricsEnhancedPerformanceDataContext';\n\nimport {\n  GenericPerformanceWidgetProps,\n  WidgetDataConstraint,\n  WidgetDataProps,\n} from '../types';\n\nexport function WidgetHeader<T extends WidgetDataConstraint>(\n  props: GenericPerformanceWidgetProps<T> & WidgetDataProps<T>\n) {\n  const {title, titleTooltip, Subtitle, HeaderActions, InteractiveTitle} = props;\n  return (\n    <WidgetHeaderContainer>\n      <TitleContainer>\n        <StyledHeaderTitleLegend data-test-id=\"performance-widget-title\">\n          {InteractiveTitle ? (\n            <InteractiveTitle {...props} />\n          ) : (\n            <TextOverflow>{title}</TextOverflow>\n          )}\n          <MEPTag />\n          {titleTooltip && (\n            <QuestionTooltip position=\"top\" size=\"sm\" title={titleTooltip} />\n          )}\n        </StyledHeaderTitleLegend>\n        {Subtitle ? <Subtitle {...props} /> : null}\n      </TitleContainer>\n      <HeaderActionsContainer>\n        {HeaderActions && <HeaderActions {...props} />}\n      </HeaderActionsContainer>\n    </WidgetHeaderContainer>\n  );\n}\n\nconst StyledHeaderTitleLegend = styled(HeaderTitleLegend)`\n  position: relative;\n  z-index: initial;\n  top: -${space(0.5)};\n`;\n\nconst TitleContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst WidgetHeaderContainer = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: ${space(1)};\n`;\n\nconst HeaderActionsContainer = styled('div')`\n  display: flex;\n  align-items: center;\n  gap: ${space(1)};\n`;\n","import {Fragment, useCallback, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport ErrorPanel from 'sentry/components/charts/errorPanel';\nimport Placeholder from 'sentry/components/placeholder';\nimport {IconWarning} from 'sentry/icons/iconWarning';\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {trackAnalytics} from 'sentry/utils/analytics';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {MEPDataProvider} from 'sentry/utils/performance/contexts/metricsEnhancedPerformanceDataContext';\nimport useApi from 'sentry/utils/useApi';\nimport getPerformanceWidgetContainer from 'sentry/views/performance/landing/widgets/components/performanceWidgetContainer';\n\nimport {\n  GenericPerformanceWidgetProps,\n  WidgetDataConstraint,\n  WidgetDataProps,\n  WidgetDataResult,\n  WidgetPropUnion,\n} from '../types';\nimport {PerformanceWidgetSetting} from '../widgetDefinitions';\n\nimport {DataStateSwitch} from './dataStateSwitch';\nimport {QueryHandler} from './queryHandler';\nimport {WidgetHeader} from './widgetHeader';\n\n// Generic performance widget for type T, where T defines all the data contained in the widget.\nexport function GenericPerformanceWidget<T extends WidgetDataConstraint>(\n  props: WidgetPropUnion<T>\n) {\n  // Use object keyed to chart setting so switching between charts of a similar type doesn't retain data with query components still having inflight requests.\n  const [allWidgetData, setWidgetData] = useState<{[chartSetting: string]: T}>({});\n  const widgetData = allWidgetData[props.chartSetting] ?? {};\n  const widgetDataRef = useRef(widgetData);\n\n  const setWidgetDataForKey = useCallback(\n    (dataKey: string, result?: WidgetDataResult) => {\n      const _widgetData = widgetDataRef.current;\n      const newWidgetData = {..._widgetData, [dataKey]: result};\n      widgetDataRef.current = newWidgetData;\n      setWidgetData({[props.chartSetting]: newWidgetData});\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [allWidgetData, setWidgetData]\n  );\n  const removeWidgetDataForKey = useCallback(\n    (dataKey: string) => {\n      const _widgetData = widgetDataRef.current;\n      const newWidgetData = {..._widgetData};\n      delete newWidgetData[dataKey];\n      widgetDataRef.current = newWidgetData;\n      setWidgetData({[props.chartSetting]: newWidgetData});\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [allWidgetData, setWidgetData]\n  );\n  const widgetProps = {widgetData, setWidgetDataForKey, removeWidgetDataForKey};\n\n  const queries = Object.entries(props.Queries).map(([key, definition]) => ({\n    ...definition,\n    queryKey: key,\n  }));\n\n  const api = useApi();\n\n  const totalHeight = props.Visualizations.reduce((acc, curr) => acc + curr.height, 0);\n\n  return (\n    <Fragment>\n      <MEPDataProvider chartSetting={props.chartSetting}>\n        <QueryHandler\n          eventView={props.eventView}\n          widgetData={widgetData}\n          setWidgetDataForKey={setWidgetDataForKey}\n          removeWidgetDataForKey={removeWidgetDataForKey}\n          queryProps={props}\n          queries={queries}\n          api={api}\n        />\n        <DataDisplay<T> {...props} {...widgetProps} totalHeight={totalHeight} />\n      </MEPDataProvider>\n    </Fragment>\n  );\n}\n\nfunction trackDataComponentClicks(\n  chartSetting: PerformanceWidgetSetting,\n  organization: Organization\n) {\n  trackAnalytics('performance_views.landingv3.widget.interaction', {\n    organization,\n    widget_type: chartSetting,\n  });\n}\n\nexport function DataDisplay<T extends WidgetDataConstraint>(\n  props: GenericPerformanceWidgetProps<T> & WidgetDataProps<T> & {totalHeight: number}\n) {\n  const {Visualizations, chartHeight, totalHeight, containerType, EmptyComponent} = props;\n\n  const Container = getPerformanceWidgetContainer({\n    containerType,\n  });\n\n  const numberKeys = Object.keys(props.Queries).length;\n  const missingDataKeys = Object.values(props.widgetData).length !== numberKeys;\n  const hasData =\n    !missingDataKeys && Object.values(props.widgetData).every(d => !d || d.hasData);\n  const isLoading = Object.values(props.widgetData).some(d => !d || d.isLoading);\n  const isErrored =\n    !missingDataKeys && Object.values(props.widgetData).some(d => d && d.isErrored);\n\n  return (\n    <Container data-test-id=\"performance-widget-container\">\n      <ContentContainer>\n        <WidgetHeader<T> {...props} />\n      </ContentContainer>\n      <DataStateSwitch\n        isLoading={isLoading}\n        isErrored={isErrored}\n        hasData={hasData}\n        errorComponent={<DefaultErrorComponent height={totalHeight} />}\n        dataComponents={Visualizations.map((Visualization, index) => (\n          <ContentContainer\n            key={index}\n            noPadding={Visualization.noPadding}\n            bottomPadding={Visualization.bottomPadding}\n            data-test-id=\"widget-state-has-data\"\n            onClick={() =>\n              trackDataComponentClicks(props.chartSetting, props.organization)\n            }\n          >\n            {getDynamicText({\n              value: (\n                <Visualization.component\n                  grid={defaultGrid}\n                  queryFields={Visualization.fields}\n                  widgetData={props.widgetData}\n                  height={chartHeight}\n                />\n              ),\n              fixed: <Placeholder height={`${chartHeight}px`} />,\n            })}\n          </ContentContainer>\n        ))}\n        loadingComponent={<PerformanceWidgetPlaceholder height={`${totalHeight}px`} />}\n        emptyComponent={\n          EmptyComponent ? (\n            <EmptyComponent />\n          ) : (\n            <PerformanceWidgetPlaceholder height={`${totalHeight}px`} />\n          )\n        }\n      />\n    </Container>\n  );\n}\n\nfunction DefaultErrorComponent(props: {height: number}) {\n  return (\n    <ErrorPanel data-test-id=\"widget-state-is-errored\" height={`${props.height}px`}>\n      <IconWarning color=\"gray300\" size=\"lg\" />\n    </ErrorPanel>\n  );\n}\n\nconst defaultGrid = {\n  left: space(0),\n  right: space(0),\n  top: space(2),\n  bottom: space(1),\n};\n\nconst ContentContainer = styled('div')<{bottomPadding?: boolean; noPadding?: boolean}>`\n  padding-left: ${p => (p.noPadding ? space(0) : space(2))};\n  padding-right: ${p => (p.noPadding ? space(0) : space(2))};\n  padding-bottom: ${p => (p.bottomPadding ? space(1) : space(0))};\n`;\n\nconst PerformanceWidgetPlaceholder = styled(Placeholder)`\n  border-color: transparent;\n  border-bottom-right-radius: inherit;\n  border-bottom-left-radius: inherit;\n`;\n\nGenericPerformanceWidget.defaultProps = {\n  containerType: 'panel',\n  chartHeight: 200,\n};\n","import styled from '@emotion/styled';\n\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport {RadioLineItem} from 'sentry/components/forms/controls/radioGroup';\nimport Link from 'sentry/components/links/link';\nimport Radio from 'sentry/components/radio';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconClose} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  items: (() => React.ReactNode)[];\n  selectedIndex: number;\n  setSelectedIndex: (index: number) => void;\n  radioColor?: string;\n};\n\nexport default function SelectableList(props: Props) {\n  return (\n    <div>\n      {props.items.map((item, index) => (\n        <SelectableItem\n          {...props}\n          isSelected={index === props.selectedIndex}\n          currentIndex={index}\n          key={index}\n        >\n          {item()}\n        </SelectableItem>\n      ))}\n    </div>\n  );\n}\n\nfunction SelectableItem({\n  isSelected,\n  currentIndex: index,\n  children,\n  setSelectedIndex,\n  radioColor,\n}: {children: React.ReactNode; currentIndex: number; isSelected: boolean} & Props) {\n  return (\n    <ListItemContainer>\n      <ItemRadioContainer color={radioColor ?? ''}>\n        <RadioLineItem index={index} role=\"radio\">\n          <Radio checked={isSelected} onChange={() => setSelectedIndex(index)} />\n        </RadioLineItem>\n      </ItemRadioContainer>\n      {children}\n    </ListItemContainer>\n  );\n}\n\nexport const RightAlignedCell = styled('div')`\n  text-align: right;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0 ${space(1)};\n`;\n\nexport const Subtitle = styled('span')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeMedium};\n  display: inline-block;\n`;\n\nexport const GrowLink = styled(Link)`\n  flex-grow: 1;\n  display: inherit;\n`;\n\nexport function WidgetEmptyStateWarning() {\n  return (\n    <StyledEmptyStateWarning>\n      <PrimaryMessage>{t('No results found')}</PrimaryMessage>\n      <SecondaryMessage>\n        {t(\n          'Transactions may not be listed due to the filters above or a low sampling rate'\n        )}\n      </SecondaryMessage>\n    </StyledEmptyStateWarning>\n  );\n}\n\nexport function ListClose(props: {\n  onClick: () => void;\n  setSelectListIndex: (n: number) => void;\n}) {\n  return (\n    <StyledTooltip title={t('Exclude this transaction from the search filter.')}>\n      <StyledIconClose\n        onClick={() => {\n          props.onClick();\n          props.setSelectListIndex(0);\n        }}\n      />\n    </StyledTooltip>\n  );\n}\n\nconst StyledTooltip = styled(Tooltip)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StyledIconClose = styled(IconClose)`\n  cursor: pointer;\n  color: ${p => p.theme.gray200};\n`;\n\nconst StyledEmptyStateWarning = styled(EmptyStateWarning)`\n  min-height: 300px;\n  justify-content: center;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst PrimaryMessage = styled('span')`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  color: ${p => p.theme.gray300};\n  font-weight: 600;\n  margin: 0 auto ${space(1)};\n`;\n\nconst SecondaryMessage = styled('p')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.gray300};\n  max-width: 300px;\n`;\n\nconst ListItemContainer = styled('div')`\n  display: flex;\n  border-top: 1px solid ${p => p.theme.border};\n  padding: ${space(1)} ${space(2)};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst ItemRadioContainer = styled('div')`\n  grid-row: 1/3;\n  input {\n    cursor: pointer;\n  }\n  input:checked::after {\n    background-color: ${p => p.color};\n  }\n`;\n"],"names":["_styled","target","p","height","theme","gray300","fontSizeExtraLarge","SortLink","_ref","align","title","canSort","generateSortLink","onClick","direction","replace","_jsx","StyledNonLink","children","arrow","StyledIconArrow","size","_jsxs","StyledLink","to","e","preventDefault","browserHistory","displayName","props","_align","css","_css","forwardProps","Link","IconArrow","name","styles","StyledPanel","Panel","space","Div","containerType","DataStateSwitch","isErrored","errorComponent","isLoading","loadingComponent","hasData","Fragment","dataComponents","emptyComponent","QueryHandler","queries","length","filter","q","enabled","widgetData","map","query","SingleQueryHandler","queryKey","globalSelection","queryProps","eventView","getPageFilters","start","datetime","getUtcToLocalDateObject","end","useEffect","removeWidgetDataForKey","component","fields","yAxis","period","project","projects","environment","environments","organization","orgSlug","slug","getQueryWithAdditionalConditions","referrer","setting","chartSetting","results","QueryResultSaver","mepContext","useMEPDataContext","transformed","transform","isMetricsData","getIsMetricsDataFromResults","setIsMetricsData","setWidgetDataForKey","WidgetHeader","titleTooltip","Subtitle","HeaderActions","InteractiveTitle","WidgetHeaderContainer","TitleContainer","StyledHeaderTitleLegend","TextOverflow","MEPTag","QuestionTooltip","position","HeaderActionsContainer","HeaderTitleLegend","GenericPerformanceWidget","allWidgetData","setWidgetData","useState","widgetDataRef","useRef","useCallback","dataKey","result","newWidgetData","current","widgetProps","Object","entries","Queries","key","definition","api","useApi","totalHeight","Visualizations","reduce","acc","curr","MEPDataProvider","DataDisplay","chartHeight","EmptyComponent","Container","getPerformanceWidgetContainer","numberKeys","keys","missingDataKeys","values","every","d","some","ContentContainer","DefaultErrorComponent","Visualization","index","noPadding","bottomPadding","trackDataComponentClicks","trackAnalytics","widget_type","getDynamicText","value","grid","defaultGrid","queryFields","fixed","Placeholder","PerformanceWidgetPlaceholder","ErrorPanel","IconWarning","color","left","right","top","bottom","defaultProps","SelectableList","items","item","_createElement","SelectableItem","isSelected","selectedIndex","currentIndex","setSelectedIndex","radioColor","ListItemContainer","ItemRadioContainer","RadioLineItem","role","Radio","checked","onChange","RightAlignedCell","fontSizeMedium","GrowLink","WidgetEmptyStateWarning","StyledEmptyStateWarning","PrimaryMessage","t","SecondaryMessage","ListClose","StyledTooltip","StyledIconClose","setSelectListIndex","Tooltip","IconClose","gray200","EmptyStateWarning","border"],"sourceRoot":""}