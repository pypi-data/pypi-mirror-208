//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[144]
)
{
	.reg .pred 	%p<240>;
	.reg .f32 	%f<400>;
	.reg .b32 	%r<2531>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<549>;


	mov.b64 	%rd39, _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd39;
	ld.param.v2.u32 	{%r872, %r873}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r874, %r875}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r876, %r877}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r878, %r879}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r880, %r881}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r882, %r883}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r884, %r885}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb1ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	mov.u32 	%r22, %tid.y;
	mov.u32 	%r23, %tid.z;
	mov.u32 	%r24, %ctaid.y;
	mov.u32 	%r25, %ctaid.z;
	mov.u32 	%r886, 32;
	sub.s32 	%r26, %r886, %r879;
	mov.u32 	%r27, %tid.x;
	setp.le.s32 	%p12, %r26, %r27;
	add.s32 	%r887, %r885, -1;
	add.s32 	%r888, %r883, %r877;
	add.s32 	%r889, %r888, %r878;
	add.s32 	%r890, %r889, 1;
	mad.lo.s32 	%r891, %r887, %r884, %r890;
	mul.lo.s32 	%r892, %r872, %r874;
	shl.b32 	%r28, %r892, 1;
	shl.b32 	%r893, %r892, 2;
	div.s32 	%r894, %r891, %r893;
	add.s32 	%r895, %r894, 1;
	mul.lo.s32 	%r896, %r895, %r878;
	mul.lo.s32 	%r897, %r873, %r875;
	shl.b32 	%r29, %r897, 1;
	div.s32 	%r898, %r896, %r29;
	add.s32 	%r899, %r898, 1;
	mul.lo.s32 	%r30, %r899, %r877;
	ld.param.u64 	%rd40, [%rd1+136];
	cvta.to.global.u64 	%rd2, %rd40;
	mad.lo.s32 	%r902, %r874, %r25, %r24;
	mad.lo.s32 	%r903, %r902, %r873, %r23;
	mad.lo.s32 	%r904, %r903, %r872, %r22;
	shl.b32 	%r31, %r904, 5;
	add.s32 	%r2151, %r31, %r27;
	mul.lo.s32 	%r905, %r897, %r892;
	shl.b32 	%r35, %r905, 5;
	shl.b32 	%r906, %r879, 2;
	mov.u32 	%r907, 128;
	sub.s32 	%r36, %r907, %r906;
	mul.lo.s32 	%r908, %r878, %r877;
	mul.lo.s32 	%r909, %r908, %r885;
	mul.lo.s32 	%r910, %r909, %r36;
	mul.lo.s32 	%r37, %r910, 3;
	setp.ge.s32 	%p13, %r2151, %r37;
	@%p13 bra 	$L__BB0_9;

	not.b32 	%r911, %r27;
	add.s32 	%r912, %r37, %r911;
	sub.s32 	%r913, %r912, %r31;
	mul.lo.s32 	%r914, %r897, %r872;
	mul.lo.s32 	%r915, %r914, %r874;
	shl.b32 	%r916, %r915, 5;
	div.u32 	%r38, %r913, %r916;
	add.s32 	%r917, %r38, 1;
	and.b32  	%r2148, %r917, 3;
	setp.eq.s32 	%p14, %r2148, 0;
	mov.u32 	%r2149, %r2151;
	@%p14 bra 	$L__BB0_6;

	mov.u32 	%r2149, %r2151;

$L__BB0_5:
	.pragma "nounroll";
	mul.wide.s32 	%rd41, %r2149, 4;
	add.s64 	%rd42, %rd2, %rd41;
	mov.u32 	%r918, 0;
	st.global.u32 	[%rd42], %r918;
	add.s32 	%r2149, %r2149, %r35;
	add.s32 	%r2148, %r2148, -1;
	setp.ne.s32 	%p15, %r2148, 0;
	@%p15 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p16, %r38, 3;
	@%p16 bra 	$L__BB0_9;

	mul.wide.s32 	%rd45, %r35, 4;

$L__BB0_8:
	mul.wide.s32 	%rd43, %r2149, 4;
	add.s64 	%rd44, %rd2, %rd43;
	mov.u32 	%r919, 0;
	st.global.u32 	[%rd44], %r919;
	add.s64 	%rd46, %rd44, %rd45;
	st.global.u32 	[%rd46], %r919;
	add.s32 	%r920, %r2149, %r35;
	add.s32 	%r921, %r920, %r35;
	add.s64 	%rd47, %rd46, %rd45;
	st.global.u32 	[%rd47], %r919;
	add.s32 	%r922, %r921, %r35;
	add.s64 	%rd48, %rd47, %rd45;
	st.global.u32 	[%rd48], %r919;
	add.s32 	%r2149, %r922, %r35;
	setp.lt.s32 	%p17, %r2149, %r37;
	@%p17 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd49, [%rd1+56];
	cvta.to.global.u64 	%rd3, %rd49;
	sub.s32 	%r923, %r878, %r28;
	div.s32 	%r924, %r923, %r29;
	mul.lo.s32 	%r925, %r924, %r877;
	sub.s32 	%r47, %r925, %r28;
	sub.s32 	%r926, %r877, %r29;
	mul.lo.s32 	%r927, %r926, %r874;
	mul.lo.s32 	%r48, %r872, 384;
	add.s32 	%r928, %r48, %r48;
	add.s32 	%r929, %r928, 128;
	mul.lo.s32 	%r931, %r897, 768;
	mul.lo.s32 	%r932, %r927, %r929;
	mad.lo.s32 	%r49, %r931, %r47, %r932;
	bra.uni 	$L__BB0_10;

$L__BB0_425:
	mov.f32 	%f399, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f399;
  cvt.rn.f16.f32 high, %f399;
  mov.b32 %r2123, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd534, %r2151, 4;
	add.s64 	%rd535, %rd3, %rd534;
	st.global.u32 	[%rd535], %r2123;
	add.s32 	%r2151, %r2151, %r35;

$L__BB0_10:
	setp.lt.s32 	%p18, %r2151, %r49;
	@%p18 bra 	$L__BB0_425;

	ld.param.u64 	%rd50, [%rd1+96];
	cvta.to.global.u64 	%rd5, %rd50;
	ld.param.u64 	%rd51, [%rd1+64];
	cvta.to.global.u64 	%rd6, %rd51;
	mad.lo.s32 	%r2193, %r872, %r24, %r22;
	mul.lo.s32 	%r54, %r873, %r25;
	add.s32 	%r55, %r54, %r23;
	setp.ge.s32 	%p19, %r2193, %r877;
	@%p19 bra 	$L__BB0_35;

	setp.gt.s32 	%p20, %r26, %r27;
	mov.u32 	%r933, 31;
	sub.s32 	%r934, %r933, %r27;
	selp.b32 	%r935, %r27, %r934, %p20;
	shl.b32 	%r936, %r935, 2;
	mov.u32 	%r937, 2;
	sub.s32 	%r56, %r936, %r880;
	sub.s32 	%r938, %r937, %r880;
	add.s32 	%r57, %r938, %r936;
	shl.b32 	%r58, %r908, 6;
	add.s32 	%r59, %r877, -1;
	add.s32 	%r60, %r56, 1;
	add.s32 	%r61, %r57, 1;
	shl.b32 	%r62, %r27, 1;
	or.b32  	%r63, %r62, 1;
	shr.u32 	%r940, %r63, 31;
	add.s32 	%r941, %r63, %r940;
	shr.s32 	%r65, %r941, 1;
	and.b32  	%r942, %r941, -2;
	sub.s32 	%r943, %r63, %r942;
	add.s32 	%r64, %r943, %r58;
	rem.s32 	%r978, %r60, %r36;
	add.s32 	%r979, %r978, %r36;
	rem.s32 	%r88, %r979, %r36;
	rem.s32 	%r980, %r61, %r36;
	add.s32 	%r981, %r980, %r36;
	rem.s32 	%r89, %r981, %r36;
	mov.u32 	%r2152, %r2193;

$L__BB0_13:
	setp.ge.s32 	%p21, %r55, %r878;
	@%p21 bra 	$L__BB0_34;

	add.s32 	%r67, %r59, %r2152;
	rem.s32 	%r944, %r56, %r36;
	add.s32 	%r945, %r944, %r36;
	rem.s32 	%r68, %r945, %r36;
	rem.s32 	%r946, %r57, %r36;
	add.s32 	%r947, %r946, %r36;
	rem.s32 	%r69, %r947, %r36;
	mul.lo.s32 	%r70, %r2152, %r878;
	add.s32 	%r948, %r877, %r2152;
	mul.lo.s32 	%r71, %r948, %r878;
	add.s32 	%r949, %r948, %r877;
	mul.lo.s32 	%r72, %r949, %r878;
	mov.u32 	%r2153, %r55;

$L__BB0_15:
	mul.lo.s32 	%r74, %r2153, %r877;
	add.s32 	%r75, %r74, %r2152;
	shl.b32 	%r76, %r75, 6;
	@%p20 bra 	$L__BB0_17;
	bra.uni 	$L__BB0_16;

$L__BB0_17:
	add.s32 	%r952, %r70, %r2153;
	mul.lo.s32 	%r953, %r952, %r36;
	add.s32 	%r954, %r953, %r68;
	mul.wide.s32 	%rd52, %r954, 4;
	add.s64 	%rd53, %rd5, %rd52;
	ld.global.f32 	%f40, [%rd53];
	add.s32 	%r955, %r953, %r69;
	mul.wide.s32 	%rd54, %r955, 4;
	add.s64 	%rd55, %rd5, %rd54;
	ld.global.f32 	%f41, [%rd55];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f40;
  cvt.rn.f16.f32 high, %f41;
  mov.b32 %r2154, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_18;

$L__BB0_16:
	mov.f32 	%f39, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f39;
  cvt.rn.f16.f32 high, %f39;
  mov.b32 %r2154, {low,high};}

	// end inline asm

$L__BB0_18:
	shl.b32 	%r80, %r75, 5;
	add.s32 	%r956, %r80, %r27;
	shl.b32 	%r957, %r956, 2;
	add.s32 	%r958, %r58, %r957;
	mul.wide.s32 	%rd56, %r958, 4;
	add.s64 	%rd57, %rd6, %rd56;
	st.global.u32 	[%rd57], %r2154;
	@%p20 bra 	$L__BB0_20;
	bra.uni 	$L__BB0_19;

$L__BB0_20:
	add.s32 	%r961, %r71, %r2153;
	mul.lo.s32 	%r962, %r961, %r36;
	add.s32 	%r963, %r962, %r68;
	mul.wide.s32 	%rd58, %r963, 4;
	add.s64 	%rd59, %rd5, %rd58;
	ld.global.f32 	%f44, [%rd59];
	add.s32 	%r964, %r962, %r69;
	mul.wide.s32 	%rd60, %r964, 4;
	add.s64 	%rd61, %rd5, %rd60;
	ld.global.f32 	%f45, [%rd61];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f44;
  cvt.rn.f16.f32 high, %f45;
  mov.b32 %r2155, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_21;

$L__BB0_19:
	mov.f32 	%f43, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f43;
  cvt.rn.f16.f32 high, %f43;
  mov.b32 %r2155, {low,high};}

	// end inline asm

$L__BB0_21:
	add.s32 	%r965, %r62, %r76;
	mul.wide.s32 	%rd62, %r965, 4;
	add.s64 	%rd63, %rd6, %rd62;
	st.global.u32 	[%rd63], %r2155;
	@%p20 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_22;

$L__BB0_23:
	add.s32 	%r968, %r72, %r2153;
	mul.lo.s32 	%r969, %r968, %r36;
	add.s32 	%r970, %r969, %r68;
	mul.wide.s32 	%rd64, %r970, 4;
	add.s64 	%rd65, %rd5, %rd64;
	ld.global.f32 	%f48, [%rd65];
	add.s32 	%r971, %r969, %r69;
	mul.wide.s32 	%rd66, %r971, 4;
	add.s64 	%rd67, %rd5, %rd66;
	ld.global.f32 	%f49, [%rd67];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f48;
  cvt.rn.f16.f32 high, %f49;
  mov.b32 %r2156, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_24;

$L__BB0_22:
	mov.f32 	%f47, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f47;
  cvt.rn.f16.f32 high, %f47;
  mov.b32 %r2156, {low,high};}

	// end inline asm

$L__BB0_24:
	rem.s32 	%r972, %r67, %r877;
	add.s32 	%r973, %r972, %r74;
	shl.b32 	%r87, %r973, 5;
	add.s32 	%r974, %r87, %r27;
	shl.b32 	%r975, %r974, 2;
	add.s32 	%r976, %r58, %r975;
	add.s32 	%r977, %r976, 2;
	mul.wide.s32 	%rd68, %r977, 4;
	add.s64 	%rd69, %rd6, %rd68;
	st.global.u32 	[%rd69], %r2156;
	@%p20 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_25;

$L__BB0_26:
	add.s32 	%r984, %r70, %r2153;
	mul.lo.s32 	%r985, %r984, %r36;
	add.s32 	%r986, %r985, %r88;
	mul.wide.s32 	%rd70, %r986, 4;
	add.s64 	%rd71, %rd5, %rd70;
	ld.global.f32 	%f52, [%rd71];
	add.s32 	%r987, %r985, %r89;
	mul.wide.s32 	%rd72, %r987, 4;
	add.s64 	%rd73, %rd5, %rd72;
	ld.global.f32 	%f53, [%rd73];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f52;
  cvt.rn.f16.f32 high, %f53;
  mov.b32 %r2157, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_27;

$L__BB0_25:
	mov.f32 	%f51, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f51;
  cvt.rn.f16.f32 high, %f51;
  mov.b32 %r2157, {low,high};}

	// end inline asm

$L__BB0_27:
	add.s32 	%r988, %r80, %r65;
	shl.b32 	%r989, %r988, 2;
	add.s32 	%r990, %r64, %r989;
	mul.wide.s32 	%rd74, %r990, 4;
	add.s64 	%rd75, %rd6, %rd74;
	st.global.u32 	[%rd75], %r2157;
	@%p20 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_28;

$L__BB0_29:
	add.s32 	%r993, %r71, %r2153;
	mul.lo.s32 	%r994, %r993, %r36;
	add.s32 	%r995, %r994, %r88;
	mul.wide.s32 	%rd76, %r995, 4;
	add.s64 	%rd77, %rd5, %rd76;
	ld.global.f32 	%f56, [%rd77];
	add.s32 	%r996, %r994, %r89;
	mul.wide.s32 	%rd78, %r996, 4;
	add.s64 	%rd79, %rd5, %rd78;
	ld.global.f32 	%f57, [%rd79];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f56;
  cvt.rn.f16.f32 high, %f57;
  mov.b32 %r2158, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_30;

$L__BB0_28:
	mov.f32 	%f55, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r2158, {low,high};}

	// end inline asm

$L__BB0_30:
	add.s32 	%r997, %r63, %r76;
	mul.wide.s32 	%rd80, %r997, 4;
	add.s64 	%rd81, %rd6, %rd80;
	st.global.u32 	[%rd81], %r2158;
	@%p20 bra 	$L__BB0_32;
	bra.uni 	$L__BB0_31;

$L__BB0_32:
	add.s32 	%r1000, %r72, %r2153;
	mul.lo.s32 	%r1001, %r1000, %r36;
	add.s32 	%r1002, %r1001, %r88;
	mul.wide.s32 	%rd82, %r1002, 4;
	add.s64 	%rd83, %rd5, %rd82;
	ld.global.f32 	%f60, [%rd83];
	add.s32 	%r1003, %r1001, %r89;
	mul.wide.s32 	%rd84, %r1003, 4;
	add.s64 	%rd85, %rd5, %rd84;
	ld.global.f32 	%f61, [%rd85];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f60;
  cvt.rn.f16.f32 high, %f61;
  mov.b32 %r2159, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_33;

$L__BB0_31:
	mov.f32 	%f59, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f59;
  cvt.rn.f16.f32 high, %f59;
  mov.b32 %r2159, {low,high};}

	// end inline asm

$L__BB0_33:
	add.s32 	%r1004, %r87, %r65;
	shl.b32 	%r1005, %r1004, 2;
	add.s32 	%r1006, %r64, %r1005;
	add.s32 	%r1007, %r1006, 2;
	mul.wide.s32 	%rd86, %r1007, 4;
	add.s64 	%rd87, %rd6, %rd86;
	st.global.u32 	[%rd87], %r2159;
	add.s32 	%r2153, %r2153, %r897;
	setp.lt.s32 	%p28, %r2153, %r878;
	@%p28 bra 	$L__BB0_15;

$L__BB0_34:
	add.s32 	%r2152, %r2152, %r892;
	setp.lt.s32 	%p29, %r2152, %r877;
	@%p29 bra 	$L__BB0_13;

$L__BB0_35:
	ld.param.u64 	%rd88, [%rd1+104];
	cvta.to.global.u64 	%rd7, %rd88;
	ld.param.u64 	%rd89, [%rd1+72];
	cvta.to.global.u64 	%rd8, %rd89;
	@%p19 bra 	$L__BB0_119;

	shl.b32 	%r101, %r55, 1;
	mov.u64 	%rd90, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	mov.u32 	%r2160, %r2193;

$L__BB0_37:
	setp.ge.s32 	%p31, %r101, %r878;
	@%p31 bra 	$L__BB0_118;

	mov.u32 	%r2161, %r101;

$L__BB0_39:
	setp.ne.s32 	%p32, %r27, 0;
	@%p32 bra 	$L__BB0_117;

	shr.u32 	%r1009, %r2161, 31;
	add.s32 	%r1010, %r2161, %r1009;
	shr.s32 	%r1011, %r1010, 1;
	mad.lo.s32 	%r1012, %r1011, %r877, %r2160;
	shl.b32 	%r105, %r1012, 5;
	add.s32 	%r106, %r2161, -2;
	mul.lo.s32 	%r107, %r106, %r877;
	add.s32 	%r1013, %r878, %r106;
	mul.lo.s32 	%r108, %r1013, %r877;
	add.s32 	%r1014, %r1013, %r878;
	mul.lo.s32 	%r109, %r1014, %r877;
	add.s32 	%r110, %r107, %r877;
	add.s32 	%r111, %r2161, -1;
	add.s32 	%r1015, %r878, %r111;
	mul.lo.s32 	%r112, %r1015, %r877;
	add.s32 	%r1016, %r1015, %r878;
	mul.lo.s32 	%r113, %r1016, %r877;
	add.s32 	%r1017, %r878, %r2161;
	mul.lo.s32 	%r114, %r1017, %r877;
	add.s32 	%r1018, %r1017, %r878;
	mul.lo.s32 	%r115, %r1018, %r877;
	mul.lo.s32 	%r116, %r2161, %r877;
	add.s32 	%r117, %r116, %r877;
	add.s32 	%r118, %r2161, 1;
	add.s32 	%r1019, %r878, %r118;
	mul.lo.s32 	%r119, %r1019, %r877;
	add.s32 	%r1020, %r1019, %r878;
	mul.lo.s32 	%r120, %r1020, %r877;
	add.s32 	%r121, %r117, %r877;
	add.s32 	%r122, %r2161, 2;
	add.s32 	%r1021, %r878, %r122;
	mul.lo.s32 	%r123, %r1021, %r877;
	add.s32 	%r1022, %r1021, %r878;
	mul.lo.s32 	%r124, %r1022, %r877;
	mov.u32 	%r2164, 0;
	mov.u64 	%rd546, %rd90;

$L__BB0_41:
	ld.global.nc.u32 	%r1023, [%rd546];
	cvt.rn.f64.s32 	%fd1, %r1023;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r126, %r1023, %r2160;
	setp.lt.s32 	%p33, %r126, %r877;
	or.b32  	%r1024, %r106, %r126;
	setp.gt.s32 	%p34, %r1024, -1;
	and.pred  	%p35, %p33, %p34;
	setp.lt.s32 	%p36, %r106, %r878;
	and.pred  	%p1, %p36, %p35;
	cvt.rn.f32.f64 	%f62, %fd3;
	add.f32 	%f63, %f62, 0f3E800000;
	abs.f32 	%f1, %f63;
	add.f32 	%f64, %f1, 0f40200000;
	setp.geu.f32 	%p37, %f64, 0f40000000;
	@%p37 bra 	$L__BB0_46;

	@%p1 bra 	$L__BB0_44;
	bra.uni 	$L__BB0_43;

$L__BB0_44:
	add.s32 	%r1027, %r107, %r126;
	mul.wide.s32 	%rd91, %r1027, 4;
	add.s64 	%rd92, %rd7, %rd91;
	ld.global.f32 	%f67, [%rd92];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f67;
  mov.b32 %r2163, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_45;

$L__BB0_43:
	mov.f32 	%f66, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f66;
  cvt.rn.f16.f32 high, %f66;
  mov.b32 %r2163, {low,high};}

	// end inline asm

$L__BB0_45:
	add.s32 	%r1028, %r2164, %r105;
	mul.wide.s32 	%rd93, %r1028, 4;
	add.s64 	%rd94, %rd8, %rd93;
	st.global.u32 	[%rd94], %r2163;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_46:
	cvt.rn.f32.f64 	%f68, %fd1;
	add.f32 	%f69, %f68, 0f3E800000;
	abs.f32 	%f2, %f69;
	add.f32 	%f3, %f2, 0f40000000;
	setp.geu.f32 	%p38, %f3, 0f40000000;
	@%p38 bra 	$L__BB0_51;

	@%p1 bra 	$L__BB0_49;
	bra.uni 	$L__BB0_48;

$L__BB0_49:
	add.s32 	%r1031, %r108, %r126;
	mul.wide.s32 	%rd95, %r1031, 4;
	add.s64 	%rd96, %rd7, %rd95;
	ld.global.f32 	%f72, [%rd96];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f72;
  mov.b32 %r2165, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_50;

$L__BB0_48:
	mov.f32 	%f71, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f71;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r2165, {low,high};}

	// end inline asm

$L__BB0_50:
	add.s32 	%r1032, %r2164, %r105;
	mul.wide.s32 	%rd97, %r1032, 4;
	add.s64 	%rd98, %rd8, %rd97;
	st.global.u32 	[%rd98], %r2165;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_51:
	add.f32 	%f73, %f2, 0f40200000;
	setp.geu.f32 	%p39, %f73, 0f40000000;
	@%p39 bra 	$L__BB0_56;

	@%p1 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_53;

$L__BB0_54:
	add.s32 	%r1035, %r109, %r126;
	mul.wide.s32 	%rd99, %r1035, 4;
	add.s64 	%rd100, %rd7, %rd99;
	ld.global.f32 	%f76, [%rd100];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f76;
  mov.b32 %r2167, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_55;

$L__BB0_53:
	mov.f32 	%f75, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f75;
  cvt.rn.f16.f32 high, %f75;
  mov.b32 %r2167, {low,high};}

	// end inline asm

$L__BB0_55:
	add.s32 	%r1036, %r2164, %r105;
	mul.wide.s32 	%rd101, %r1036, 4;
	add.s64 	%rd102, %rd8, %rd101;
	st.global.u32 	[%rd102], %r2167;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_56:
	or.b32  	%r1037, %r111, %r126;
	setp.gt.s32 	%p40, %r1037, -1;
	and.pred  	%p42, %p33, %p40;
	setp.le.s32 	%p43, %r2161, %r878;
	and.pred  	%p2, %p43, %p42;
	add.f32 	%f4, %f1, 0f3FC00000;
	setp.geu.f32 	%p44, %f4, 0f40000000;
	@%p44 bra 	$L__BB0_61;

	@%p2 bra 	$L__BB0_59;
	bra.uni 	$L__BB0_58;

$L__BB0_59:
	add.s32 	%r1040, %r110, %r126;
	mul.wide.s32 	%rd103, %r1040, 4;
	add.s64 	%rd104, %rd7, %rd103;
	ld.global.f32 	%f79, [%rd104];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f79;
  mov.b32 %r2169, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_60;

$L__BB0_58:
	mov.f32 	%f78, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f78;
  cvt.rn.f16.f32 high, %f78;
  mov.b32 %r2169, {low,high};}

	// end inline asm

$L__BB0_60:
	add.s32 	%r1041, %r2164, %r105;
	mul.wide.s32 	%rd105, %r1041, 4;
	add.s64 	%rd106, %rd8, %rd105;
	st.global.u32 	[%rd106], %r2169;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_61:
	add.f32 	%f5, %f2, 0f3F800000;
	setp.geu.f32 	%p45, %f5, 0f40000000;
	@%p45 bra 	$L__BB0_66;

	@%p2 bra 	$L__BB0_64;
	bra.uni 	$L__BB0_63;

$L__BB0_64:
	add.s32 	%r1044, %r112, %r126;
	mul.wide.s32 	%rd107, %r1044, 4;
	add.s64 	%rd108, %rd7, %rd107;
	ld.global.f32 	%f82, [%rd108];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f82;
  mov.b32 %r2171, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_65;

$L__BB0_63:
	mov.f32 	%f81, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f81;
  cvt.rn.f16.f32 high, %f81;
  mov.b32 %r2171, {low,high};}

	// end inline asm

$L__BB0_65:
	add.s32 	%r1045, %r2164, %r105;
	mul.wide.s32 	%rd109, %r1045, 4;
	add.s64 	%rd110, %rd8, %rd109;
	st.global.u32 	[%rd110], %r2171;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_66:
	add.f32 	%f6, %f2, 0f3FC00000;
	setp.geu.f32 	%p46, %f6, 0f40000000;
	@%p46 bra 	$L__BB0_71;

	@%p2 bra 	$L__BB0_69;
	bra.uni 	$L__BB0_68;

$L__BB0_69:
	add.s32 	%r1048, %r113, %r126;
	mul.wide.s32 	%rd111, %r1048, 4;
	add.s64 	%rd112, %rd7, %rd111;
	ld.global.f32 	%f85, [%rd112];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f85;
  mov.b32 %r2173, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_70;

$L__BB0_68:
	mov.f32 	%f84, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f84;
  cvt.rn.f16.f32 high, %f84;
  mov.b32 %r2173, {low,high};}

	// end inline asm

$L__BB0_70:
	add.s32 	%r1049, %r2164, %r105;
	mul.wide.s32 	%rd113, %r1049, 4;
	add.s64 	%rd114, %rd8, %rd113;
	st.global.u32 	[%rd114], %r2173;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_71:
	or.b32  	%r1050, %r2161, %r126;
	setp.gt.s32 	%p47, %r1050, -1;
	and.pred  	%p49, %p33, %p47;
	setp.lt.s32 	%p50, %r2161, %r878;
	and.pred  	%p3, %p50, %p49;
	add.f32 	%f7, %f1, 0f3F000000;
	setp.geu.f32 	%p51, %f7, 0f40000000;
	@%p51 bra 	$L__BB0_76;

	@%p3 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_73;

$L__BB0_74:
	add.s32 	%r1053, %r116, %r126;
	mul.wide.s32 	%rd115, %r1053, 4;
	add.s64 	%rd116, %rd7, %rd115;
	ld.global.f32 	%f88, [%rd116];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f88;
  mov.b32 %r2175, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_75;

$L__BB0_73:
	mov.f32 	%f87, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f87;
  cvt.rn.f16.f32 high, %f87;
  mov.b32 %r2175, {low,high};}

	// end inline asm

$L__BB0_75:
	add.s32 	%r1054, %r2164, %r105;
	mul.wide.s32 	%rd117, %r1054, 4;
	add.s64 	%rd118, %rd8, %rd117;
	st.global.u32 	[%rd118], %r2175;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_76:
	add.f32 	%f89, %f2, 0f00000000;
	setp.geu.f32 	%p52, %f89, 0f40000000;
	@%p52 bra 	$L__BB0_81;

	@%p3 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_78;

$L__BB0_79:
	add.s32 	%r1057, %r114, %r126;
	mul.wide.s32 	%rd119, %r1057, 4;
	add.s64 	%rd120, %rd7, %rd119;
	ld.global.f32 	%f92, [%rd120];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f92;
  mov.b32 %r2177, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_80;

$L__BB0_78:
	mov.f32 	%f91, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f91;
  cvt.rn.f16.f32 high, %f91;
  mov.b32 %r2177, {low,high};}

	// end inline asm

$L__BB0_80:
	add.s32 	%r1058, %r2164, %r105;
	mul.wide.s32 	%rd121, %r1058, 4;
	add.s64 	%rd122, %rd8, %rd121;
	st.global.u32 	[%rd122], %r2177;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_81:
	add.f32 	%f8, %f2, 0f3F000000;
	setp.geu.f32 	%p53, %f8, 0f40000000;
	@%p53 bra 	$L__BB0_86;

	@%p3 bra 	$L__BB0_84;
	bra.uni 	$L__BB0_83;

$L__BB0_84:
	add.s32 	%r1061, %r115, %r126;
	mul.wide.s32 	%rd123, %r1061, 4;
	add.s64 	%rd124, %rd7, %rd123;
	ld.global.f32 	%f95, [%rd124];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f95;
  mov.b32 %r2179, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_85;

$L__BB0_83:
	mov.f32 	%f94, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f94;
  cvt.rn.f16.f32 high, %f94;
  mov.b32 %r2179, {low,high};}

	// end inline asm

$L__BB0_85:
	add.s32 	%r1062, %r2164, %r105;
	mul.wide.s32 	%rd125, %r1062, 4;
	add.s64 	%rd126, %rd8, %rd125;
	st.global.u32 	[%rd126], %r2179;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_86:
	or.b32  	%r1063, %r118, %r126;
	setp.gt.s32 	%p54, %r1063, -1;
	and.pred  	%p56, %p33, %p54;
	setp.lt.s32 	%p57, %r118, %r878;
	and.pred  	%p4, %p57, %p56;
	@%p51 bra 	$L__BB0_91;

	@%p4 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_88;

$L__BB0_89:
	add.s32 	%r1066, %r117, %r126;
	mul.wide.s32 	%rd127, %r1066, 4;
	add.s64 	%rd128, %rd7, %rd127;
	ld.global.f32 	%f98, [%rd128];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f98;
  mov.b32 %r2181, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_90;

$L__BB0_88:
	mov.f32 	%f97, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f97;
  cvt.rn.f16.f32 high, %f97;
  mov.b32 %r2181, {low,high};}

	// end inline asm

$L__BB0_90:
	add.s32 	%r1067, %r2164, %r105;
	mul.wide.s32 	%rd129, %r1067, 4;
	add.s64 	%rd130, %rd8, %rd129;
	st.global.u32 	[%rd130], %r2181;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_91:
	@%p45 bra 	$L__BB0_96;

	@%p4 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_93;

$L__BB0_94:
	add.s32 	%r1070, %r119, %r126;
	mul.wide.s32 	%rd131, %r1070, 4;
	add.s64 	%rd132, %rd7, %rd131;
	ld.global.f32 	%f101, [%rd132];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f101;
  mov.b32 %r2183, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_95;

$L__BB0_93:
	mov.f32 	%f100, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f100;
  cvt.rn.f16.f32 high, %f100;
  mov.b32 %r2183, {low,high};}

	// end inline asm

$L__BB0_95:
	add.s32 	%r1071, %r2164, %r105;
	mul.wide.s32 	%rd133, %r1071, 4;
	add.s64 	%rd134, %rd8, %rd133;
	st.global.u32 	[%rd134], %r2183;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_96:
	@%p53 bra 	$L__BB0_101;

	@%p4 bra 	$L__BB0_99;
	bra.uni 	$L__BB0_98;

$L__BB0_99:
	add.s32 	%r1074, %r120, %r126;
	mul.wide.s32 	%rd135, %r1074, 4;
	add.s64 	%rd136, %rd7, %rd135;
	ld.global.f32 	%f104, [%rd136];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f104;
  mov.b32 %r2185, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_100;

$L__BB0_98:
	mov.f32 	%f103, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f103;
  cvt.rn.f16.f32 high, %f103;
  mov.b32 %r2185, {low,high};}

	// end inline asm

$L__BB0_100:
	add.s32 	%r1075, %r2164, %r105;
	mul.wide.s32 	%rd137, %r1075, 4;
	add.s64 	%rd138, %rd8, %rd137;
	st.global.u32 	[%rd138], %r2185;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_101:
	or.b32  	%r1076, %r122, %r126;
	setp.gt.s32 	%p61, %r1076, -1;
	and.pred  	%p63, %p33, %p61;
	setp.lt.s32 	%p64, %r122, %r878;
	and.pred  	%p5, %p64, %p63;
	@%p44 bra 	$L__BB0_106;

	@%p5 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_103;

$L__BB0_104:
	add.s32 	%r1079, %r121, %r126;
	mul.wide.s32 	%rd139, %r1079, 4;
	add.s64 	%rd140, %rd7, %rd139;
	ld.global.f32 	%f107, [%rd140];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f107;
  mov.b32 %r2187, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_105;

$L__BB0_103:
	mov.f32 	%f106, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f106;
  cvt.rn.f16.f32 high, %f106;
  mov.b32 %r2187, {low,high};}

	// end inline asm

$L__BB0_105:
	add.s32 	%r1080, %r2164, %r105;
	mul.wide.s32 	%rd141, %r1080, 4;
	add.s64 	%rd142, %rd8, %rd141;
	st.global.u32 	[%rd142], %r2187;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_106:
	@%p38 bra 	$L__BB0_111;

	@%p5 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_108;

$L__BB0_109:
	add.s32 	%r1083, %r123, %r126;
	mul.wide.s32 	%rd143, %r1083, 4;
	add.s64 	%rd144, %rd7, %rd143;
	ld.global.f32 	%f110, [%rd144];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f110;
  mov.b32 %r2189, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_110;

$L__BB0_108:
	mov.f32 	%f109, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f109;
  cvt.rn.f16.f32 high, %f109;
  mov.b32 %r2189, {low,high};}

	// end inline asm

$L__BB0_110:
	add.s32 	%r1084, %r2164, %r105;
	mul.wide.s32 	%rd145, %r1084, 4;
	add.s64 	%rd146, %rd8, %rd145;
	st.global.u32 	[%rd146], %r2189;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_111:
	@%p46 bra 	$L__BB0_116;

	@%p5 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_113;

$L__BB0_114:
	add.s32 	%r1087, %r124, %r126;
	mul.wide.s32 	%rd147, %r1087, 4;
	add.s64 	%rd148, %rd7, %rd147;
	ld.global.f32 	%f113, [%rd148];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f113;
  mov.b32 %r2191, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_115;

$L__BB0_113:
	mov.f32 	%f112, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f112;
  cvt.rn.f16.f32 high, %f112;
  mov.b32 %r2191, {low,high};}

	// end inline asm

$L__BB0_115:
	add.s32 	%r1088, %r2164, %r105;
	mul.wide.s32 	%rd149, %r1088, 4;
	add.s64 	%rd150, %rd8, %rd149;
	st.global.u32 	[%rd150], %r2191;
	add.s32 	%r2164, %r2164, 1;

$L__BB0_116:
	add.s64 	%rd546, %rd546, 4;
	mov.u64 	%rd151, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd152, %rd151, 24;
	setp.ne.s64 	%p68, %rd546, %rd152;
	@%p68 bra 	$L__BB0_41;

$L__BB0_117:
	add.s32 	%r2161, %r2161, %r29;
	setp.lt.s32 	%p69, %r2161, %r878;
	@%p69 bra 	$L__BB0_39;

$L__BB0_118:
	add.s32 	%r2160, %r2160, %r892;
	setp.lt.s32 	%p70, %r2160, %r877;
	@%p70 bra 	$L__BB0_37;

$L__BB0_119:
	setp.eq.s32 	%p71, %r881, 1;
	ld.param.u64 	%rd153, [%rd1+112];
	cvta.to.global.u64 	%rd11, %rd153;
	ld.param.u64 	%rd154, [%rd1+80];
	cvta.to.global.u64 	%rd12, %rd154;
	@%p71 bra 	$L__BB0_137;
	bra.uni 	$L__BB0_120;

$L__BB0_137:
	@%p19 bra 	$L__BB0_266;

	shl.b32 	%r229, %r55, 1;
	shr.u32 	%r1134, %r882, 31;
	add.s32 	%r1135, %r882, %r1134;
	shr.u32 	%r1136, %r1135, 1;
	and.b32  	%r230, %r1136, 1;
	mov.u64 	%rd174, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;

$L__BB0_139:
	setp.ge.s32 	%p81, %r229, %r878;
	@%p81 bra 	$L__BB0_265;

	mov.u32 	%r2199, %r229;

$L__BB0_141:
	setp.ne.s32 	%p82, %r27, 0;
	@%p82 bra 	$L__BB0_264;

	shr.u32 	%r1138, %r2199, 31;
	add.s32 	%r1139, %r2199, %r1138;
	shr.s32 	%r1140, %r1139, 1;
	mad.lo.s32 	%r1141, %r1140, %r877, %r2193;
	shl.b32 	%r234, %r1141, 5;
	add.s32 	%r235, %r2199, -2;
	mul.lo.s32 	%r236, %r235, %r877;
	add.s32 	%r1142, %r878, %r235;
	mul.lo.s32 	%r237, %r1142, %r877;
	add.s32 	%r238, %r236, %r877;
	add.s32 	%r239, %r2199, -1;
	add.s32 	%r1143, %r878, %r239;
	mul.lo.s32 	%r240, %r1143, %r877;
	add.s32 	%r1144, %r878, %r2199;
	mul.lo.s32 	%r241, %r1144, %r877;
	mul.lo.s32 	%r242, %r2199, %r877;
	add.s32 	%r243, %r242, %r877;
	add.s32 	%r244, %r2199, 1;
	add.s32 	%r1145, %r878, %r244;
	mul.lo.s32 	%r245, %r1145, %r877;
	add.s32 	%r246, %r243, %r877;
	add.s32 	%r247, %r2199, 2;
	add.s32 	%r1146, %r878, %r247;
	mul.lo.s32 	%r248, %r1146, %r877;
	mov.u32 	%r2203, 0;
	mov.u64 	%rd547, 24;
	mov.u64 	%rd548, %rd174;

$L__BB0_143:
	ld.global.nc.u32 	%r1147, [%rd548];
	cvt.rn.f64.s32 	%fd2, %r1147;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r250, %r1147, %r2193;
	setp.lt.s32 	%p83, %r250, %r877;
	or.b32  	%r1148, %r235, %r250;
	setp.gt.s32 	%p84, %r1148, -1;
	and.pred  	%p85, %p83, %p84;
	setp.lt.s32 	%p86, %r235, %r878;
	and.pred  	%p6, %p86, %p85;
	cvt.rn.f32.f64 	%f130, %fd4;
	add.f32 	%f131, %f130, 0f3E800000;
	abs.f32 	%f9, %f131;
	add.f32 	%f132, %f9, 0f40200000;
	setp.geu.f32 	%p87, %f132, 0f40000000;
	@%p87 bra 	$L__BB0_155;

	@%p6 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_145;

$L__BB0_146:
	setp.eq.s32 	%p88, %r230, 0;
	add.s32 	%r1150, %r236, %r250;
	shl.b32 	%r1151, %r1150, 1;
	mul.wide.s32 	%rd175, %r1151, 4;
	add.s64 	%rd176, %rd11, %rd175;
	ld.global.f32 	%f10, [%rd176];
	@%p88 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_147;

$L__BB0_148:
	mov.f32 	%f138, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f10;
  cvt.rn.f16.f32 high, %f138;
  mov.b32 %r2201, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_145:
	mov.f32 	%f134, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f134;
  cvt.rn.f16.f32 high, %f134;
  mov.b32 %r2201, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_147:
	mov.f32 	%f135, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f135;
  cvt.rn.f16.f32 high, %f10;
  mov.b32 %r2201, {low,high};}

	// end inline asm

$L__BB0_149:
	add.s32 	%r255, %r2203, %r234;
	mul.wide.s32 	%rd177, %r255, 4;
	add.s64 	%rd178, %rd12, %rd177;
	st.global.u32 	[%rd178], %r2201;
	@%p6 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_150;

$L__BB0_151:
	setp.eq.s32 	%p89, %r230, 0;
	add.s32 	%r1155, %r237, %r250;
	shl.b32 	%r1156, %r1155, 1;
	mul.wide.s32 	%rd179, %r1156, 4;
	add.s64 	%rd180, %rd11, %rd179;
	ld.global.f32 	%f11, [%rd180];
	@%p89 bra 	$L__BB0_153;
	bra.uni 	$L__BB0_152;

$L__BB0_153:
	mov.f32 	%f144, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f11;
  cvt.rn.f16.f32 high, %f144;
  mov.b32 %r2202, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_154;

$L__BB0_150:
	mov.f32 	%f140, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f140;
  cvt.rn.f16.f32 high, %f140;
  mov.b32 %r2202, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_154;

$L__BB0_152:
	mov.f32 	%f141, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f141;
  cvt.rn.f16.f32 high, %f11;
  mov.b32 %r2202, {low,high};}

	// end inline asm

$L__BB0_154:
	add.s32 	%r1159, %r255, 1;
	mul.wide.s32 	%rd181, %r1159, 4;
	add.s64 	%rd182, %rd12, %rd181;
	st.global.u32 	[%rd182], %r2202;
	add.s32 	%r2203, %r2203, 2;

$L__BB0_155:
	cvt.rn.f32.f64 	%f145, %fd2;
	add.f32 	%f146, %f145, 0f3E800000;
	abs.f32 	%f12, %f146;
	add.f32 	%f13, %f12, 0f40000000;
	setp.geu.f32 	%p90, %f13, 0f40000000;
	@%p90 bra 	$L__BB0_167;

	@%p6 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_157;

$L__BB0_158:
	setp.eq.s32 	%p91, %r230, 0;
	add.s32 	%r1161, %r236, %r250;
	shl.b32 	%r1162, %r1161, 1;
	or.b32  	%r1163, %r1162, 1;
	mul.wide.s32 	%rd183, %r1163, 4;
	add.s64 	%rd184, %rd11, %rd183;
	ld.global.f32 	%f14, [%rd184];
	@%p91 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_159;

$L__BB0_160:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f14;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r2204, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_161;

$L__BB0_157:
	mov.f32 	%f148, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f148;
  cvt.rn.f16.f32 high, %f148;
  mov.b32 %r2204, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_161;

$L__BB0_159:
	mov.f32 	%f149, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f149;
  cvt.rn.f16.f32 high, %f14;
  mov.b32 %r2204, {low,high};}

	// end inline asm

$L__BB0_161:
	add.s32 	%r266, %r2203, %r234;
	mul.wide.s32 	%rd185, %r266, 4;
	add.s64 	%rd186, %rd12, %rd185;
	st.global.u32 	[%rd186], %r2204;
	@%p6 bra 	$L__BB0_163;
	bra.uni 	$L__BB0_162;

$L__BB0_163:
	setp.eq.s32 	%p92, %r230, 0;
	add.s32 	%r1167, %r237, %r250;
	shl.b32 	%r1168, %r1167, 1;
	or.b32  	%r1169, %r1168, 1;
	mul.wide.s32 	%rd187, %r1169, 4;
	add.s64 	%rd188, %rd11, %rd187;
	ld.global.f32 	%f15, [%rd188];
	@%p92 bra 	$L__BB0_165;
	bra.uni 	$L__BB0_164;

$L__BB0_165:
	mov.f32 	%f158, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f15;
  cvt.rn.f16.f32 high, %f158;
  mov.b32 %r2205, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_166;

$L__BB0_162:
	mov.f32 	%f154, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f154;
  cvt.rn.f16.f32 high, %f154;
  mov.b32 %r2205, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_166;

$L__BB0_164:
	mov.f32 	%f155, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f155;
  cvt.rn.f16.f32 high, %f15;
  mov.b32 %r2205, {low,high};}

	// end inline asm

$L__BB0_166:
	add.s32 	%r1172, %r266, 1;
	mul.wide.s32 	%rd189, %r1172, 4;
	add.s64 	%rd190, %rd12, %rd189;
	st.global.u32 	[%rd190], %r2205;
	add.s32 	%r2203, %r2203, 2;

$L__BB0_167:
	or.b32  	%r1173, %r239, %r250;
	setp.gt.s32 	%p93, %r1173, -1;
	and.pred  	%p95, %p83, %p93;
	setp.le.s32 	%p96, %r2199, %r878;
	and.pred  	%p7, %p96, %p95;
	add.f32 	%f16, %f9, 0f3FC00000;
	setp.geu.f32 	%p97, %f16, 0f40000000;
	@%p97 bra 	$L__BB0_179;

	@%p7 bra 	$L__BB0_170;
	bra.uni 	$L__BB0_169;

$L__BB0_170:
	setp.eq.s32 	%p98, %r230, 0;
	add.s32 	%r1175, %r238, %r250;
	shl.b32 	%r1176, %r1175, 1;
	mul.wide.s32 	%rd191, %r1176, 4;
	add.s64 	%rd192, %rd11, %rd191;
	ld.global.f32 	%f17, [%rd192];
	@%p98 bra 	$L__BB0_172;
	bra.uni 	$L__BB0_171;

$L__BB0_172:
	mov.f32 	%f164, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f17;
  cvt.rn.f16.f32 high, %f164;
  mov.b32 %r2207, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_173;

$L__BB0_169:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f160;
  mov.b32 %r2207, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_173;

$L__BB0_171:
	mov.f32 	%f161, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f161;
  cvt.rn.f16.f32 high, %f17;
  mov.b32 %r2207, {low,high};}

	// end inline asm

$L__BB0_173:
	add.s32 	%r277, %r2203, %r234;
	mul.wide.s32 	%rd193, %r277, 4;
	add.s64 	%rd194, %rd12, %rd193;
	st.global.u32 	[%rd194], %r2207;
	@%p7 bra 	$L__BB0_175;
	bra.uni 	$L__BB0_174;

$L__BB0_175:
	setp.eq.s32 	%p99, %r230, 0;
	add.s32 	%r1180, %r240, %r250;
	shl.b32 	%r1181, %r1180, 1;
	mul.wide.s32 	%rd195, %r1181, 4;
	add.s64 	%rd196, %rd11, %rd195;
	ld.global.f32 	%f18, [%rd196];
	@%p99 bra 	$L__BB0_177;
	bra.uni 	$L__BB0_176;

$L__BB0_177:
	mov.f32 	%f170, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f18;
  cvt.rn.f16.f32 high, %f170;
  mov.b32 %r2208, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_178;

$L__BB0_174:
	mov.f32 	%f166, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f166;
  cvt.rn.f16.f32 high, %f166;
  mov.b32 %r2208, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_178;

$L__BB0_176:
	mov.f32 	%f167, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f167;
  cvt.rn.f16.f32 high, %f18;
  mov.b32 %r2208, {low,high};}

	// end inline asm

$L__BB0_178:
	add.s32 	%r1184, %r277, 1;
	mul.wide.s32 	%rd197, %r1184, 4;
	add.s64 	%rd198, %rd12, %rd197;
	st.global.u32 	[%rd198], %r2208;
	add.s32 	%r2203, %r2203, 2;

$L__BB0_179:
	add.f32 	%f19, %f12, 0f3F800000;
	setp.geu.f32 	%p100, %f19, 0f40000000;
	@%p100 bra 	$L__BB0_191;

	@%p7 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_181;

$L__BB0_182:
	setp.eq.s32 	%p101, %r230, 0;
	add.s32 	%r1186, %r238, %r250;
	shl.b32 	%r1187, %r1186, 1;
	or.b32  	%r1188, %r1187, 1;
	mul.wide.s32 	%rd199, %r1188, 4;
	add.s64 	%rd200, %rd11, %rd199;
	ld.global.f32 	%f20, [%rd200];
	@%p101 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;

$L__BB0_184:
	mov.f32 	%f176, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f20;
  cvt.rn.f16.f32 high, %f176;
  mov.b32 %r2210, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_185;

$L__BB0_181:
	mov.f32 	%f172, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f172;
  cvt.rn.f16.f32 high, %f172;
  mov.b32 %r2210, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_185;

$L__BB0_183:
	mov.f32 	%f173, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f173;
  cvt.rn.f16.f32 high, %f20;
  mov.b32 %r2210, {low,high};}

	// end inline asm

$L__BB0_185:
	add.s32 	%r288, %r2203, %r234;
	mul.wide.s32 	%rd201, %r288, 4;
	add.s64 	%rd202, %rd12, %rd201;
	st.global.u32 	[%rd202], %r2210;
	@%p7 bra 	$L__BB0_187;
	bra.uni 	$L__BB0_186;

$L__BB0_187:
	setp.eq.s32 	%p102, %r230, 0;
	add.s32 	%r1192, %r240, %r250;
	shl.b32 	%r1193, %r1192, 1;
	or.b32  	%r1194, %r1193, 1;
	mul.wide.s32 	%rd203, %r1194, 4;
	add.s64 	%rd204, %rd11, %rd203;
	ld.global.f32 	%f21, [%rd204];
	@%p102 bra 	$L__BB0_189;
	bra.uni 	$L__BB0_188;

$L__BB0_189:
	mov.f32 	%f182, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f21;
  cvt.rn.f16.f32 high, %f182;
  mov.b32 %r2211, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_190;

$L__BB0_186:
	mov.f32 	%f178, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f178;
  cvt.rn.f16.f32 high, %f178;
  mov.b32 %r2211, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_190;

$L__BB0_188:
	mov.f32 	%f179, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f179;
  cvt.rn.f16.f32 high, %f21;
  mov.b32 %r2211, {low,high};}

	// end inline asm

$L__BB0_190:
	add.s32 	%r1197, %r288, 1;
	mul.wide.s32 	%rd205, %r1197, 4;
	add.s64 	%rd206, %rd12, %rd205;
	st.global.u32 	[%rd206], %r2211;
	add.s32 	%r2203, %r2203, 2;

$L__BB0_191:
	or.b32  	%r1198, %r2199, %r250;
	setp.gt.s32 	%p103, %r1198, -1;
	and.pred  	%p105, %p83, %p103;
	setp.lt.s32 	%p106, %r2199, %r878;
	and.pred  	%p8, %p106, %p105;
	add.f32 	%f22, %f9, 0f3F000000;
	setp.geu.f32 	%p107, %f22, 0f40000000;
	@%p107 bra 	$L__BB0_203;

	@%p8 bra 	$L__BB0_194;
	bra.uni 	$L__BB0_193;

$L__BB0_194:
	setp.eq.s32 	%p108, %r230, 0;
	add.s32 	%r1200, %r242, %r250;
	shl.b32 	%r1201, %r1200, 1;
	mul.wide.s32 	%rd207, %r1201, 4;
	add.s64 	%rd208, %rd11, %rd207;
	ld.global.f32 	%f23, [%rd208];
	@%p108 bra 	$L__BB0_196;
	bra.uni 	$L__BB0_195;

$L__BB0_196:
	mov.f32 	%f188, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f23;
  cvt.rn.f16.f32 high, %f188;
  mov.b32 %r2213, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_197;

$L__BB0_193:
	mov.f32 	%f184, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f184;
  cvt.rn.f16.f32 high, %f184;
  mov.b32 %r2213, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_197;

$L__BB0_195:
	mov.f32 	%f185, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f185;
  cvt.rn.f16.f32 high, %f23;
  mov.b32 %r2213, {low,high};}

	// end inline asm

$L__BB0_197:
	add.s32 	%r299, %r2203, %r234;
	mul.wide.s32 	%rd209, %r299, 4;
	add.s64 	%rd210, %rd12, %rd209;
	st.global.u32 	[%rd210], %r2213;
	@%p8 bra 	$L__BB0_199;
	bra.uni 	$L__BB0_198;

$L__BB0_199:
	setp.eq.s32 	%p109, %r230, 0;
	add.s32 	%r1205, %r241, %r250;
	shl.b32 	%r1206, %r1205, 1;
	mul.wide.s32 	%rd211, %r1206, 4;
	add.s64 	%rd212, %rd11, %rd211;
	ld.global.f32 	%f24, [%rd212];
	@%p109 bra 	$L__BB0_201;
	bra.uni 	$L__BB0_200;

$L__BB0_201:
	mov.f32 	%f194, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f24;
  cvt.rn.f16.f32 high, %f194;
  mov.b32 %r2214, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_202;

$L__BB0_198:
	mov.f32 	%f190, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f190;
  cvt.rn.f16.f32 high, %f190;
  mov.b32 %r2214, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_202;

$L__BB0_200:
	mov.f32 	%f191, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f191;
  cvt.rn.f16.f32 high, %f24;
  mov.b32 %r2214, {low,high};}

	// end inline asm

$L__BB0_202:
	add.s32 	%r1209, %r299, 1;
	mul.wide.s32 	%rd213, %r1209, 4;
	add.s64 	%rd214, %rd12, %rd213;
	st.global.u32 	[%rd214], %r2214;
	add.s32 	%r2203, %r2203, 2;

$L__BB0_203:
	add.f32 	%f195, %f12, 0f00000000;
	setp.geu.f32 	%p110, %f195, 0f40000000;
	@%p110 bra 	$L__BB0_215;

	@%p8 bra 	$L__BB0_206;
	bra.uni 	$L__BB0_205;

$L__BB0_206:
	setp.eq.s32 	%p111, %r230, 0;
	add.s32 	%r1211, %r242, %r250;
	shl.b32 	%r1212, %r1211, 1;
	or.b32  	%r1213, %r1212, 1;
	mul.wide.s32 	%rd215, %r1213, 4;
	add.s64 	%rd216, %rd11, %rd215;
	ld.global.f32 	%f25, [%rd216];
	@%p111 bra 	$L__BB0_208;
	bra.uni 	$L__BB0_207;

$L__BB0_208:
	mov.f32 	%f201, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f25;
  cvt.rn.f16.f32 high, %f201;
  mov.b32 %r2216, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_209;

$L__BB0_205:
	mov.f32 	%f197, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f197;
  cvt.rn.f16.f32 high, %f197;
  mov.b32 %r2216, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_209;

$L__BB0_207:
	mov.f32 	%f198, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f198;
  cvt.rn.f16.f32 high, %f25;
  mov.b32 %r2216, {low,high};}

	// end inline asm

$L__BB0_209:
	add.s32 	%r310, %r2203, %r234;
	mul.wide.s32 	%rd217, %r310, 4;
	add.s64 	%rd218, %rd12, %rd217;
	st.global.u32 	[%rd218], %r2216;
	@%p8 bra 	$L__BB0_211;
	bra.uni 	$L__BB0_210;

$L__BB0_211:
	setp.eq.s32 	%p112, %r230, 0;
	add.s32 	%r1217, %r241, %r250;
	shl.b32 	%r1218, %r1217, 1;
	or.b32  	%r1219, %r1218, 1;
	mul.wide.s32 	%rd219, %r1219, 4;
	add.s64 	%rd220, %rd11, %rd219;
	ld.global.f32 	%f26, [%rd220];
	@%p112 bra 	$L__BB0_213;
	bra.uni 	$L__BB0_212;

$L__BB0_213:
	mov.f32 	%f207, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f26;
  cvt.rn.f16.f32 high, %f207;
  mov.b32 %r2217, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_214;

$L__BB0_210:
	mov.f32 	%f203, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f203;
  cvt.rn.f16.f32 high, %f203;
  mov.b32 %r2217, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_214;

$L__BB0_212:
	mov.f32 	%f204, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f204;
  cvt.rn.f16.f32 high, %f26;
  mov.b32 %r2217, {low,high};}

	// end inline asm

$L__BB0_214:
	add.s32 	%r1222, %r310, 1;
	mul.wide.s32 	%rd221, %r1222, 4;
	add.s64 	%rd222, %rd12, %rd221;
	st.global.u32 	[%rd222], %r2217;
	add.s32 	%r2203, %r2203, 2;

$L__BB0_215:
	or.b32  	%r1223, %r244, %r250;
	setp.gt.s32 	%p113, %r1223, -1;
	and.pred  	%p115, %p83, %p113;
	setp.lt.s32 	%p116, %r244, %r878;
	and.pred  	%p9, %p116, %p115;
	@%p107 bra 	$L__BB0_227;

	@%p9 bra 	$L__BB0_218;
	bra.uni 	$L__BB0_217;

$L__BB0_218:
	setp.eq.s32 	%p118, %r230, 0;
	add.s32 	%r1225, %r243, %r250;
	shl.b32 	%r1226, %r1225, 1;
	mul.wide.s32 	%rd223, %r1226, 4;
	add.s64 	%rd224, %rd11, %rd223;
	ld.global.f32 	%f27, [%rd224];
	@%p118 bra 	$L__BB0_220;
	bra.uni 	$L__BB0_219;

$L__BB0_220:
	mov.f32 	%f213, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f27;
  cvt.rn.f16.f32 high, %f213;
  mov.b32 %r2219, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_221;

$L__BB0_217:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r2219, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_221;

$L__BB0_219:
	mov.f32 	%f210, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f210;
  cvt.rn.f16.f32 high, %f27;
  mov.b32 %r2219, {low,high};}

	// end inline asm

$L__BB0_221:
	add.s32 	%r321, %r2203, %r234;
	mul.wide.s32 	%rd225, %r321, 4;
	add.s64 	%rd226, %rd12, %rd225;
	st.global.u32 	[%rd226], %r2219;
	@%p9 bra 	$L__BB0_223;
	bra.uni 	$L__BB0_222;

$L__BB0_223:
	setp.eq.s32 	%p119, %r230, 0;
	add.s32 	%r1230, %r245, %r250;
	shl.b32 	%r1231, %r1230, 1;
	mul.wide.s32 	%rd227, %r1231, 4;
	add.s64 	%rd228, %rd11, %rd227;
	ld.global.f32 	%f28, [%rd228];
	@%p119 bra 	$L__BB0_225;
	bra.uni 	$L__BB0_224;

$L__BB0_225:
	mov.f32 	%f219, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f28;
  cvt.rn.f16.f32 high, %f219;
  mov.b32 %r2220, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_226;

$L__BB0_222:
	mov.f32 	%f215, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f215;
  cvt.rn.f16.f32 high, %f215;
  mov.b32 %r2220, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_226;

$L__BB0_224:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f28;
  mov.b32 %r2220, {low,high};}

	// end inline asm

$L__BB0_226:
	add.s32 	%r1234, %r321, 1;
	mul.wide.s32 	%rd229, %r1234, 4;
	add.s64 	%rd230, %rd12, %rd229;
	st.global.u32 	[%rd230], %r2220;
	add.s32 	%r2203, %r2203, 2;

$L__BB0_227:
	@%p100 bra 	$L__BB0_239;

	@%p9 bra 	$L__BB0_230;
	bra.uni 	$L__BB0_229;

$L__BB0_230:
	setp.eq.s32 	%p121, %r230, 0;
	add.s32 	%r1236, %r243, %r250;
	shl.b32 	%r1237, %r1236, 1;
	or.b32  	%r1238, %r1237, 1;
	mul.wide.s32 	%rd231, %r1238, 4;
	add.s64 	%rd232, %rd11, %rd231;
	ld.global.f32 	%f29, [%rd232];
	@%p121 bra 	$L__BB0_232;
	bra.uni 	$L__BB0_231;

$L__BB0_232:
	mov.f32 	%f225, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f29;
  cvt.rn.f16.f32 high, %f225;
  mov.b32 %r2222, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_233;

$L__BB0_229:
	mov.f32 	%f221, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f221;
  cvt.rn.f16.f32 high, %f221;
  mov.b32 %r2222, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_233;

$L__BB0_231:
	mov.f32 	%f222, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f222;
  cvt.rn.f16.f32 high, %f29;
  mov.b32 %r2222, {low,high};}

	// end inline asm

$L__BB0_233:
	add.s32 	%r332, %r2203, %r234;
	mul.wide.s32 	%rd233, %r332, 4;
	add.s64 	%rd234, %rd12, %rd233;
	st.global.u32 	[%rd234], %r2222;
	@%p9 bra 	$L__BB0_235;
	bra.uni 	$L__BB0_234;

$L__BB0_235:
	setp.eq.s32 	%p122, %r230, 0;
	add.s32 	%r1242, %r245, %r250;
	shl.b32 	%r1243, %r1242, 1;
	or.b32  	%r1244, %r1243, 1;
	mul.wide.s32 	%rd235, %r1244, 4;
	add.s64 	%rd236, %rd11, %rd235;
	ld.global.f32 	%f30, [%rd236];
	@%p122 bra 	$L__BB0_237;
	bra.uni 	$L__BB0_236;

$L__BB0_237:
	mov.f32 	%f231, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f30;
  cvt.rn.f16.f32 high, %f231;
  mov.b32 %r2223, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_238;

$L__BB0_234:
	mov.f32 	%f227, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f227;
  cvt.rn.f16.f32 high, %f227;
  mov.b32 %r2223, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_238;

$L__BB0_236:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f30;
  mov.b32 %r2223, {low,high};}

	// end inline asm

$L__BB0_238:
	add.s32 	%r1247, %r332, 1;
	mul.wide.s32 	%rd237, %r1247, 4;
	add.s64 	%rd238, %rd12, %rd237;
	st.global.u32 	[%rd238], %r2223;
	add.s32 	%r2203, %r2203, 2;

$L__BB0_239:
	or.b32  	%r1248, %r247, %r250;
	setp.gt.s32 	%p123, %r1248, -1;
	and.pred  	%p125, %p83, %p123;
	setp.lt.s32 	%p126, %r247, %r878;
	and.pred  	%p10, %p126, %p125;
	@%p97 bra 	$L__BB0_251;

	@%p10 bra 	$L__BB0_242;
	bra.uni 	$L__BB0_241;

$L__BB0_242:
	setp.eq.s32 	%p128, %r230, 0;
	add.s32 	%r1250, %r246, %r250;
	shl.b32 	%r1251, %r1250, 1;
	mul.wide.s32 	%rd239, %r1251, 4;
	add.s64 	%rd240, %rd11, %rd239;
	ld.global.f32 	%f31, [%rd240];
	@%p128 bra 	$L__BB0_244;
	bra.uni 	$L__BB0_243;

$L__BB0_244:
	mov.f32 	%f237, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f31;
  cvt.rn.f16.f32 high, %f237;
  mov.b32 %r2225, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_245;

$L__BB0_241:
	mov.f32 	%f233, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f233;
  cvt.rn.f16.f32 high, %f233;
  mov.b32 %r2225, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_245;

$L__BB0_243:
	mov.f32 	%f234, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f234;
  cvt.rn.f16.f32 high, %f31;
  mov.b32 %r2225, {low,high};}

	// end inline asm

$L__BB0_245:
	add.s32 	%r343, %r2203, %r234;
	mul.wide.s32 	%rd241, %r343, 4;
	add.s64 	%rd242, %rd12, %rd241;
	st.global.u32 	[%rd242], %r2225;
	@%p10 bra 	$L__BB0_247;
	bra.uni 	$L__BB0_246;

$L__BB0_247:
	setp.eq.s32 	%p129, %r230, 0;
	add.s32 	%r1255, %r248, %r250;
	shl.b32 	%r1256, %r1255, 1;
	mul.wide.s32 	%rd243, %r1256, 4;
	add.s64 	%rd244, %rd11, %rd243;
	ld.global.f32 	%f32, [%rd244];
	@%p129 bra 	$L__BB0_249;
	bra.uni 	$L__BB0_248;

$L__BB0_249:
	mov.f32 	%f243, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f32;
  cvt.rn.f16.f32 high, %f243;
  mov.b32 %r2226, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_250;

$L__BB0_246:
	mov.f32 	%f239, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f239;
  cvt.rn.f16.f32 high, %f239;
  mov.b32 %r2226, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_250;

$L__BB0_248:
	mov.f32 	%f240, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f240;
  cvt.rn.f16.f32 high, %f32;
  mov.b32 %r2226, {low,high};}

	// end inline asm

$L__BB0_250:
	add.s32 	%r1259, %r343, 1;
	mul.wide.s32 	%rd245, %r1259, 4;
	add.s64 	%rd246, %rd12, %rd245;
	st.global.u32 	[%rd246], %r2226;
	add.s32 	%r2203, %r2203, 2;

$L__BB0_251:
	@%p90 bra 	$L__BB0_263;

	@%p10 bra 	$L__BB0_254;
	bra.uni 	$L__BB0_253;

$L__BB0_254:
	setp.eq.s32 	%p131, %r230, 0;
	add.s32 	%r1261, %r246, %r250;
	shl.b32 	%r1262, %r1261, 1;
	or.b32  	%r1263, %r1262, 1;
	mul.wide.s32 	%rd247, %r1263, 4;
	add.s64 	%rd248, %rd11, %rd247;
	ld.global.f32 	%f33, [%rd248];
	@%p131 bra 	$L__BB0_256;
	bra.uni 	$L__BB0_255;

$L__BB0_256:
	mov.f32 	%f249, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f33;
  cvt.rn.f16.f32 high, %f249;
  mov.b32 %r2228, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_257;

$L__BB0_253:
	mov.f32 	%f245, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f245;
  cvt.rn.f16.f32 high, %f245;
  mov.b32 %r2228, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_257;

$L__BB0_255:
	mov.f32 	%f246, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f246;
  cvt.rn.f16.f32 high, %f33;
  mov.b32 %r2228, {low,high};}

	// end inline asm

$L__BB0_257:
	add.s32 	%r354, %r2203, %r234;
	mul.wide.s32 	%rd249, %r354, 4;
	add.s64 	%rd250, %rd12, %rd249;
	st.global.u32 	[%rd250], %r2228;
	@%p10 bra 	$L__BB0_259;
	bra.uni 	$L__BB0_258;

$L__BB0_259:
	setp.eq.s32 	%p132, %r230, 0;
	add.s32 	%r1267, %r248, %r250;
	shl.b32 	%r1268, %r1267, 1;
	or.b32  	%r1269, %r1268, 1;
	mul.wide.s32 	%rd251, %r1269, 4;
	add.s64 	%rd252, %rd11, %rd251;
	ld.global.f32 	%f34, [%rd252];
	@%p132 bra 	$L__BB0_261;
	bra.uni 	$L__BB0_260;

$L__BB0_261:
	mov.f32 	%f255, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f34;
  cvt.rn.f16.f32 high, %f255;
  mov.b32 %r2229, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_262;

$L__BB0_258:
	mov.f32 	%f251, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f251;
  cvt.rn.f16.f32 high, %f251;
  mov.b32 %r2229, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_262;

$L__BB0_260:
	mov.f32 	%f252, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f252;
  cvt.rn.f16.f32 high, %f34;
  mov.b32 %r2229, {low,high};}

	// end inline asm

$L__BB0_262:
	add.s32 	%r1272, %r354, 1;
	mul.wide.s32 	%rd253, %r1272, 4;
	add.s64 	%rd254, %rd12, %rd253;
	st.global.u32 	[%rd254], %r2229;
	add.s32 	%r2203, %r2203, 2;

$L__BB0_263:
	add.s64 	%rd548, %rd548, 4;
	add.s64 	%rd547, %rd547, -4;
	setp.ne.s64 	%p133, %rd547, 0;
	@%p133 bra 	$L__BB0_143;

$L__BB0_264:
	add.s32 	%r2199, %r2199, %r29;
	setp.lt.s32 	%p134, %r2199, %r878;
	@%p134 bra 	$L__BB0_141;

$L__BB0_265:
	add.s32 	%r2193, %r2193, %r892;
	setp.lt.s32 	%p135, %r2193, %r877;
	@%p135 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_266;

$L__BB0_120:
	@%p19 bra 	$L__BB0_266;

	neg.s32 	%r204, %r54;
	mov.u32 	%r1089, 31;
	sub.s32 	%r1090, %r1089, %r27;
	setp.gt.s32 	%p73, %r26, %r27;
	selp.b32 	%r1091, %r27, %r1090, %p73;
	shl.b32 	%r1092, %r1091, 2;
	mov.u32 	%r1093, 2;
	sub.s32 	%r205, %r1092, %r880;
	sub.s32 	%r1094, %r1093, %r880;
	add.s32 	%r206, %r1094, %r1092;
	add.s32 	%r207, %r877, -1;
	add.s32 	%r208, %r205, 1;
	add.s32 	%r209, %r206, 1;
	rem.s32 	%r1119, %r208, %r36;
	add.s32 	%r1120, %r1119, %r36;
	rem.s32 	%r220, %r1120, %r36;
	rem.s32 	%r1121, %r209, %r36;
	add.s32 	%r1122, %r1121, %r36;
	rem.s32 	%r221, %r1122, %r36;

$L__BB0_122:
	setp.ne.s32 	%p74, %r23, %r204;
	@%p74 bra 	$L__BB0_136;

	shl.b32 	%r211, %r2193, 1;
	rem.s32 	%r1095, %r205, %r36;
	add.s32 	%r1096, %r1095, %r36;
	rem.s32 	%r212, %r1096, %r36;
	rem.s32 	%r1097, %r206, %r36;
	add.s32 	%r1098, %r1097, %r36;
	rem.s32 	%r213, %r1098, %r36;
	@%p73 bra 	$L__BB0_125;
	bra.uni 	$L__BB0_124;

$L__BB0_125:
	mul.lo.s32 	%r1101, %r211, %r36;
	add.s32 	%r1102, %r1101, %r212;
	mul.wide.s32 	%rd155, %r1102, 4;
	add.s64 	%rd156, %rd11, %rd155;
	ld.global.f32 	%f116, [%rd156];
	add.s32 	%r1103, %r1101, %r213;
	mul.wide.s32 	%rd157, %r1103, 4;
	add.s64 	%rd158, %rd11, %rd157;
	ld.global.f32 	%f117, [%rd158];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f116;
  cvt.rn.f16.f32 high, %f117;
  mov.b32 %r2194, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_126;

$L__BB0_124:
	mov.f32 	%f115, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f115;
  cvt.rn.f16.f32 high, %f115;
  mov.b32 %r2194, {low,high};}

	// end inline asm

$L__BB0_126:
	shl.b32 	%r1104, %r2193, 5;
	add.s32 	%r1105, %r1104, %r27;
	shl.b32 	%r1106, %r1105, 2;
	mul.wide.s32 	%rd159, %r1106, 4;
	add.s64 	%rd13, %rd12, %rd159;
	st.global.u32 	[%rd13], %r2194;
	@%p73 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_127;

$L__BB0_128:
	add.s32 	%r1109, %r211, 1;
	mul.lo.s32 	%r1110, %r1109, %r36;
	add.s32 	%r1111, %r1110, %r212;
	mul.wide.s32 	%rd160, %r1111, 4;
	add.s64 	%rd161, %rd11, %rd160;
	ld.global.f32 	%f120, [%rd161];
	add.s32 	%r1112, %r1110, %r213;
	mul.wide.s32 	%rd162, %r1112, 4;
	add.s64 	%rd163, %rd11, %rd162;
	ld.global.f32 	%f121, [%rd163];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f120;
  cvt.rn.f16.f32 high, %f121;
  mov.b32 %r2195, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_129;

$L__BB0_127:
	mov.f32 	%f119, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f119;
  cvt.rn.f16.f32 high, %f119;
  mov.b32 %r2195, {low,high};}

	// end inline asm

$L__BB0_129:
	add.s32 	%r1113, %r207, %r2193;
	rem.s32 	%r1114, %r1113, %r877;
	shl.b32 	%r1115, %r1114, 5;
	add.s32 	%r1116, %r1115, %r27;
	shl.b32 	%r1117, %r1116, 2;
	or.b32  	%r1118, %r1117, 2;
	mul.wide.s32 	%rd164, %r1118, 4;
	add.s64 	%rd14, %rd12, %rd164;
	st.global.u32 	[%rd14], %r2195;
	@%p73 bra 	$L__BB0_131;
	bra.uni 	$L__BB0_130;

$L__BB0_131:
	mul.lo.s32 	%r1125, %r211, %r36;
	add.s32 	%r1126, %r1125, %r220;
	mul.wide.s32 	%rd165, %r1126, 4;
	add.s64 	%rd166, %rd11, %rd165;
	ld.global.f32 	%f124, [%rd166];
	add.s32 	%r1127, %r1125, %r221;
	mul.wide.s32 	%rd167, %r1127, 4;
	add.s64 	%rd168, %rd11, %rd167;
	ld.global.f32 	%f125, [%rd168];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f124;
  cvt.rn.f16.f32 high, %f125;
  mov.b32 %r2196, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_132;

$L__BB0_130:
	mov.f32 	%f123, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f123;
  cvt.rn.f16.f32 high, %f123;
  mov.b32 %r2196, {low,high};}

	// end inline asm

$L__BB0_132:
	st.global.u32 	[%rd13+4], %r2196;
	@%p73 bra 	$L__BB0_134;
	bra.uni 	$L__BB0_133;

$L__BB0_134:
	add.s32 	%r1130, %r211, 1;
	mul.lo.s32 	%r1131, %r1130, %r36;
	add.s32 	%r1132, %r1131, %r220;
	mul.wide.s32 	%rd169, %r1132, 4;
	add.s64 	%rd170, %rd11, %rd169;
	ld.global.f32 	%f128, [%rd170];
	add.s32 	%r1133, %r1131, %r221;
	mul.wide.s32 	%rd171, %r1133, 4;
	add.s64 	%rd172, %rd11, %rd171;
	ld.global.f32 	%f129, [%rd172];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f128;
  cvt.rn.f16.f32 high, %f129;
  mov.b32 %r2197, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_135;

$L__BB0_133:
	mov.f32 	%f127, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f127;
  cvt.rn.f16.f32 high, %f127;
  mov.b32 %r2197, {low,high};}

	// end inline asm

$L__BB0_135:
	st.global.u32 	[%rd14+4], %r2197;

$L__BB0_136:
	add.s32 	%r2193, %r2193, %r892;
	setp.lt.s32 	%p79, %r2193, %r877;
	@%p79 bra 	$L__BB0_122;

$L__BB0_266:
	add.s32 	%r1274, %r872, -1;
	mad.lo.s32 	%r1275, %r873, 576, 128;
	mul.lo.s32 	%r1276, %r1275, %r1274;
	add.s32 	%r1277, %r48, -64;
	add.s32 	%r1278, %r1277, %r48;
	add.s32 	%r1279, %r873, -1;
	mad.lo.s32 	%r1280, %r1278, %r1279, %r1276;
	mul.lo.s32 	%r1281, %r1274, %r873;
	mul.lo.s32 	%r1282, %r1281, 320;
	mad.lo.s32 	%r1283, %r1277, %r1279, %r1282;
	add.s32 	%r363, %r1283, %r1280;
	setp.lt.s32 	%p136, %r363, 1;
	mov.f32 	%f257, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r2232, {low,high};}

	// end inline asm
	@%p136 bra 	$L__BB0_269;

	mov.u32 	%r2233, 0;
	mov.u32 	%r2231, _ZN6kernel5shmemE;

$L__BB0_268:
	st.shared.u32 	[%r2231], %r2232;
	mov.f32 	%f265, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1286, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2231+4], %r1286;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1287, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2231+8], %r1287;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1288, {low,high};}

	// end inline asm
	st.shared.u32 	[%r2231+12], %r1288;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r2232, {low,high};}

	// end inline asm
	add.s32 	%r2231, %r2231, 16;
	add.s32 	%r2233, %r2233, 4;
	setp.lt.s32 	%p137, %r2233, %r363;
	@%p137 bra 	$L__BB0_268;

$L__BB0_269:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r1291, {low,high};}

	// end inline asm
	mov.u32 	%r1292, 31;
	sub.s32 	%r1293, %r1292, %r27;
	setp.gt.s32 	%p139, %r26, %r27;
	selp.b32 	%r1294, %r27, %r1293, %p139;
	shl.b32 	%r1295, %r1294, 2;
	sub.s32 	%r372, %r1295, %r880;
	rem.s32 	%r1296, %r372, %r36;
	add.s32 	%r1297, %r1296, %r36;
	rem.s32 	%r373, %r1297, %r36;
	add.s32 	%r1298, %r372, 2;
	rem.s32 	%r1299, %r1298, %r36;
	add.s32 	%r1300, %r1299, %r36;
	rem.s32 	%r374, %r1300, %r36;
	add.s32 	%r1311, %r372, 1;
	rem.s32 	%r1312, %r1311, %r36;
	add.s32 	%r1313, %r1312, %r36;
	rem.s32 	%r375, %r1313, %r36;
	add.s32 	%r1314, %r372, 3;
	rem.s32 	%r1315, %r1314, %r36;
	add.s32 	%r1316, %r1315, %r36;
	rem.s32 	%r376, %r1316, %r36;
	// begin inline asm
	mov.u32 %r1327, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd260, %r1327;
	// begin inline asm
	mov.u32 %r1328, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd261, %r1328;
	bfi.b64 	%rd24, %rd261, %rd260, 32, 32;
	setp.ne.s64 	%p147, %rd24, 0;
	@%p147 bra 	$L__BB0_287;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_287:
	add.s64 	%rd25, %rd24, 4;
	mov.u32 	%r1329, %nctaid.y;
	mov.u32 	%r1330, %nctaid.x;
	mul.lo.s32 	%r1331, %r1330, %r1329;
	mov.u32 	%r1332, %nctaid.z;
	mul.lo.s32 	%r377, %r1331, %r1332;
	neg.s32 	%r1333, %r23;
	add.s32 	%r1334, %r27, %r22;
	setp.ne.s32 	%p148, %r1334, %r1333;
	mov.u32 	%r1335, %ctaid.x;
	add.s32 	%r378, %r1335, %r24;
	neg.s32 	%r379, %r25;
	bar.sync 	0;
	@%p148 bra 	$L__BB0_291;

	setp.eq.s32 	%p149, %r378, %r379;
	mov.u32 	%r1338, -2147483647;
	sub.s32 	%r1339, %r1338, %r377;
	selp.b32 	%r1337, %r1339, 1, %p149;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1336,[%rd25],%r1337;
	// end inline asm

$L__BB0_289:
	ld.volatile.u32 	%r1340, [%rd25];
	xor.b32  	%r1341, %r1340, %r1336;
	setp.gt.s32 	%p150, %r1341, -1;
	@%p150 bra 	$L__BB0_289;

	// begin inline asm
	ld.acquire.gpu.u32 %r1342,[%rd25];
	// end inline asm

$L__BB0_291:
	bar.sync 	0;
	setp.lt.s32 	%p151, %r30, 1;
	@%p151 bra 	$L__BB0_424;

	mov.u32 	%r2362, 0;
	not.b32 	%r1345, %r24;
	add.s32 	%r1346, %r874, %r1345;
	mul.lo.s32 	%r1347, %r1346, %r876;
	mul.wide.s32 	%rd268, %r27, 16;
	mul.wide.s32 	%rd270, %r27, 8;
	mov.u32 	%r2234, %r1291;
	mov.u32 	%r2235, %r1291;
	mov.u32 	%r2487, %r1291;
	mov.u32 	%r2415, %r1291;
	mov.u32 	%r2238, %r1291;
	mov.u32 	%r2239, %r1291;
	mov.u32 	%r2522, %r1291;
	mov.u32 	%r2389, %r1291;
	mov.u32 	%r2390, %r1291;
	mov.u32 	%r2243, %r1291;
	mov.u32 	%r2417, %r1291;
	mov.u32 	%r2391, %r1291;
	mov.u32 	%r2392, %r1291;
	mov.u32 	%r2247, %r1291;
	mov.u32 	%r2490, %r1291;
	mov.u32 	%r2249, %r1291;
	mov.u32 	%r2250, %r1291;
	mov.u32 	%r2251, %r1291;
	mov.u32 	%r2252, %r1291;
	mov.u32 	%r2484, %r1291;
	mov.u32 	%r2479, %r1291;
	mov.u32 	%r2480, %r1291;
	mov.u32 	%r2256, %r1291;
	mov.u32 	%r2524, %r1291;
	mov.u32 	%r2258, %r1291;
	mov.u32 	%r2259, %r1291;
	mov.u32 	%r2260, %r1291;
	mov.u32 	%r2483, %r1291;
	mov.u32 	%r2481, %r1291;
	mov.u32 	%r2482, %r1291;
	mov.u32 	%r2264, %r1291;
	mov.u32 	%r2405, %r1291;
	mov.u32 	%r2266, %r1291;
	mov.u32 	%r2491, %r1291;
	mov.u32 	%r2395, %r1291;
	mov.u32 	%r2269, %r1291;
	mov.u32 	%r2401, %r1291;
	mov.u32 	%r2271, %r1291;
	mov.u32 	%r2492, %r1291;
	mov.u32 	%r2396, %r1291;
	mov.u32 	%r2274, %r1291;
	mov.u32 	%r2408, %r1291;
	mov.u32 	%r2276, %r1291;
	mov.u32 	%r2277, %r1291;
	mov.u32 	%r2494, %r1291;
	mov.u32 	%r2397, %r1291;
	mov.u32 	%r2398, %r1291;
	mov.u32 	%r2281, %r1291;
	mov.u32 	%r2410, %r1291;
	mov.u32 	%r2283, %r1291;
	mov.u32 	%r2284, %r1291;
	mov.u32 	%r2496, %r1291;
	mov.u32 	%r2411, %r1291;
	mov.u32 	%r2399, %r1291;
	mov.u32 	%r2425, %r1291;
	mov.u32 	%r2289, %r1291;
	mov.u32 	%r2412, %r1291;
	mov.u32 	%r2400, %r1291;
	mov.u32 	%r2427, %r1291;
	mov.u32 	%r2293, %r1291;
	mov.u32 	%r2455, %r1291;
	mov.u32 	%r2295, %r1291;
	mov.u32 	%r2296, %r1291;
	mov.u32 	%r2297, %r1291;
	mov.u32 	%r2456, %r1291;
	mov.u32 	%r2299, %r1291;
	mov.u32 	%r2300, %r1291;
	mov.u32 	%r2301, %r1291;
	mov.u32 	%r2457, %r1291;
	mov.u32 	%r2458, %r1291;
	mov.u32 	%r2304, %r1291;
	mov.u32 	%r2305, %r1291;
	mov.u32 	%r2306, %r1291;
	mov.u32 	%r2307, %r1291;
	mov.u32 	%r2308, %r1291;
	mov.u32 	%r2459, %r1291;
	mov.u32 	%r2460, %r1291;
	mov.u32 	%r2311, %r1291;
	mov.u32 	%r2312, %r1291;
	mov.u32 	%r2313, %r1291;
	mov.u32 	%r2314, %r1291;
	mov.u32 	%r2315, %r1291;
	mov.u32 	%r2316, %r1291;
	mov.u32 	%r2317, %r1291;
	mov.u32 	%r2318, %r1291;
	mov.u32 	%r2319, %r1291;
	mov.u32 	%r2320, %r1291;
	mov.u32 	%r2321, %r1291;
	mov.u32 	%r2464, %r1291;
	mov.u32 	%r2323, %r1291;
	mov.u32 	%r2324, %r1291;
	mov.u32 	%r2325, %r1291;
	mov.u32 	%r2326, %r1291;
	mov.u32 	%r2327, %r1291;
	mov.u32 	%r2466, %r1291;
	mov.u32 	%r2329, %r1291;
	mov.u32 	%r2330, %r1291;
	mov.u32 	%r2331, %r1291;
	mov.u32 	%r2332, %r1291;
	mov.u32 	%r2333, %r1291;
	mov.u32 	%r2467, %r1291;
	mov.u32 	%r2335, %r1291;
	mov.u32 	%r2336, %r1291;
	mov.u32 	%r2337, %r1291;
	mov.u32 	%r2338, %r1291;
	mov.u32 	%r2339, %r1291;
	mov.u32 	%r2340, %r1291;
	mov.u32 	%r2468, %r1291;
	mov.u32 	%r2342, %r1291;
	mov.u32 	%r2343, %r1291;
	mov.u32 	%r2344, %r1291;
	mov.u32 	%r2345, %r1291;
	mov.u32 	%r2346, %r1291;
	mov.u32 	%r2347, %r1291;
	mov.u32 	%r2348, %r1291;
	mov.u32 	%r2349, %r1291;
	mov.u32 	%r2350, %r1291;
	mov.u32 	%r2351, %r1291;
	mov.u32 	%r2352, %r1291;
	mov.u32 	%r2353, %r1291;
	mov.u32 	%r2354, %r1291;
	mov.u32 	%r2355, %r1291;
	mov.u32 	%r2356, %r1291;
	mov.u32 	%r2357, %r1291;
	mov.u32 	%r2358, %r1291;
	mov.u32 	%r2359, %r1291;
	mov.u32 	%r2360, %r1291;
	mov.u32 	%r2361, %r1291;

$L__BB0_293:
	mov.u32 	%r492, %r2345;
	mov.u32 	%r491, %r2344;
	mov.u32 	%r488, %r2468;
	mov.u32 	%r487, %r2340;
	mov.u32 	%r485, %r2338;
	mov.u32 	%r484, %r2337;
	mov.u32 	%r481, %r2467;
	mov.u32 	%r480, %r2333;
	mov.u32 	%r478, %r2331;
	mov.u32 	%r475, %r2466;
	mov.u32 	%r472, %r2325;
	mov.u32 	%r469, %r2464;
	mov.u32 	%r2344, %r2315;
	mov.u32 	%r461, %r2314;
	mov.u32 	%r458, %r2311;
	mov.u32 	%r2340, %r2460;
	mov.u32 	%r456, %r2459;
	mov.u32 	%r2337, %r2308;
	mov.u32 	%r454, %r2307;
	mov.u32 	%r451, %r2304;
	mov.u32 	%r2333, %r2458;
	mov.u32 	%r449, %r2457;
	mov.u32 	%r448, %r2301;
	mov.u32 	%r445, %r2456;
	mov.u32 	%r444, %r2297;
	mov.u32 	%r441, %r2455;
	mov.u32 	%r432, %r2496;
	mov.u32 	%r2409, %r2281;
	mov.u32 	%r425, %r2494;
	mov.u32 	%r2407, %r2274;
	mov.u32 	%r2345, %r2492;
	mov.u32 	%r418, %r2271;
	mov.u32 	%r417, %r2401;
	mov.u32 	%r2311, %r2269;
	mov.u32 	%r2338, %r2491;
	mov.u32 	%r413, %r2266;
	mov.u32 	%r412, %r2405;
	mov.u32 	%r2304, %r2264;
	mov.u32 	%r2331, %r2482;
	mov.u32 	%r409, %r2481;
	mov.u32 	%r2301, %r2483;
	mov.u32 	%r406, %r2259;
	mov.u32 	%r2394, %r2258;
	mov.u32 	%r2264, %r2524;
	mov.u32 	%r2405, %r2256;
	mov.u32 	%r2325, %r2480;
	mov.u32 	%r401, %r2479;
	mov.u32 	%r2297, %r2484;
	mov.u32 	%r398, %r2251;
	mov.u32 	%r2393, %r2250;
	mov.u32 	%r2266, %r2249;
	mov.u32 	%r2307, %r2490;
	mov.u32 	%r2308, %r2417;
	mov.u32 	%r2269, %r2522;
	mov.u32 	%r2403, %r2239;
	mov.u32 	%r2402, %r2238;
	mov.u32 	%r2315, %r2415;
	mov.u32 	%r2314, %r2487;
	mov.u32 	%r2271, %r2235;
	mov.u32 	%r2401, %r2234;
	add.s32 	%r1348, %r2362, %r1347;
	not.b32 	%r1350, %r25;
	add.s32 	%r1351, %r875, %r1350;
	mul.lo.s32 	%r1352, %r1351, %r876;
	add.s32 	%r1353, %r2362, %r1352;
	rem.s32 	%r510, %r1348, %r47;
	rem.s32 	%r511, %r1353, %r926;
	add.s32 	%r1357, %r1347, %r1352;
	add.s32 	%r1358, %r1357, %r877;
	not.b32 	%r1359, %r22;
	add.s32 	%r1360, %r872, %r1359;
	mad.lo.s32 	%r1361, %r1346, %r872, %r1360;
	not.b32 	%r1362, %r23;
	add.s32 	%r1363, %r873, %r1362;
	mad.lo.s32 	%r1364, %r1351, %r873, %r1363;
	add.s32 	%r1365, %r1361, %r1364;
	shl.b32 	%r1366, %r1365, 1;
	add.s32 	%r1367, %r1358, %r1366;
	add.s32 	%r1368, %r2362, %r1367;
	add.s32 	%r1369, %r2362, %r1357;
	div.s32 	%r1370, %r1368, %r877;
	mul.lo.s32 	%r1371, %r1370, %r877;
	sub.s32 	%r1372, %r29, %r877;
	sub.s32 	%r512, %r1368, %r1371;
	sub.s32 	%r1373, %r1361, %r1364;
	shl.b32 	%r1374, %r1373, 1;
	add.s32 	%r1375, %r1374, %r878;
	mad.lo.s32 	%r1376, %r1370, %r29, %r1375;
	mad.lo.s32 	%r1377, %r1370, %r1372, %r1369;
	div.s32 	%r1378, %r1376, %r878;
	mul.lo.s32 	%r1379, %r1378, %r878;
	sub.s32 	%r1382, %r893, %r878;
	sub.s32 	%r513, %r1376, %r1379;
	mad.lo.s32 	%r514, %r1378, %r1382, %r1377;
	setp.lt.s32 	%p152, %r22, 1;
	mov.u32 	%r2455, %r1291;
	mov.u32 	%r2456, %r1291;
	mov.u32 	%r2461, %r1291;
	mov.u32 	%r2462, %r1291;
	mov.u32 	%r2463, %r1291;
	mov.u32 	%r2464, %r1291;
	mov.u32 	%r2465, %r1291;
	mov.u32 	%r2466, %r1291;
	mov.u32 	%r2473, %r1291;
	mov.u32 	%r2474, %r1291;
	@%p152 bra 	$L__BB0_295;

	mul.lo.s32 	%r1383, %r873, 320;
	add.s32 	%r1384, %r22, -1;
	mul.lo.s32 	%r1385, %r23, 320;
	mad.lo.s32 	%r1386, %r1383, %r1384, %r1385;
	add.s32 	%r1389, %r928, -64;
	mad.lo.s32 	%r1394, %r1389, %r1279, %r1276;
	add.s32 	%r1395, %r1386, %r1394;
	shl.b32 	%r1396, %r1395, 2;
	mov.u32 	%r1397, _ZN6kernel5shmemE;
	add.s32 	%r1398, %r1397, %r1396;
	shl.b32 	%r1399, %r27, 4;
	add.s32 	%r1400, %r1398, %r1399;
	ld.shared.v4.u32 	{%r2466, %r2464, %r2456, %r2455}, [%r1400];
	shl.b32 	%r1405, %r27, 3;
	add.s32 	%r1406, %r1398, %r1405;
	ld.shared.v2.u32 	{%r2465, %r2463}, [%r1406+512];
	ld.shared.v4.u32 	{%r2474, %r2473, %r2462, %r2461}, [%r1400+768];

$L__BB0_295:
	setp.lt.s32 	%p153, %r23, 1;
	mov.u32 	%r2457, %r1291;
	mov.u32 	%r2458, %r1291;
	mov.u32 	%r2459, %r1291;
	mov.u32 	%r2460, %r1291;
	mov.u32 	%r2467, %r1291;
	mov.u32 	%r2468, %r1291;
	mov.u32 	%r2469, %r1291;
	mov.u32 	%r2470, %r1291;
	mov.u32 	%r2471, %r1291;
	mov.u32 	%r2472, %r1291;
	mov.u32 	%r2475, %r1291;
	mov.u32 	%r2476, %r1291;
	@%p153 bra 	$L__BB0_298;

	mad.lo.s32 	%r1418, %r1360, 384, %r1282;
	add.s32 	%r1421, %r23, -1;
	mad.lo.s32 	%r1422, %r1277, %r1421, %r1418;
	add.s32 	%r1428, %r1422, %r1280;
	shl.b32 	%r1429, %r1428, 2;
	mov.u32 	%r1430, _ZN6kernel5shmemE;
	add.s32 	%r1431, %r1430, %r1429;
	shl.b32 	%r1432, %r27, 4;
	add.s32 	%r1433, %r1431, %r1432;
	ld.shared.v4.u32 	{%r2476, %r2475, %r2471, %r2469}, [%r1433];
	shl.b32 	%r1438, %r27, 3;
	add.s32 	%r1439, %r1431, %r1438;
	ld.shared.v2.u32 	{%r2472, %r2470}, [%r1439+512];
	ld.shared.v4.u32 	{%r2468, %r2467, %r2459, %r2457}, [%r1433+768];
	mov.u32 	%r2458, %r1291;
	mov.u32 	%r2460, %r1291;
	@%p152 bra 	$L__BB0_298;

	add.s32 	%r2124, %r1439, 512;
	ld.shared.v2.u32 	{%r2460, %r2458}, [%r2124+768];

$L__BB0_298:
	setp.eq.s32 	%p155, %r22, 0;
	@%p155 bra 	$L__BB0_303;

	setp.eq.s32 	%p156, %r23, %r1279;
	@%p156 bra 	$L__BB0_301;

	sub.s32 	%r1449, %r872, %r22;
	mul.lo.s32 	%r1451, %r48, %r23;
	mad.lo.s32 	%r1452, %r1449, 384, %r1451;
	mad.lo.s32 	%r1455, %r1277, %r1279, %r1452;
	mad.lo.s32 	%r1458, %r1275, %r1274, %r1455;
	shl.b32 	%r1459, %r1458, 2;
	mov.u32 	%r1460, _ZN6kernel5shmemE;
	add.s32 	%r1461, %r1460, %r1459;
	shl.b32 	%r1462, %r27, 4;
	add.s32 	%r1463, %r1461, %r1462;
	ld.shared.v4.u32 	{%r2392, %r2390, %r2400, %r2399}, [%r1463];

$L__BB0_301:
	shl.b32 	%r1468, %r23, 8;
	shl.b32 	%r1472, %r873, 8;
	or.b32  	%r1473, %r1472, 128;
	add.s32 	%r1474, %r22, -1;
	mad.lo.s32 	%r1475, %r1473, %r1474, %r1282;
	add.s32 	%r1476, %r1475, %r1468;
	shl.b32 	%r1477, %r1476, 2;
	mov.u32 	%r1478, _ZN6kernel5shmemE;
	add.s32 	%r1479, %r1478, %r1477;
	setp.ne.s32 	%p157, %r23, %r1279;
	shl.b32 	%r1481, %r27, 4;
	add.s32 	%r568, %r1479, %r1481;
	ld.shared.v4.u32 	{%r2396, %r2398, %r2395, %r2397}, [%r568];
	ld.shared.v4.u32 	{%r2394, %r2393, %r2391, %r2389}, [%r568+512];
	@%p157 bra 	$L__BB0_303;

	ld.shared.v4.u32 	{%r2392, %r2390, %r2400, %r2399}, [%r568+1024];

$L__BB0_303:
	setp.eq.s32 	%p158, %r23, 0;
	@%p158 bra 	$L__BB0_306;

	mul.lo.s32 	%r1495, %r48, %r23;
	sub.s32 	%r1496, %r1495, %r48;
	mad.lo.s32 	%r1499, %r1360, 384, %r1496;
	mad.lo.s32 	%r1502, %r1277, %r1279, %r1499;
	mad.lo.s32 	%r1505, %r1275, %r1274, %r1502;
	shl.b32 	%r1506, %r1505, 2;
	mov.u32 	%r1507, _ZN6kernel5shmemE;
	add.s32 	%r1508, %r1507, %r1506;
	shl.b32 	%r1509, %r27, 4;
	add.s32 	%r1510, %r1508, %r1509;
	ld.shared.v4.u32 	{%r2410, %r2408, %r2403, %r2402}, [%r1510+512];
	ld.shared.v4.u32 	{%r2409, %r2407, %r2401, %r2405}, [%r1510+1024];
	@%p155 bra 	$L__BB0_306;

	add.s32 	%r2125, %r1510, 512;
	ld.shared.v4.u32 	{%r2411, %r2412, %r2269, %r2264}, [%r2125+1024];

$L__BB0_306:
	ld.param.u64 	%rd265, [%rd1+56];
	cvta.to.global.u64 	%rd26, %rd265;
	setp.ne.s32 	%p160, %r22, 0;
	mov.u32 	%r2415, %r2315;
	mov.u32 	%r2477, %r2243;
	mov.u32 	%r2417, %r2308;
	mov.u32 	%r2478, %r2247;
	mov.u32 	%r2479, %r401;
	mov.u32 	%r2480, %r2325;
	mov.u32 	%r2481, %r409;
	mov.u32 	%r2482, %r2331;
	mov.u32 	%r2483, %r2301;
	mov.u32 	%r2484, %r2297;
	mov.u32 	%r2485, %r2289;
	mov.u32 	%r2486, %r2293;
	@%p160 bra 	$L__BB0_311;

	mad.lo.s32 	%r1524, %r510, %r875, %r25;
	mul.lo.s32 	%r1525, %r873, %r1524;
	mul.lo.s32 	%r1526, %r1525, 768;
	mad.lo.s32 	%r1527, %r23, 384, %r1526;
	add.s32 	%r1528, %r1527, -64;
	mul.wide.s32 	%rd266, %r1528, 4;
	add.s64 	%rd267, %rd26, %rd266;
	add.s64 	%rd269, %rd267, %rd268;
	ld.global.v4.u32 	{%r2482, %r2480, %r2483, %r2484}, [%rd269+256];
	ld.global.v4.u32 	{%r2486, %r2485, %r2478, %r2477}, [%rd269+1024];
	add.s64 	%rd27, %rd267, %rd270;
	mov.u32 	%r2415, %r2315;
	mov.u32 	%r2417, %r2308;
	@%p158 bra 	$L__BB0_309;

	ld.global.v2.u32 	{%r2415, %r2417}, [%rd27];

$L__BB0_309:
	setp.ne.s32 	%p162, %r23, %r1279;
	ld.global.v2.u32 	{%r2481, %r2479}, [%rd27+768];
	@%p162 bra 	$L__BB0_311;

	ld.global.v2.u32 	{%r2427, %r2425}, [%rd27+1536];

$L__BB0_311:
	setp.ne.s32 	%p163, %r23, 0;
	mov.u32 	%r2487, %r2314;
	mov.u32 	%r2490, %r2307;
	mov.u32 	%r2491, %r2338;
	mov.u32 	%r2492, %r2345;
	mov.u32 	%r2493, %r2277;
	mov.u32 	%r2494, %r425;
	mov.u32 	%r2495, %r2284;
	mov.u32 	%r2496, %r432;
	mov.u32 	%r2497, %r2317;
	mov.u32 	%r2498, %r2319;
	@%p163 bra 	$L__BB0_313;

	ld.param.u64 	%rd537, [%rd1+56];
	cvta.to.global.u64 	%rd536, %rd537;
	mad.lo.s32 	%r1545, %r511, %r874, %r24;
	mul.lo.s32 	%r1549, %r1545, %r929;
	mad.lo.s32 	%r1552, %r1360, 384, %r1549;
	add.s32 	%r1553, %r1552, -64;
	mad.lo.s32 	%r1556, %r931, %r47, %r1553;
	mul.wide.s32 	%rd271, %r1556, 4;
	add.s64 	%rd272, %rd536, %rd271;
	add.s64 	%rd274, %rd272, %rd268;
	ld.global.v4.u32 	{%r2498, %r2497, %r2495, %r2493}, [%rd274+256];
	ld.global.v4.u32 	{%r2492, %r2491, %r2487, %r2490}, [%rd274+1024];
	add.s64 	%rd276, %rd272, %rd270;
	ld.global.v2.u32 	{%r2496, %r2494}, [%rd276+768];
	ld.global.v2.u32 	{%r2415, %r2417}, [%rd276+1536];

$L__BB0_313:
	add.s32 	%r1569, %r877, -1;
	setp.lt.s32 	%p164, %r512, %r1569;
	setp.gt.s32 	%p165, %r512, 1;
	and.pred  	%p166, %p165, %p164;
	setp.gt.s32 	%p167, %r513, 1;
	and.pred  	%p168, %p167, %p166;
	add.s32 	%r1570, %r878, -2;
	setp.lt.s32 	%p169, %r513, %r1570;
	and.pred  	%p11, %p169, %p168;
	not.pred 	%p170, %p11;
	@%p170 bra 	$L__BB0_324;

	ld.param.u64 	%rd539, [%rd1+64];
	cvta.to.global.u64 	%rd538, %rd539;
	mad.lo.s32 	%r680, %r513, %r877, %r512;
	shl.b32 	%r1571, %r680, 6;
	mul.wide.s32 	%rd279, %r1571, 4;
	add.s64 	%rd29, %rd538, %rd279;
	and.pred  	%p173, %p160, %p163;
	@%p173 bra 	$L__BB0_316;

	add.s64 	%rd281, %rd29, %rd270;
	ld.global.v2.u32 	{%r2460, %r2458}, [%rd281+256];

$L__BB0_316:
	@%p160 bra 	$L__BB0_318;

	shl.b32 	%r1574, %r877, 5;
	cvt.s64.s32 	%rd282, %r1574;
	cvt.s64.s32 	%rd283, %r27;
	add.s64 	%rd284, %rd282, %rd283;
	shl.b64 	%rd285, %rd284, 3;
	add.s64 	%rd286, %rd29, %rd285;
	ld.global.v2.u32 	{%r2465, %r2463}, [%rd286];

$L__BB0_318:
	@%p163 bra 	$L__BB0_320;

	shl.b32 	%r1577, %r877, 5;
	neg.s32 	%r1578, %r1577;
	cvt.s64.s32 	%rd287, %r1578;
	cvt.s64.s32 	%rd288, %r27;
	add.s64 	%rd289, %rd287, %rd288;
	shl.b64 	%rd290, %rd289, 3;
	add.s64 	%rd291, %rd29, %rd290;
	ld.global.v2.u32 	{%r2472, %r2470}, [%rd291];

$L__BB0_320:
	mad.lo.s32 	%r2138, %r513, %r877, %r512;
	ld.param.u64 	%rd541, [%rd1+64];
	cvta.to.global.u64 	%rd540, %rd541;
	shl.b32 	%r1581, %r878, 6;
	shl.b32 	%r1582, %r2138, 7;
	mad.lo.s32 	%r1583, %r1581, %r877, %r1582;
	mul.wide.s32 	%rd292, %r1583, 4;
	add.s64 	%rd30, %rd540, %rd292;
	@%p160 bra 	$L__BB0_322;

	shl.b32 	%r1584, %r877, 5;
	cvt.s64.s32 	%rd293, %r1584;
	cvt.s64.s32 	%rd294, %r27;
	add.s64 	%rd295, %rd293, %rd294;
	shl.b64 	%rd296, %rd295, 4;
	add.s64 	%rd297, %rd30, %rd296;
	ld.global.v4.u32 	{%r2466, %r2464, %r2456, %r2455}, [%rd297];
	shl.b32 	%r1589, %r877, 6;
	add.s32 	%r1590, %r1589, -32;
	cvt.s64.s32 	%rd298, %r1590;
	add.s64 	%rd299, %rd298, %rd294;
	shl.b64 	%rd300, %rd299, 4;
	add.s64 	%rd301, %rd30, %rd300;
	ld.global.v4.u32 	{%r2474, %r2473, %r2462, %r2461}, [%rd301];

$L__BB0_322:
	@%p163 bra 	$L__BB0_324;

	shl.b32 	%r1595, %r877, 5;
	xor.b32  	%r1596, %r1595, -32;
	cvt.s64.s32 	%rd302, %r1596;
	cvt.s64.s32 	%rd303, %r27;
	add.s64 	%rd304, %rd302, %rd303;
	shl.b64 	%rd305, %rd304, 4;
	add.s64 	%rd306, %rd30, %rd305;
	ld.global.v4.u32 	{%r2476, %r2475, %r2471, %r2469}, [%rd306];
	add.s64 	%rd308, %rd30, %rd268;
	ld.global.v4.u32 	{%r2468, %r2467, %r2459, %r2457}, [%rd308];

$L__BB0_324:
	bar.sync 	0;
	ld.param.u64 	%rd310, [%rd1+136];
	cvta.to.global.u64 	%rd31, %rd310;
	setp.lt.s32 	%p178, %r514, %r883;
	or.pred  	%p180, %p178, %p170;
	mad.lo.s32 	%r1605, %r885, %r884, %r883;
	setp.ge.s32 	%p181, %r514, %r1605;
	or.pred  	%p182, %p180, %p181;
	@%p182 bra 	$L__BB0_374;

	sub.s32 	%r739, %r514, %r883;
	rem.s32 	%r1606, %r739, %r884;
	setp.ne.s32 	%p183, %r1606, 0;
	@%p183 bra 	$L__BB0_374;

	div.s32 	%r1607, %r739, %r884;
	mul.lo.s32 	%r1608, %r1607, %r877;
	mul.lo.s32 	%r740, %r1608, 3;
	add.s32 	%r741, %r512, -2;
	add.s32 	%r1609, %r740, %r741;
	mul.lo.s32 	%r742, %r1609, %r878;
	@%p12 bra 	$L__BB0_328;

	add.s32 	%r1614, %r742, %r513;
	mul.lo.s32 	%r1615, %r1614, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2361;
  cvt.f32.f16 %f302, low;}

	// end inline asm
	add.s32 	%r1616, %r373, %r1615;
	mul.wide.s32 	%rd311, %r1616, 4;
	add.s64 	%rd312, %rd31, %rd311;
	st.global.f32 	[%rd312], %f302;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2361;
  cvt.f32.f16 %f303, high;}

	// end inline asm
	add.s32 	%r1617, %r374, %r1615;
	mul.wide.s32 	%rd313, %r1617, 4;
	add.s64 	%rd314, %rd31, %rd313;
	st.global.f32 	[%rd314], %f303;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2357;
  cvt.f32.f16 %f304, low;}

	// end inline asm
	add.s32 	%r1618, %r375, %r1615;
	mul.wide.s32 	%rd315, %r1618, 4;
	add.s64 	%rd316, %rd31, %rd315;
	st.global.f32 	[%rd316], %f304;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2357;
  cvt.f32.f16 %f305, high;}

	// end inline asm
	add.s32 	%r1619, %r376, %r1615;
	mul.wide.s32 	%rd317, %r1619, 4;
	add.s64 	%rd318, %rd31, %rd317;
	st.global.f32 	[%rd318], %f305;

$L__BB0_328:
	add.s32 	%r743, %r740, %r877;
	@%p12 bra 	$L__BB0_330;

	add.s32 	%r2139, %r512, -2;
	add.s32 	%r1624, %r743, %r2139;
	mad.lo.s32 	%r1625, %r1624, %r878, %r513;
	mul.lo.s32 	%r1626, %r1625, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2360;
  cvt.f32.f16 %f306, low;}

	// end inline asm
	add.s32 	%r1627, %r373, %r1626;
	mul.wide.s32 	%rd319, %r1627, 4;
	add.s64 	%rd320, %rd31, %rd319;
	st.global.f32 	[%rd320], %f306;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2360;
  cvt.f32.f16 %f307, high;}

	// end inline asm
	add.s32 	%r1628, %r374, %r1626;
	mul.wide.s32 	%rd321, %r1628, 4;
	add.s64 	%rd322, %rd31, %rd321;
	st.global.f32 	[%rd322], %f307;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2356;
  cvt.f32.f16 %f308, low;}

	// end inline asm
	add.s32 	%r1629, %r375, %r1626;
	mul.wide.s32 	%rd323, %r1629, 4;
	add.s64 	%rd324, %rd31, %rd323;
	st.global.f32 	[%rd324], %f308;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2356;
  cvt.f32.f16 %f309, high;}

	// end inline asm
	add.s32 	%r1630, %r376, %r1626;
	mul.wide.s32 	%rd325, %r1630, 4;
	add.s64 	%rd326, %rd31, %rd325;
	st.global.f32 	[%rd326], %f309;

$L__BB0_330:
	@%p12 bra 	$L__BB0_332;

	add.s32 	%r2140, %r513, 1;
	add.s32 	%r1635, %r742, %r2140;
	mul.lo.s32 	%r1636, %r1635, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2353;
  cvt.f32.f16 %f310, low;}

	// end inline asm
	add.s32 	%r1637, %r373, %r1636;
	mul.wide.s32 	%rd327, %r1637, 4;
	add.s64 	%rd328, %rd31, %rd327;
	st.global.f32 	[%rd328], %f310;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2353;
  cvt.f32.f16 %f311, high;}

	// end inline asm
	add.s32 	%r1638, %r374, %r1636;
	mul.wide.s32 	%rd329, %r1638, 4;
	add.s64 	%rd330, %rd31, %rd329;
	st.global.f32 	[%rd330], %f311;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2351;
  cvt.f32.f16 %f312, low;}

	// end inline asm
	add.s32 	%r1639, %r375, %r1636;
	mul.wide.s32 	%rd331, %r1639, 4;
	add.s64 	%rd332, %rd31, %rd331;
	st.global.f32 	[%rd332], %f312;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2351;
  cvt.f32.f16 %f313, high;}

	// end inline asm
	add.s32 	%r1640, %r376, %r1636;
	mul.wide.s32 	%rd333, %r1640, 4;
	add.s64 	%rd334, %rd31, %rd333;
	st.global.f32 	[%rd334], %f313;

$L__BB0_332:
	add.s32 	%r745, %r512, -1;
	add.s32 	%r1641, %r740, %r745;
	mul.lo.s32 	%r746, %r1641, %r878;
	@%p12 bra 	$L__BB0_334;

	add.s32 	%r2141, %r513, -1;
	add.s32 	%r1646, %r746, %r2141;
	mul.lo.s32 	%r1647, %r1646, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2319;
  cvt.f32.f16 %f314, low;}

	// end inline asm
	add.s32 	%r1648, %r373, %r1647;
	mul.wide.s32 	%rd335, %r1648, 4;
	add.s64 	%rd336, %rd31, %rd335;
	st.global.f32 	[%rd336], %f314;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2319;
  cvt.f32.f16 %f315, high;}

	// end inline asm
	add.s32 	%r1649, %r374, %r1647;
	mul.wide.s32 	%rd337, %r1649, 4;
	add.s64 	%rd338, %rd31, %rd337;
	st.global.f32 	[%rd338], %f315;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2317;
  cvt.f32.f16 %f316, low;}

	// end inline asm
	add.s32 	%r1650, %r375, %r1647;
	mul.wide.s32 	%rd339, %r1650, 4;
	add.s64 	%rd340, %rd31, %rd339;
	st.global.f32 	[%rd340], %f316;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2317;
  cvt.f32.f16 %f317, high;}

	// end inline asm
	add.s32 	%r1651, %r376, %r1647;
	mul.wide.s32 	%rd341, %r1651, 4;
	add.s64 	%rd342, %rd31, %rd341;
	st.global.f32 	[%rd342], %f317;

$L__BB0_334:
	add.s32 	%r2142, %r512, -1;
	add.s32 	%r1652, %r743, %r2142;
	mul.lo.s32 	%r748, %r1652, %r878;
	@%p12 bra 	$L__BB0_336;

	add.s32 	%r2143, %r513, -1;
	add.s32 	%r1657, %r748, %r2143;
	mul.lo.s32 	%r1658, %r1657, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2349;
  cvt.f32.f16 %f318, low;}

	// end inline asm
	add.s32 	%r1659, %r373, %r1658;
	mul.wide.s32 	%rd343, %r1659, 4;
	add.s64 	%rd344, %rd31, %rd343;
	st.global.f32 	[%rd344], %f318;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2349;
  cvt.f32.f16 %f319, high;}

	// end inline asm
	add.s32 	%r1660, %r374, %r1658;
	mul.wide.s32 	%rd345, %r1660, 4;
	add.s64 	%rd346, %rd31, %rd345;
	st.global.f32 	[%rd346], %f319;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2347;
  cvt.f32.f16 %f320, low;}

	// end inline asm
	add.s32 	%r1661, %r375, %r1658;
	mul.wide.s32 	%rd347, %r1661, 4;
	add.s64 	%rd348, %rd31, %rd347;
	st.global.f32 	[%rd348], %f320;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2347;
  cvt.f32.f16 %f321, high;}

	// end inline asm
	add.s32 	%r1662, %r376, %r1658;
	mul.wide.s32 	%rd349, %r1662, 4;
	add.s64 	%rd350, %rd31, %rd349;
	st.global.f32 	[%rd350], %f321;

$L__BB0_336:
	@%p12 bra 	$L__BB0_338;

	add.s32 	%r1667, %r746, %r513;
	mul.lo.s32 	%r1668, %r1667, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r492;
  cvt.f32.f16 %f322, low;}

	// end inline asm
	add.s32 	%r1669, %r373, %r1668;
	mul.wide.s32 	%rd351, %r1669, 4;
	add.s64 	%rd352, %rd31, %rd351;
	st.global.f32 	[%rd352], %f322;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r492;
  cvt.f32.f16 %f323, high;}

	// end inline asm
	add.s32 	%r1670, %r374, %r1668;
	mul.wide.s32 	%rd353, %r1670, 4;
	add.s64 	%rd354, %rd31, %rd353;
	st.global.f32 	[%rd354], %f323;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r485;
  cvt.f32.f16 %f324, low;}

	// end inline asm
	add.s32 	%r1671, %r375, %r1668;
	mul.wide.s32 	%rd355, %r1671, 4;
	add.s64 	%rd356, %rd31, %rd355;
	st.global.f32 	[%rd356], %f324;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r485;
  cvt.f32.f16 %f325, high;}

	// end inline asm
	add.s32 	%r1672, %r376, %r1668;
	mul.wide.s32 	%rd357, %r1672, 4;
	add.s64 	%rd358, %rd31, %rd357;
	st.global.f32 	[%rd358], %f325;

$L__BB0_338:
	@%p12 bra 	$L__BB0_340;

	add.s32 	%r1677, %r748, %r513;
	mul.lo.s32 	%r1678, %r1677, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r491;
  cvt.f32.f16 %f326, low;}

	// end inline asm
	add.s32 	%r1679, %r373, %r1678;
	mul.wide.s32 	%rd359, %r1679, 4;
	add.s64 	%rd360, %rd31, %rd359;
	st.global.f32 	[%rd360], %f326;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r491;
  cvt.f32.f16 %f327, high;}

	// end inline asm
	add.s32 	%r1680, %r374, %r1678;
	mul.wide.s32 	%rd361, %r1680, 4;
	add.s64 	%rd362, %rd31, %rd361;
	st.global.f32 	[%rd362], %f327;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r484;
  cvt.f32.f16 %f328, low;}

	// end inline asm
	add.s32 	%r1681, %r375, %r1678;
	mul.wide.s32 	%rd363, %r1681, 4;
	add.s64 	%rd364, %rd31, %rd363;
	st.global.f32 	[%rd364], %f328;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r484;
  cvt.f32.f16 %f329, high;}

	// end inline asm
	add.s32 	%r1682, %r376, %r1678;
	mul.wide.s32 	%rd365, %r1682, 4;
	add.s64 	%rd366, %rd31, %rd365;
	st.global.f32 	[%rd366], %f329;

$L__BB0_340:
	add.s32 	%r2144, %r512, -1;
	add.s32 	%r749, %r743, %r877;
	add.s32 	%r1683, %r749, %r2144;
	mul.lo.s32 	%r750, %r1683, %r878;
	@%p12 bra 	$L__BB0_342;

	add.s32 	%r1688, %r750, %r513;
	mul.lo.s32 	%r1689, %r1688, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2343;
  cvt.f32.f16 %f330, low;}

	// end inline asm
	add.s32 	%r1690, %r373, %r1689;
	mul.wide.s32 	%rd367, %r1690, 4;
	add.s64 	%rd368, %rd31, %rd367;
	st.global.f32 	[%rd368], %f330;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2343;
  cvt.f32.f16 %f331, high;}

	// end inline asm
	add.s32 	%r1691, %r374, %r1689;
	mul.wide.s32 	%rd369, %r1691, 4;
	add.s64 	%rd370, %rd31, %rd369;
	st.global.f32 	[%rd370], %f331;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2336;
  cvt.f32.f16 %f332, low;}

	// end inline asm
	add.s32 	%r1692, %r375, %r1689;
	mul.wide.s32 	%rd371, %r1692, 4;
	add.s64 	%rd372, %rd31, %rd371;
	st.global.f32 	[%rd372], %f332;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2336;
  cvt.f32.f16 %f333, high;}

	// end inline asm
	add.s32 	%r1693, %r376, %r1689;
	mul.wide.s32 	%rd373, %r1693, 4;
	add.s64 	%rd374, %rd31, %rd373;
	st.global.f32 	[%rd374], %f333;

$L__BB0_342:
	@%p12 bra 	$L__BB0_344;

	add.s32 	%r2129, %r513, 1;
	add.s32 	%r1698, %r746, %r2129;
	mul.lo.s32 	%r1699, %r1698, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r478;
  cvt.f32.f16 %f334, low;}

	// end inline asm
	add.s32 	%r1700, %r373, %r1699;
	mul.wide.s32 	%rd375, %r1700, 4;
	add.s64 	%rd376, %rd31, %rd375;
	st.global.f32 	[%rd376], %f334;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r478;
  cvt.f32.f16 %f335, high;}

	// end inline asm
	add.s32 	%r1701, %r374, %r1699;
	mul.wide.s32 	%rd377, %r1701, 4;
	add.s64 	%rd378, %rd31, %rd377;
	st.global.f32 	[%rd378], %f335;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r472;
  cvt.f32.f16 %f336, low;}

	// end inline asm
	add.s32 	%r1702, %r375, %r1699;
	mul.wide.s32 	%rd379, %r1702, 4;
	add.s64 	%rd380, %rd31, %rd379;
	st.global.f32 	[%rd380], %f336;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r472;
  cvt.f32.f16 %f337, high;}

	// end inline asm
	add.s32 	%r1703, %r376, %r1699;
	mul.wide.s32 	%rd381, %r1703, 4;
	add.s64 	%rd382, %rd31, %rd381;
	st.global.f32 	[%rd382], %f337;

$L__BB0_344:
	@%p12 bra 	$L__BB0_346;

	add.s32 	%r2130, %r513, 1;
	add.s32 	%r1708, %r748, %r2130;
	mul.lo.s32 	%r1709, %r1708, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2330;
  cvt.f32.f16 %f338, low;}

	// end inline asm
	add.s32 	%r1710, %r373, %r1709;
	mul.wide.s32 	%rd383, %r1710, 4;
	add.s64 	%rd384, %rd31, %rd383;
	st.global.f32 	[%rd384], %f338;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2330;
  cvt.f32.f16 %f339, high;}

	// end inline asm
	add.s32 	%r1711, %r374, %r1709;
	mul.wide.s32 	%rd385, %r1711, 4;
	add.s64 	%rd386, %rd31, %rd385;
	st.global.f32 	[%rd386], %f339;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2324;
  cvt.f32.f16 %f340, low;}

	// end inline asm
	add.s32 	%r1712, %r375, %r1709;
	mul.wide.s32 	%rd387, %r1712, 4;
	add.s64 	%rd388, %rd31, %rd387;
	st.global.f32 	[%rd388], %f340;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2324;
  cvt.f32.f16 %f341, high;}

	// end inline asm
	add.s32 	%r1713, %r376, %r1709;
	mul.wide.s32 	%rd389, %r1713, 4;
	add.s64 	%rd390, %rd31, %rd389;
	st.global.f32 	[%rd390], %f341;

$L__BB0_346:
	@%p12 bra 	$L__BB0_348;

	add.s32 	%r2131, %r513, 1;
	add.s32 	%r1718, %r750, %r2131;
	mul.lo.s32 	%r1719, %r1718, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2329;
  cvt.f32.f16 %f342, low;}

	// end inline asm
	add.s32 	%r1720, %r373, %r1719;
	mul.wide.s32 	%rd391, %r1720, 4;
	add.s64 	%rd392, %rd31, %rd391;
	st.global.f32 	[%rd392], %f342;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2329;
  cvt.f32.f16 %f343, high;}

	// end inline asm
	add.s32 	%r1721, %r374, %r1719;
	mul.wide.s32 	%rd393, %r1721, 4;
	add.s64 	%rd394, %rd31, %rd393;
	st.global.f32 	[%rd394], %f343;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2323;
  cvt.f32.f16 %f344, low;}

	// end inline asm
	add.s32 	%r1722, %r375, %r1719;
	mul.wide.s32 	%rd395, %r1722, 4;
	add.s64 	%rd396, %rd31, %rd395;
	st.global.f32 	[%rd396], %f344;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2323;
  cvt.f32.f16 %f345, high;}

	// end inline asm
	add.s32 	%r1723, %r376, %r1719;
	mul.wide.s32 	%rd397, %r1723, 4;
	add.s64 	%rd398, %rd31, %rd397;
	st.global.f32 	[%rd398], %f345;

$L__BB0_348:
	@%p12 bra 	$L__BB0_350;

	add.s32 	%r2145, %r513, 2;
	add.s32 	%r1728, %r746, %r2145;
	mul.lo.s32 	%r1729, %r1728, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2293;
  cvt.f32.f16 %f346, low;}

	// end inline asm
	add.s32 	%r1730, %r373, %r1729;
	mul.wide.s32 	%rd399, %r1730, 4;
	add.s64 	%rd400, %rd31, %rd399;
	st.global.f32 	[%rd400], %f346;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2293;
  cvt.f32.f16 %f347, high;}

	// end inline asm
	add.s32 	%r1731, %r374, %r1729;
	mul.wide.s32 	%rd401, %r1731, 4;
	add.s64 	%rd402, %rd31, %rd401;
	st.global.f32 	[%rd402], %f347;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2289;
  cvt.f32.f16 %f348, low;}

	// end inline asm
	add.s32 	%r1732, %r375, %r1729;
	mul.wide.s32 	%rd403, %r1732, 4;
	add.s64 	%rd404, %rd31, %rd403;
	st.global.f32 	[%rd404], %f348;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2289;
  cvt.f32.f16 %f349, high;}

	// end inline asm
	add.s32 	%r1733, %r376, %r1729;
	mul.wide.s32 	%rd405, %r1733, 4;
	add.s64 	%rd406, %rd31, %rd405;
	st.global.f32 	[%rd406], %f349;

$L__BB0_350:
	add.s32 	%r1734, %r743, %r512;
	mul.lo.s32 	%r752, %r1734, %r878;
	@%p12 bra 	$L__BB0_352;

	add.s32 	%r2132, %r513, -1;
	add.s32 	%r1739, %r752, %r2132;
	mul.lo.s32 	%r1740, %r1739, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r432;
  cvt.f32.f16 %f350, low;}

	// end inline asm
	add.s32 	%r1741, %r373, %r1740;
	mul.wide.s32 	%rd407, %r1741, 4;
	add.s64 	%rd408, %rd31, %rd407;
	st.global.f32 	[%rd408], %f350;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r432;
  cvt.f32.f16 %f351, high;}

	// end inline asm
	add.s32 	%r1742, %r374, %r1740;
	mul.wide.s32 	%rd409, %r1742, 4;
	add.s64 	%rd410, %rd31, %rd409;
	st.global.f32 	[%rd410], %f351;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r425;
  cvt.f32.f16 %f352, low;}

	// end inline asm
	add.s32 	%r1743, %r375, %r1740;
	mul.wide.s32 	%rd411, %r1743, 4;
	add.s64 	%rd412, %rd31, %rd411;
	st.global.f32 	[%rd412], %f352;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r425;
  cvt.f32.f16 %f353, high;}

	// end inline asm
	add.s32 	%r1744, %r376, %r1740;
	mul.wide.s32 	%rd413, %r1744, 4;
	add.s64 	%rd414, %rd31, %rd413;
	st.global.f32 	[%rd414], %f353;

$L__BB0_352:
	add.s32 	%r1745, %r749, %r512;
	mul.lo.s32 	%r753, %r1745, %r878;
	@%p12 bra 	$L__BB0_354;

	add.s32 	%r2133, %r513, -1;
	add.s32 	%r1750, %r753, %r2133;
	mul.lo.s32 	%r1751, %r1750, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2284;
  cvt.f32.f16 %f354, low;}

	// end inline asm
	add.s32 	%r1752, %r373, %r1751;
	mul.wide.s32 	%rd415, %r1752, 4;
	add.s64 	%rd416, %rd31, %rd415;
	st.global.f32 	[%rd416], %f354;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2284;
  cvt.f32.f16 %f355, high;}

	// end inline asm
	add.s32 	%r1753, %r374, %r1751;
	mul.wide.s32 	%rd417, %r1753, 4;
	add.s64 	%rd418, %rd31, %rd417;
	st.global.f32 	[%rd418], %f355;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2277;
  cvt.f32.f16 %f356, low;}

	// end inline asm
	add.s32 	%r1754, %r375, %r1751;
	mul.wide.s32 	%rd419, %r1754, 4;
	add.s64 	%rd420, %rd31, %rd419;
	st.global.f32 	[%rd420], %f356;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2277;
  cvt.f32.f16 %f357, high;}

	// end inline asm
	add.s32 	%r1755, %r376, %r1751;
	mul.wide.s32 	%rd421, %r1755, 4;
	add.s64 	%rd422, %rd31, %rd421;
	st.global.f32 	[%rd422], %f357;

$L__BB0_354:
	add.s32 	%r1756, %r740, %r512;
	mul.lo.s32 	%r754, %r1756, %r878;
	@%p12 bra 	$L__BB0_356;

	add.s32 	%r1761, %r754, %r513;
	mul.lo.s32 	%r1762, %r1761, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2345;
  cvt.f32.f16 %f358, low;}

	// end inline asm
	add.s32 	%r1763, %r373, %r1762;
	mul.wide.s32 	%rd423, %r1763, 4;
	add.s64 	%rd424, %rd31, %rd423;
	st.global.f32 	[%rd424], %f358;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2345;
  cvt.f32.f16 %f359, high;}

	// end inline asm
	add.s32 	%r1764, %r374, %r1762;
	mul.wide.s32 	%rd425, %r1764, 4;
	add.s64 	%rd426, %rd31, %rd425;
	st.global.f32 	[%rd426], %f359;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2338;
  cvt.f32.f16 %f360, low;}

	// end inline asm
	add.s32 	%r1765, %r375, %r1762;
	mul.wide.s32 	%rd427, %r1765, 4;
	add.s64 	%rd428, %rd31, %rd427;
	st.global.f32 	[%rd428], %f360;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2338;
  cvt.f32.f16 %f361, high;}

	// end inline asm
	add.s32 	%r1766, %r376, %r1762;
	mul.wide.s32 	%rd429, %r1766, 4;
	add.s64 	%rd430, %rd31, %rd429;
	st.global.f32 	[%rd430], %f361;

$L__BB0_356:
	@%p12 bra 	$L__BB0_358;

	add.s32 	%r1771, %r752, %r513;
	mul.lo.s32 	%r1772, %r1771, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2344;
  cvt.f32.f16 %f362, low;}

	// end inline asm
	add.s32 	%r1773, %r373, %r1772;
	mul.wide.s32 	%rd431, %r1773, 4;
	add.s64 	%rd432, %rd31, %rd431;
	st.global.f32 	[%rd432], %f362;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2344;
  cvt.f32.f16 %f363, high;}

	// end inline asm
	add.s32 	%r1774, %r374, %r1772;
	mul.wide.s32 	%rd433, %r1774, 4;
	add.s64 	%rd434, %rd31, %rd433;
	st.global.f32 	[%rd434], %f363;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2337;
  cvt.f32.f16 %f364, low;}

	// end inline asm
	add.s32 	%r1775, %r375, %r1772;
	mul.wide.s32 	%rd435, %r1775, 4;
	add.s64 	%rd436, %rd31, %rd435;
	st.global.f32 	[%rd436], %f364;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2337;
  cvt.f32.f16 %f365, high;}

	// end inline asm
	add.s32 	%r1776, %r376, %r1772;
	mul.wide.s32 	%rd437, %r1776, 4;
	add.s64 	%rd438, %rd31, %rd437;
	st.global.f32 	[%rd438], %f365;

$L__BB0_358:
	@%p12 bra 	$L__BB0_360;

	add.s32 	%r1781, %r753, %r513;
	mul.lo.s32 	%r1782, %r1781, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r461;
  cvt.f32.f16 %f366, low;}

	// end inline asm
	add.s32 	%r1783, %r373, %r1782;
	mul.wide.s32 	%rd439, %r1783, 4;
	add.s64 	%rd440, %rd31, %rd439;
	st.global.f32 	[%rd440], %f366;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r461;
  cvt.f32.f16 %f367, high;}

	// end inline asm
	add.s32 	%r1784, %r374, %r1782;
	mul.wide.s32 	%rd441, %r1784, 4;
	add.s64 	%rd442, %rd31, %rd441;
	st.global.f32 	[%rd442], %f367;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r454;
  cvt.f32.f16 %f368, low;}

	// end inline asm
	add.s32 	%r1785, %r375, %r1782;
	mul.wide.s32 	%rd443, %r1785, 4;
	add.s64 	%rd444, %rd31, %rd443;
	st.global.f32 	[%rd444], %f368;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r454;
  cvt.f32.f16 %f369, high;}

	// end inline asm
	add.s32 	%r1786, %r376, %r1782;
	mul.wide.s32 	%rd445, %r1786, 4;
	add.s64 	%rd446, %rd31, %rd445;
	st.global.f32 	[%rd446], %f369;

$L__BB0_360:
	@%p12 bra 	$L__BB0_362;

	add.s32 	%r2134, %r513, 1;
	add.s32 	%r1791, %r754, %r2134;
	mul.lo.s32 	%r1792, %r1791, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2331;
  cvt.f32.f16 %f370, low;}

	// end inline asm
	add.s32 	%r1793, %r373, %r1792;
	mul.wide.s32 	%rd447, %r1793, 4;
	add.s64 	%rd448, %rd31, %rd447;
	st.global.f32 	[%rd448], %f370;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2331;
  cvt.f32.f16 %f371, high;}

	// end inline asm
	add.s32 	%r1794, %r374, %r1792;
	mul.wide.s32 	%rd449, %r1794, 4;
	add.s64 	%rd450, %rd31, %rd449;
	st.global.f32 	[%rd450], %f371;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2325;
  cvt.f32.f16 %f372, low;}

	// end inline asm
	add.s32 	%r1795, %r375, %r1792;
	mul.wide.s32 	%rd451, %r1795, 4;
	add.s64 	%rd452, %rd31, %rd451;
	st.global.f32 	[%rd452], %f372;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2325;
  cvt.f32.f16 %f373, high;}

	// end inline asm
	add.s32 	%r1796, %r376, %r1792;
	mul.wide.s32 	%rd453, %r1796, 4;
	add.s64 	%rd454, %rd31, %rd453;
	st.global.f32 	[%rd454], %f373;

$L__BB0_362:
	@%p12 bra 	$L__BB0_364;

	add.s32 	%r2135, %r513, 1;
	add.s32 	%r1801, %r752, %r2135;
	mul.lo.s32 	%r1802, %r1801, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r409;
  cvt.f32.f16 %f374, low;}

	// end inline asm
	add.s32 	%r1803, %r373, %r1802;
	mul.wide.s32 	%rd455, %r1803, 4;
	add.s64 	%rd456, %rd31, %rd455;
	st.global.f32 	[%rd456], %f374;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r409;
  cvt.f32.f16 %f375, high;}

	// end inline asm
	add.s32 	%r1804, %r374, %r1802;
	mul.wide.s32 	%rd457, %r1804, 4;
	add.s64 	%rd458, %rd31, %rd457;
	st.global.f32 	[%rd458], %f375;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r401;
  cvt.f32.f16 %f376, low;}

	// end inline asm
	add.s32 	%r1805, %r375, %r1802;
	mul.wide.s32 	%rd459, %r1805, 4;
	add.s64 	%rd460, %rd31, %rd459;
	st.global.f32 	[%rd460], %f376;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r401;
  cvt.f32.f16 %f377, high;}

	// end inline asm
	add.s32 	%r1806, %r376, %r1802;
	mul.wide.s32 	%rd461, %r1806, 4;
	add.s64 	%rd462, %rd31, %rd461;
	st.global.f32 	[%rd462], %f377;

$L__BB0_364:
	@%p12 bra 	$L__BB0_366;

	add.s32 	%r2136, %r513, 1;
	add.s32 	%r1811, %r753, %r2136;
	mul.lo.s32 	%r1812, %r1811, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r448;
  cvt.f32.f16 %f378, low;}

	// end inline asm
	add.s32 	%r1813, %r373, %r1812;
	mul.wide.s32 	%rd463, %r1813, 4;
	add.s64 	%rd464, %rd31, %rd463;
	st.global.f32 	[%rd464], %f378;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r448;
  cvt.f32.f16 %f379, high;}

	// end inline asm
	add.s32 	%r1814, %r374, %r1812;
	mul.wide.s32 	%rd465, %r1814, 4;
	add.s64 	%rd466, %rd31, %rd465;
	st.global.f32 	[%rd466], %f379;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r444;
  cvt.f32.f16 %f380, low;}

	// end inline asm
	add.s32 	%r1815, %r375, %r1812;
	mul.wide.s32 	%rd467, %r1815, 4;
	add.s64 	%rd468, %rd31, %rd467;
	st.global.f32 	[%rd468], %f380;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r444;
  cvt.f32.f16 %f381, high;}

	// end inline asm
	add.s32 	%r1816, %r376, %r1812;
	mul.wide.s32 	%rd469, %r1816, 4;
	add.s64 	%rd470, %rd31, %rd469;
	st.global.f32 	[%rd470], %f381;

$L__BB0_366:
	add.s32 	%r2146, %r513, 2;
	add.s32 	%r755, %r753, %r2146;
	@%p12 bra 	$L__BB0_368;

	mul.lo.s32 	%r1821, %r755, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2247;
  cvt.f32.f16 %f382, low;}

	// end inline asm
	add.s32 	%r1822, %r373, %r1821;
	mul.wide.s32 	%rd471, %r1822, 4;
	add.s64 	%rd472, %rd31, %rd471;
	st.global.f32 	[%rd472], %f382;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2247;
  cvt.f32.f16 %f383, high;}

	// end inline asm
	add.s32 	%r1823, %r374, %r1821;
	mul.wide.s32 	%rd473, %r1823, 4;
	add.s64 	%rd474, %rd31, %rd473;
	st.global.f32 	[%rd474], %f383;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2243;
  cvt.f32.f16 %f384, low;}

	// end inline asm
	add.s32 	%r1824, %r375, %r1821;
	mul.wide.s32 	%rd475, %r1824, 4;
	add.s64 	%rd476, %rd31, %rd475;
	st.global.f32 	[%rd476], %f384;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2243;
  cvt.f32.f16 %f385, high;}

	// end inline asm
	add.s32 	%r1825, %r376, %r1821;
	mul.wide.s32 	%rd477, %r1825, 4;
	add.s64 	%rd478, %rd31, %rd477;
	st.global.f32 	[%rd478], %f385;

$L__BB0_368:
	add.s32 	%r756, %r512, 1;
	@%p12 bra 	$L__BB0_370;

	add.s32 	%r1830, %r743, %r756;
	mad.lo.s32 	%r1831, %r1830, %r878, %r513;
	mul.lo.s32 	%r1832, %r1831, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2315;
  cvt.f32.f16 %f386, low;}

	// end inline asm
	add.s32 	%r1833, %r373, %r1832;
	mul.wide.s32 	%rd479, %r1833, 4;
	add.s64 	%rd480, %rd31, %rd479;
	st.global.f32 	[%rd480], %f386;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2315;
  cvt.f32.f16 %f387, high;}

	// end inline asm
	add.s32 	%r1834, %r374, %r1832;
	mul.wide.s32 	%rd481, %r1834, 4;
	add.s64 	%rd482, %rd31, %rd481;
	st.global.f32 	[%rd482], %f387;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2308;
  cvt.f32.f16 %f388, low;}

	// end inline asm
	add.s32 	%r1835, %r375, %r1832;
	mul.wide.s32 	%rd483, %r1835, 4;
	add.s64 	%rd484, %rd31, %rd483;
	st.global.f32 	[%rd484], %f388;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2308;
  cvt.f32.f16 %f389, high;}

	// end inline asm
	add.s32 	%r1836, %r376, %r1832;
	mul.wide.s32 	%rd485, %r1836, 4;
	add.s64 	%rd486, %rd31, %rd485;
	st.global.f32 	[%rd486], %f389;

$L__BB0_370:
	add.s32 	%r1837, %r749, %r756;
	mul.lo.s32 	%r757, %r1837, %r878;
	@%p12 bra 	$L__BB0_372;

	add.s32 	%r1842, %r757, %r513;
	mul.lo.s32 	%r1843, %r1842, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2314;
  cvt.f32.f16 %f390, low;}

	// end inline asm
	add.s32 	%r1844, %r373, %r1843;
	mul.wide.s32 	%rd487, %r1844, 4;
	add.s64 	%rd488, %rd31, %rd487;
	st.global.f32 	[%rd488], %f390;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2314;
  cvt.f32.f16 %f391, high;}

	// end inline asm
	add.s32 	%r1845, %r374, %r1843;
	mul.wide.s32 	%rd489, %r1845, 4;
	add.s64 	%rd490, %rd31, %rd489;
	st.global.f32 	[%rd490], %f391;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2307;
  cvt.f32.f16 %f392, low;}

	// end inline asm
	add.s32 	%r1846, %r375, %r1843;
	mul.wide.s32 	%rd491, %r1846, 4;
	add.s64 	%rd492, %rd31, %rd491;
	st.global.f32 	[%rd492], %f392;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2307;
  cvt.f32.f16 %f393, high;}

	// end inline asm
	add.s32 	%r1847, %r376, %r1843;
	mul.wide.s32 	%rd493, %r1847, 4;
	add.s64 	%rd494, %rd31, %rd493;
	st.global.f32 	[%rd494], %f393;

$L__BB0_372:
	add.s32 	%r2137, %r513, 1;
	add.s32 	%r758, %r757, %r2137;
	@%p12 bra 	$L__BB0_374;

	mul.lo.s32 	%r1852, %r758, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2301;
  cvt.f32.f16 %f394, low;}

	// end inline asm
	add.s32 	%r1853, %r373, %r1852;
	mul.wide.s32 	%rd495, %r1853, 4;
	add.s64 	%rd496, %rd31, %rd495;
	st.global.f32 	[%rd496], %f394;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2301;
  cvt.f32.f16 %f395, high;}

	// end inline asm
	add.s32 	%r1854, %r374, %r1852;
	mul.wide.s32 	%rd497, %r1854, 4;
	add.s64 	%rd498, %rd31, %rd497;
	st.global.f32 	[%rd498], %f395;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2297;
  cvt.f32.f16 %f396, low;}

	// end inline asm
	add.s32 	%r1855, %r375, %r1852;
	mul.wide.s32 	%rd499, %r1855, 4;
	add.s64 	%rd500, %rd31, %rd499;
	st.global.f32 	[%rd500], %f396;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r2297;
  cvt.f32.f16 %f397, high;}

	// end inline asm
	add.s32 	%r1856, %r376, %r1852;
	mul.wide.s32 	%rd501, %r1856, 4;
	add.s64 	%rd502, %rd31, %rd501;
	st.global.f32 	[%rd502], %f397;

$L__BB0_374:
	setp.eq.s32 	%p208, %r22, %r1274;
	@%p208 bra 	$L__BB0_376;

	mad.lo.s32 	%r1857, %r873, %r22, %r23;
	mov.u32 	%r1858, _ZN6kernel5shmemE;
	mad.lo.s32 	%r1859, %r1857, 1280, %r1858;
	add.s32 	%r1860, %r1859, -256;
	shl.b32 	%r1861, %r27, 4;
	add.s32 	%r1862, %r1860, %r1861;
	st.shared.v4.u32 	[%r1862+256], {%r2319, %r2317, %r2284, %r2277};
	st.shared.v4.u32 	[%r1862+1024], {%r2361, %r2357, %r2343, %r2336};
	shl.b32 	%r1863, %r27, 3;
	add.s32 	%r1864, %r1860, %r1863;
	st.shared.v2.u32 	[%r1864+768], {%r2349, %r2347};

$L__BB0_376:
	setp.eq.s32 	%p209, %r23, %r1279;
	@%p209 bra 	$L__BB0_380;

	mad.lo.s32 	%r1868, %r872, 384, -64;
	mul.lo.s32 	%r1869, %r1868, %r23;
	mad.lo.s32 	%r1871, %r1275, %r1274, %r1869;
	mad.lo.s32 	%r1872, %r1360, 384, %r1871;
	shl.b32 	%r1873, %r1872, 2;
	mov.u32 	%r1874, _ZN6kernel5shmemE;
	add.s32 	%r1875, %r1874, %r1873;
	add.s32 	%r1876, %r1875, -256;
	shl.b32 	%r1877, %r27, 4;
	add.s32 	%r1878, %r1876, %r1877;
	st.shared.v4.u32 	[%r1878+256], {%r2353, %r2351, %r2329, %r2323};
	st.shared.v4.u32 	[%r1878+1024], {%r2293, %r2289, %r2247, %r2243};
	shl.b32 	%r1879, %r27, 3;
	add.s32 	%r761, %r1876, %r1879;
	@%p208 bra 	$L__BB0_379;

	st.shared.v2.u32 	[%r761], {%r2360, %r2356};

$L__BB0_379:
	st.shared.v2.u32 	[%r761+768], {%r2330, %r2324};

$L__BB0_380:
	setp.ne.s32 	%p211, %r22, %r1274;
	@%p211 bra 	$L__BB0_382;

	ld.param.u64 	%rd543, [%rd1+56];
	cvta.to.global.u64 	%rd542, %rd543;
	mad.lo.s32 	%r1881, %r510, %r875, %r25;
	mul.lo.s32 	%r1882, %r873, %r1881;
	mul.lo.s32 	%r1883, %r1882, 768;
	mad.lo.s32 	%r1884, %r23, 384, %r1883;
	add.s32 	%r1885, %r1884, -64;
	mul.wide.s32 	%rd504, %r1885, 4;
	add.s64 	%rd505, %rd542, %rd504;
	add.s64 	%rd507, %rd505, %rd268;
	st.global.v4.u32 	[%rd507+256], {%r2319, %r2317, %r2284, %r2277};
	st.global.v4.u32 	[%rd507+1024], {%r2361, %r2357, %r2343, %r2336};
	add.s64 	%rd509, %rd505, %rd270;
	st.global.v2.u32 	[%rd509+768], {%r2349, %r2347};
	st.global.v2.u32 	[%rd509+1536], {%r2360, %r2356};

$L__BB0_382:
	setp.ne.s32 	%p212, %r23, %r1279;
	@%p212 bra 	$L__BB0_387;

	ld.param.u64 	%rd545, [%rd1+56];
	cvta.to.global.u64 	%rd544, %rd545;
	mad.lo.s32 	%r1888, %r511, %r874, %r24;
	mul.lo.s32 	%r1892, %r1888, %r929;
	mad.lo.s32 	%r1895, %r1360, 384, %r1892;
	add.s32 	%r1896, %r1895, -64;
	mad.lo.s32 	%r1899, %r931, %r47, %r1896;
	mul.wide.s32 	%rd510, %r1899, 4;
	add.s64 	%rd511, %rd544, %rd510;
	add.s64 	%rd513, %rd511, %rd268;
	st.global.v4.u32 	[%rd513+256], {%r2353, %r2351, %r2329, %r2323};
	st.global.v4.u32 	[%rd513+1024], {%r2293, %r2289, %r2247, %r2243};
	add.s64 	%rd34, %rd511, %rd270;
	@%p208 bra 	$L__BB0_385;

	st.global.v2.u32 	[%rd34], {%r2360, %r2356};

$L__BB0_385:
	st.global.v2.u32 	[%rd34+768], {%r2330, %r2324};
	@%p160 bra 	$L__BB0_387;

	st.global.v2.u32 	[%rd34+1536], {%r2427, %r2425};

$L__BB0_387:
	setp.ge.s32 	%p215, %r22, %r1274;
	@%p215 bra 	$L__BB0_389;

	mul.lo.s32 	%r1900, %r873, 320;
	mul.lo.s32 	%r1901, %r23, 320;
	mad.lo.s32 	%r1902, %r1900, %r22, %r1901;
	add.s32 	%r1906, %r928, -64;
	mad.lo.s32 	%r1910, %r1906, %r1279, %r1276;
	add.s32 	%r1911, %r1902, %r1910;
	shl.b32 	%r1912, %r1911, 2;
	mov.u32 	%r1913, _ZN6kernel5shmemE;
	add.s32 	%r1914, %r1913, %r1912;
	shl.b32 	%r1915, %r27, 4;
	add.s32 	%r1916, %r1914, %r1915;
	st.shared.v4.u32 	[%r1916], {%r2476, %r2475, %r2471, %r2469};
	shl.b32 	%r1917, %r27, 3;
	add.s32 	%r1918, %r1914, %r1917;
	st.shared.v2.u32 	[%r1918+512], {%r2348, %r2346};
	st.shared.v4.u32 	[%r1916+768], {%r2359, %r2355, %r2339, %r2332};

$L__BB0_389:
	setp.ge.s32 	%p216, %r23, %r1279;
	@%p216 bra 	$L__BB0_393;

	mad.lo.s32 	%r1924, %r1360, 384, %r1282;
	mad.lo.s32 	%r1927, %r1277, %r23, %r1924;
	add.s32 	%r1933, %r1927, %r1280;
	shl.b32 	%r1934, %r1933, 2;
	mov.u32 	%r1935, _ZN6kernel5shmemE;
	add.s32 	%r1936, %r1935, %r1934;
	shl.b32 	%r1937, %r27, 3;
	add.s32 	%r1938, %r1936, %r1937;
	@%p215 bra 	$L__BB0_392;

	add.s32 	%r2126, %r1938, -256;
	st.shared.v2.u32 	[%r2126], {%r2358, %r2354};

$L__BB0_392:
	shl.b32 	%r1957, %r27, 4;
	add.s32 	%r1958, %r1936, %r1957;
	st.shared.v4.u32 	[%r1958], {%r2352, %r2350, %r2326, %r2320};
	add.s32 	%r2127, %r1938, -256;
	st.shared.v2.u32 	[%r2127+768], {%r2327, %r2321};
	st.shared.v4.u32 	[%r1958+768], {%r2474, %r2473, %r2462, %r2461};

$L__BB0_393:
	bar.sync 	0;
	@%p155 bra 	$L__BB0_395;

	mul.lo.s32 	%r1959, %r873, 320;
	add.s32 	%r1960, %r22, -1;
	mul.lo.s32 	%r1961, %r23, 320;
	mad.lo.s32 	%r1962, %r1959, %r1960, %r1961;
	shl.b32 	%r1963, %r1962, 2;
	mov.u32 	%r1964, _ZN6kernel5shmemE;
	add.s32 	%r1965, %r1964, %r1963;
	add.s32 	%r1966, %r1965, -256;
	shl.b32 	%r1967, %r27, 4;
	add.s32 	%r1968, %r1966, %r1967;
	ld.shared.v4.u32 	{%r2482, %r2480, %r2483, %r2484}, [%r1968+256];
	ld.shared.v4.u32 	{%r2486, %r2485, %r2478, %r2477}, [%r1968+1024];
	shl.b32 	%r1977, %r27, 3;
	add.s32 	%r1978, %r1966, %r1977;
	ld.shared.v2.u32 	{%r2481, %r2479}, [%r1978+768];

$L__BB0_395:
	@%p158 bra 	$L__BB0_398;

	mad.lo.s32 	%r1983, %r872, 384, -64;
	add.s32 	%r1984, %r23, -1;
	mul.lo.s32 	%r1985, %r1983, %r1984;
	mad.lo.s32 	%r1988, %r1275, %r1274, %r1985;
	mad.lo.s32 	%r1989, %r1360, 384, %r1988;
	shl.b32 	%r1990, %r1989, 2;
	mov.u32 	%r1991, _ZN6kernel5shmemE;
	add.s32 	%r1992, %r1991, %r1990;
	add.s32 	%r1993, %r1992, -256;
	shl.b32 	%r1994, %r27, 4;
	add.s32 	%r1995, %r1993, %r1994;
	ld.shared.v4.u32 	{%r2498, %r2497, %r2495, %r2493}, [%r1995+256];
	ld.shared.v4.u32 	{%r2492, %r2491, %r2487, %r2490}, [%r1995+1024];
	shl.b32 	%r2004, %r27, 3;
	add.s32 	%r2005, %r1993, %r2004;
	ld.shared.v2.u32 	{%r2496, %r2494}, [%r2005+768];
	@%p155 bra 	$L__BB0_398;

	add.s32 	%r2128, %r2005, 768;
	ld.shared.v2.u32 	{%r2415, %r2417}, [%r2128+768];

$L__BB0_398:
	ld.param.u64 	%rd515, [%rd1+56];
	cvta.to.global.u64 	%rd35, %rd515;
	mov.u32 	%r2522, %r2269;
	mov.u32 	%r2504, %r2389;
	mov.u32 	%r2506, %r2391;
	mov.u32 	%r2250, %r2393;
	mov.u32 	%r2524, %r2264;
	mov.u32 	%r2258, %r2394;
	mov.u32 	%r2511, %r2395;
	mov.u32 	%r2512, %r2396;
	mov.u32 	%r2513, %r2397;
	mov.u32 	%r2514, %r2398;
	mov.u32 	%r2529, %r2411;
	mov.u32 	%r2530, %r2412;
	@%p160 bra 	$L__BB0_402;

	mad.lo.s32 	%r2011, %r510, %r875, %r25;
	mad.lo.s32 	%r2012, %r2011, 768, 384;
	mul.lo.s32 	%r2013, %r2012, %r873;
	mad.lo.s32 	%r2014, %r23, 384, %r2013;
	add.s32 	%r2015, %r2014, -128;
	mul.wide.s32 	%rd516, %r2015, 4;
	add.s64 	%rd517, %rd35, %rd516;
	add.s64 	%rd519, %rd517, %rd268;
	add.s64 	%rd36, %rd519, 512;
	mov.u32 	%r2522, %r2269;
	mov.u32 	%r2524, %r2264;
	mov.u32 	%r2529, %r2411;
	mov.u32 	%r2530, %r2412;
	@%p158 bra 	$L__BB0_401;

	ld.global.v4.u32 	{%r2529, %r2530, %r2522, %r2524}, [%rd36+-512];

$L__BB0_401:
	ld.global.v4.u32 	{%r2512, %r2514, %r2511, %r2513}, [%rd36];
	ld.global.v4.u32 	{%r2258, %r2250, %r2506, %r2504}, [%rd36+512];
	ld.global.v4.u32 	{%r2392, %r2390, %r2400, %r2399}, [%rd36+1024];

$L__BB0_402:
	mov.u32 	%r2234, %r2401;
	mov.u32 	%r2238, %r2402;
	mov.u32 	%r2239, %r2403;
	mov.u32 	%r2256, %r2405;
	mov.u32 	%r2274, %r2407;
	mov.u32 	%r2526, %r2408;
	mov.u32 	%r2281, %r2409;
	mov.u32 	%r2528, %r2410;
	@%p163 bra 	$L__BB0_404;

	mad.lo.s32 	%r2033, %r511, %r874, %r24;
	mad.lo.s32 	%r2039, %r1360, 384, %r48;
	mad.lo.s32 	%r2040, %r2033, %r929, %r2039;
	mad.lo.s32 	%r2043, %r931, %r47, %r2040;
	mul.wide.s32 	%rd520, %r2043, 4;
	add.s64 	%rd521, %rd35, %rd520;
	add.s64 	%rd523, %rd521, %rd268;
	ld.global.v4.u32 	{%r2528, %r2526, %r2239, %r2238}, [%rd523+512];
	ld.global.v4.u32 	{%r2281, %r2274, %r2234, %r2256}, [%rd523+1024];
	ld.global.v4.u32 	{%r2529, %r2530, %r2522, %r2524}, [%rd523+1536];

$L__BB0_404:
	add.s32 	%r868, %r2362, 1;
	bar.sync 	0;
	@%p208 bra 	$L__BB0_407;

	setp.ne.s32 	%p238, %r23, %r1279;
	shl.b32 	%r2057, %r23, 8;
	shl.b32 	%r2061, %r873, 8;
	or.b32  	%r2062, %r2061, 128;
	mad.lo.s32 	%r2063, %r2062, %r22, %r1282;
	add.s32 	%r2064, %r2063, %r2057;
	shl.b32 	%r2065, %r2064, 2;
	mov.u32 	%r2066, _ZN6kernel5shmemE;
	add.s32 	%r2067, %r2066, %r2065;
	shl.b32 	%r2068, %r27, 4;
	add.s32 	%r869, %r2067, %r2068;
	st.shared.v4.u32 	[%r869], {%r2410, %r2408, %r2283, %r2276};
	st.shared.v4.u32 	[%r869+512], {%r2318, %r2316, %r2312, %r2305};
	@%p238 bra 	$L__BB0_407;

	st.shared.v4.u32 	[%r869+1024], {%r2313, %r2306, %r2342, %r2335};

$L__BB0_407:
	setp.eq.s32 	%p236, %r23, %r1279;
	@%p236 bra 	$L__BB0_409;

	mul.lo.s32 	%r2072, %r1360, 384;
	mad.lo.s32 	%r2073, %r48, %r23, %r2072;
	mad.lo.s32 	%r2076, %r1277, %r1279, %r2073;
	mad.lo.s32 	%r2079, %r1275, %r1274, %r2076;
	shl.b32 	%r2080, %r2079, 2;
	mov.u32 	%r2081, _ZN6kernel5shmemE;
	add.s32 	%r2082, %r2081, %r2080;
	shl.b32 	%r2083, %r27, 4;
	add.s32 	%r2084, %r2082, %r2083;
	st.shared.v4.u32 	[%r2084], {%r2313, %r2306, %r2342, %r2335};
	st.shared.v4.u32 	[%r2084+512], {%r2300, %r2296, %r2260, %r2252};
	st.shared.v4.u32 	[%r2084+1024], {%r2299, %r2295, %r2391, %r2389};

$L__BB0_409:
	setp.ne.s32 	%p237, %r22, %r1274;
	ld.param.u64 	%rd524, [%rd1+56];
	cvta.to.global.u64 	%rd37, %rd524;
	@%p237 bra 	$L__BB0_411;

	mad.lo.s32 	%r2086, %r510, %r875, %r25;
	mad.lo.s32 	%r2087, %r2086, 768, 384;
	mul.lo.s32 	%r2088, %r2087, %r873;
	mad.lo.s32 	%r2089, %r23, 384, %r2088;
	add.s32 	%r2090, %r2089, -128;
	mul.wide.s32 	%rd525, %r2090, 4;
	add.s64 	%rd526, %rd37, %rd525;
	add.s64 	%rd528, %rd526, %rd268;
	st.global.v4.u32 	[%rd528+512], {%r2410, %r2408, %r2283, %r2276};
	st.global.v4.u32 	[%rd528+1024], {%r2318, %r2316, %r2312, %r2305};
	st.global.v4.u32 	[%rd528+1536], {%r2313, %r2306, %r2342, %r2335};

$L__BB0_411:
	setp.ne.s32 	%p239, %r23, %r1279;
	@%p239 bra 	$L__BB0_414;

	mad.lo.s32 	%r2092, %r511, %r874, %r24;
	mad.lo.s32 	%r2098, %r1360, 384, %r48;
	mad.lo.s32 	%r2099, %r2092, %r929, %r2098;
	mad.lo.s32 	%r2102, %r931, %r47, %r2099;
	mul.wide.s32 	%rd529, %r2102, 4;
	add.s64 	%rd530, %rd37, %rd529;
	add.s64 	%rd38, %rd530, %rd268;
	st.global.v4.u32 	[%rd38], {%r2313, %r2306, %r2342, %r2335};
	st.global.v4.u32 	[%rd38+512], {%r2300, %r2296, %r2260, %r2252};
	st.global.v4.u32 	[%rd38+1024], {%r2299, %r2295, %r2391, %r2389};
	@%p160 bra 	$L__BB0_414;

	st.global.v4.u32 	[%rd38+1536], {%r2392, %r2390, %r2400, %r2399};

$L__BB0_414:
	rem.s32 	%r2103, %r2362, %r876;
	setp.eq.s32 	%p230, %r2103, 0;
	@%p230 bra 	$L__BB0_416;

	bar.sync 	0;
	bra.uni 	$L__BB0_423;

$L__BB0_416:
	@%p147 bra 	$L__BB0_418;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_418:
	bar.sync 	0;
	@%p148 bra 	$L__BB0_422;

	membar.gl;
	setp.eq.s32 	%p233, %r378, %r379;
	mov.u32 	%r2118, -2147483647;
	sub.s32 	%r2119, %r2118, %r377;
	selp.b32 	%r2107, %r2119, 1, %p233;
	// begin inline asm
	atom.add.release.gpu.u32 %r2106,[%rd25],%r2107;
	// end inline asm

$L__BB0_420:
	ld.volatile.u32 	%r2120, [%rd25];
	xor.b32  	%r2121, %r2120, %r2106;
	setp.gt.s32 	%p234, %r2121, -1;
	@%p234 bra 	$L__BB0_420;

	// begin inline asm
	ld.acquire.gpu.u32 %r2122,[%rd25];
	// end inline asm

$L__BB0_422:
	bar.sync 	0;

$L__BB0_423:
	setp.lt.s32 	%p235, %r868, %r30;
	mov.u32 	%r2235, %r2411;
	mov.u32 	%r2389, %r2504;
	mov.u32 	%r2243, %r2477;
	mov.u32 	%r2391, %r2506;
	mov.u32 	%r2247, %r2478;
	mov.u32 	%r2249, %r2412;
	mov.u32 	%r2251, %r2398;
	mov.u32 	%r2252, %r2397;
	mov.u32 	%r2259, %r2396;
	mov.u32 	%r2260, %r2395;
	mov.u32 	%r2395, %r2511;
	mov.u32 	%r2396, %r2512;
	mov.u32 	%r2408, %r2526;
	mov.u32 	%r2276, %r2402;
	mov.u32 	%r2277, %r2493;
	mov.u32 	%r2397, %r2513;
	mov.u32 	%r2398, %r2514;
	mov.u32 	%r2410, %r2528;
	mov.u32 	%r2283, %r2403;
	mov.u32 	%r2284, %r2495;
	mov.u32 	%r2411, %r2529;
	mov.u32 	%r2289, %r2485;
	mov.u32 	%r2412, %r2530;
	mov.u32 	%r2293, %r2486;
	mov.u32 	%r2295, %r2393;
	mov.u32 	%r2296, %r398;
	mov.u32 	%r2299, %r2394;
	mov.u32 	%r2300, %r406;
	mov.u32 	%r2305, %r412;
	mov.u32 	%r2306, %r413;
	mov.u32 	%r2312, %r417;
	mov.u32 	%r2313, %r418;
	mov.u32 	%r2316, %r2407;
	mov.u32 	%r2317, %r2497;
	mov.u32 	%r2318, %r2409;
	mov.u32 	%r2319, %r2498;
	mov.u32 	%r2320, %r441;
	mov.u32 	%r2321, %r2463;
	mov.u32 	%r2323, %r444;
	mov.u32 	%r2324, %r401;
	mov.u32 	%r2326, %r445;
	mov.u32 	%r2327, %r2465;
	mov.u32 	%r2329, %r448;
	mov.u32 	%r2330, %r409;
	mov.u32 	%r2332, %r449;
	mov.u32 	%r2335, %r451;
	mov.u32 	%r2336, %r454;
	mov.u32 	%r2339, %r456;
	mov.u32 	%r2342, %r458;
	mov.u32 	%r2343, %r461;
	mov.u32 	%r2346, %r2470;
	mov.u32 	%r2347, %r425;
	mov.u32 	%r2348, %r2472;
	mov.u32 	%r2349, %r432;
	mov.u32 	%r2350, %r469;
	mov.u32 	%r2351, %r472;
	mov.u32 	%r2352, %r475;
	mov.u32 	%r2353, %r478;
	mov.u32 	%r2354, %r480;
	mov.u32 	%r2355, %r481;
	mov.u32 	%r2356, %r484;
	mov.u32 	%r2357, %r485;
	mov.u32 	%r2358, %r487;
	mov.u32 	%r2359, %r488;
	mov.u32 	%r2360, %r491;
	mov.u32 	%r2361, %r492;
	mov.u32 	%r2362, %r868;
	@%p235 bra 	$L__BB0_293;

$L__BB0_424:
	ret;

}

