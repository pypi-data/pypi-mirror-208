//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_75
.address_size 64

	// .globl	_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE[24] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllJE[20] = {254, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllKE[8] = {0, 0, 0, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllEhcE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.global .align 4 .b8 _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond6AllXyzE[12] = {0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0};
.extern .shared .align 16 .b8 _ZN6kernel5shmemE[];

.visible .entry _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE(
	.param .align 8 .b8 _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0[144]
)
{
	.reg .pred 	%p<221>;
	.reg .f32 	%f<400>;
	.reg .b32 	%r<2090>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<543>;


	mov.b64 	%rd39, _ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0;
	mov.u64 	%rd1, %rd39;
	ld.param.v2.u32 	{%r723, %r724}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0];
	ld.param.v2.u32 	{%r725, %r726}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+8];
	ld.param.v2.u32 	{%r727, %r728}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+16];
	ld.param.v2.u32 	{%r729, %r730}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+24];
	ld.param.v2.u32 	{%r731, %r732}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+32];
	ld.param.v2.u32 	{%r733, %r734}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+40];
	ld.param.v2.u32 	{%r735, %r736}, [_ZN6kernel16SimulationKernelI7__half2fLi7ELb1ELb0ELb0EEEvNS_10KernelArgsIT_T0_EE_param_0+48];
	mov.u32 	%r22, %tid.y;
	mov.u32 	%r23, %tid.z;
	mov.u32 	%r24, %ctaid.y;
	mov.u32 	%r25, %ctaid.z;
	mov.u32 	%r737, 32;
	sub.s32 	%r26, %r737, %r730;
	mov.u32 	%r27, %tid.x;
	setp.le.s32 	%p12, %r26, %r27;
	add.s32 	%r738, %r736, -1;
	add.s32 	%r739, %r734, %r728;
	add.s32 	%r740, %r739, %r729;
	add.s32 	%r741, %r740, 1;
	mad.lo.s32 	%r742, %r738, %r735, %r741;
	mul.lo.s32 	%r743, %r723, %r725;
	shl.b32 	%r28, %r743, 1;
	shl.b32 	%r744, %r743, 2;
	div.s32 	%r745, %r742, %r744;
	add.s32 	%r746, %r745, 1;
	mul.lo.s32 	%r747, %r746, %r729;
	mul.lo.s32 	%r748, %r724, %r726;
	shl.b32 	%r29, %r748, 1;
	div.s32 	%r749, %r747, %r29;
	add.s32 	%r750, %r749, 1;
	mul.lo.s32 	%r30, %r750, %r728;
	ld.param.u64 	%rd40, [%rd1+136];
	cvta.to.global.u64 	%rd2, %rd40;
	mad.lo.s32 	%r753, %r725, %r25, %r24;
	mad.lo.s32 	%r754, %r753, %r724, %r23;
	mad.lo.s32 	%r755, %r754, %r723, %r22;
	shl.b32 	%r31, %r755, 5;
	add.s32 	%r1782, %r31, %r27;
	mul.lo.s32 	%r756, %r748, %r743;
	shl.b32 	%r35, %r756, 5;
	shl.b32 	%r757, %r730, 2;
	mov.u32 	%r758, 128;
	sub.s32 	%r36, %r758, %r757;
	mul.lo.s32 	%r759, %r729, %r728;
	mul.lo.s32 	%r760, %r759, %r736;
	mul.lo.s32 	%r761, %r760, %r36;
	mul.lo.s32 	%r37, %r761, 3;
	setp.ge.s32 	%p13, %r1782, %r37;
	@%p13 bra 	$L__BB0_9;

	not.b32 	%r762, %r27;
	add.s32 	%r763, %r37, %r762;
	sub.s32 	%r764, %r763, %r31;
	mul.lo.s32 	%r765, %r748, %r723;
	mul.lo.s32 	%r766, %r765, %r725;
	shl.b32 	%r767, %r766, 5;
	div.u32 	%r38, %r764, %r767;
	add.s32 	%r768, %r38, 1;
	and.b32  	%r1779, %r768, 3;
	setp.eq.s32 	%p14, %r1779, 0;
	mov.u32 	%r1780, %r1782;
	@%p14 bra 	$L__BB0_6;

	mov.u32 	%r1780, %r1782;

$L__BB0_5:
	.pragma "nounroll";
	mul.wide.s32 	%rd41, %r1780, 4;
	add.s64 	%rd42, %rd2, %rd41;
	mov.u32 	%r769, 0;
	st.global.u32 	[%rd42], %r769;
	add.s32 	%r1780, %r1780, %r35;
	add.s32 	%r1779, %r1779, -1;
	setp.ne.s32 	%p15, %r1779, 0;
	@%p15 bra 	$L__BB0_5;

$L__BB0_6:
	setp.lt.u32 	%p16, %r38, 3;
	@%p16 bra 	$L__BB0_9;

	mul.wide.s32 	%rd45, %r35, 4;

$L__BB0_8:
	mul.wide.s32 	%rd43, %r1780, 4;
	add.s64 	%rd44, %rd2, %rd43;
	mov.u32 	%r770, 0;
	st.global.u32 	[%rd44], %r770;
	add.s64 	%rd46, %rd44, %rd45;
	st.global.u32 	[%rd46], %r770;
	add.s32 	%r771, %r1780, %r35;
	add.s32 	%r772, %r771, %r35;
	add.s64 	%rd47, %rd46, %rd45;
	st.global.u32 	[%rd47], %r770;
	add.s32 	%r773, %r772, %r35;
	add.s64 	%rd48, %rd47, %rd45;
	st.global.u32 	[%rd48], %r770;
	add.s32 	%r1780, %r773, %r35;
	setp.lt.s32 	%p17, %r1780, %r37;
	@%p17 bra 	$L__BB0_8;

$L__BB0_9:
	ld.param.u64 	%rd49, [%rd1+56];
	cvta.to.global.u64 	%rd3, %rd49;
	sub.s32 	%r774, %r729, %r28;
	div.s32 	%r775, %r774, %r29;
	mul.lo.s32 	%r776, %r775, %r728;
	sub.s32 	%r47, %r776, %r28;
	sub.s32 	%r777, %r728, %r29;
	mul.lo.s32 	%r778, %r777, %r725;
	mul.lo.s32 	%r48, %r723, 384;
	add.s32 	%r779, %r48, %r48;
	add.s32 	%r780, %r779, 128;
	mul.lo.s32 	%r782, %r748, 768;
	mul.lo.s32 	%r783, %r778, %r780;
	mad.lo.s32 	%r49, %r782, %r47, %r783;
	bra.uni 	$L__BB0_10;

$L__BB0_396:
	mov.f32 	%f399, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f399;
  cvt.rn.f16.f32 high, %f399;
  mov.b32 %r1745, {low,high};}

	// end inline asm
	mul.wide.s32 	%rd534, %r1782, 4;
	add.s64 	%rd535, %rd3, %rd534;
	st.global.u32 	[%rd535], %r1745;
	add.s32 	%r1782, %r1782, %r35;

$L__BB0_10:
	setp.lt.s32 	%p18, %r1782, %r49;
	@%p18 bra 	$L__BB0_396;

	ld.param.u64 	%rd50, [%rd1+96];
	cvta.to.global.u64 	%rd5, %rd50;
	ld.param.u64 	%rd51, [%rd1+64];
	cvta.to.global.u64 	%rd6, %rd51;
	mad.lo.s32 	%r1824, %r723, %r24, %r22;
	mul.lo.s32 	%r54, %r724, %r25;
	add.s32 	%r55, %r54, %r23;
	setp.ge.s32 	%p19, %r1824, %r728;
	@%p19 bra 	$L__BB0_35;

	setp.gt.s32 	%p20, %r26, %r27;
	mov.u32 	%r784, 31;
	sub.s32 	%r785, %r784, %r27;
	selp.b32 	%r786, %r27, %r785, %p20;
	shl.b32 	%r787, %r786, 2;
	mov.u32 	%r788, 2;
	sub.s32 	%r56, %r787, %r731;
	sub.s32 	%r789, %r788, %r731;
	add.s32 	%r57, %r789, %r787;
	shl.b32 	%r58, %r759, 6;
	add.s32 	%r59, %r728, -1;
	add.s32 	%r60, %r56, 1;
	add.s32 	%r61, %r57, 1;
	shl.b32 	%r62, %r27, 1;
	or.b32  	%r63, %r62, 1;
	shr.u32 	%r791, %r63, 31;
	add.s32 	%r792, %r63, %r791;
	shr.s32 	%r65, %r792, 1;
	and.b32  	%r793, %r792, -2;
	sub.s32 	%r794, %r63, %r793;
	add.s32 	%r64, %r794, %r58;
	rem.s32 	%r829, %r60, %r36;
	add.s32 	%r830, %r829, %r36;
	rem.s32 	%r88, %r830, %r36;
	rem.s32 	%r831, %r61, %r36;
	add.s32 	%r832, %r831, %r36;
	rem.s32 	%r89, %r832, %r36;
	mov.u32 	%r1783, %r1824;

$L__BB0_13:
	setp.ge.s32 	%p21, %r55, %r729;
	@%p21 bra 	$L__BB0_34;

	add.s32 	%r67, %r59, %r1783;
	rem.s32 	%r795, %r56, %r36;
	add.s32 	%r796, %r795, %r36;
	rem.s32 	%r68, %r796, %r36;
	rem.s32 	%r797, %r57, %r36;
	add.s32 	%r798, %r797, %r36;
	rem.s32 	%r69, %r798, %r36;
	mul.lo.s32 	%r70, %r1783, %r729;
	add.s32 	%r799, %r728, %r1783;
	mul.lo.s32 	%r71, %r799, %r729;
	add.s32 	%r800, %r799, %r728;
	mul.lo.s32 	%r72, %r800, %r729;
	mov.u32 	%r1784, %r55;

$L__BB0_15:
	mul.lo.s32 	%r74, %r1784, %r728;
	add.s32 	%r75, %r74, %r1783;
	shl.b32 	%r76, %r75, 6;
	@%p20 bra 	$L__BB0_17;
	bra.uni 	$L__BB0_16;

$L__BB0_17:
	add.s32 	%r803, %r70, %r1784;
	mul.lo.s32 	%r804, %r803, %r36;
	add.s32 	%r805, %r804, %r68;
	mul.wide.s32 	%rd52, %r805, 4;
	add.s64 	%rd53, %rd5, %rd52;
	ld.global.f32 	%f40, [%rd53];
	add.s32 	%r806, %r804, %r69;
	mul.wide.s32 	%rd54, %r806, 4;
	add.s64 	%rd55, %rd5, %rd54;
	ld.global.f32 	%f41, [%rd55];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f40;
  cvt.rn.f16.f32 high, %f41;
  mov.b32 %r1785, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_18;

$L__BB0_16:
	mov.f32 	%f39, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f39;
  cvt.rn.f16.f32 high, %f39;
  mov.b32 %r1785, {low,high};}

	// end inline asm

$L__BB0_18:
	shl.b32 	%r80, %r75, 5;
	add.s32 	%r807, %r80, %r27;
	shl.b32 	%r808, %r807, 2;
	add.s32 	%r809, %r58, %r808;
	mul.wide.s32 	%rd56, %r809, 4;
	add.s64 	%rd57, %rd6, %rd56;
	st.global.u32 	[%rd57], %r1785;
	@%p20 bra 	$L__BB0_20;
	bra.uni 	$L__BB0_19;

$L__BB0_20:
	add.s32 	%r812, %r71, %r1784;
	mul.lo.s32 	%r813, %r812, %r36;
	add.s32 	%r814, %r813, %r68;
	mul.wide.s32 	%rd58, %r814, 4;
	add.s64 	%rd59, %rd5, %rd58;
	ld.global.f32 	%f44, [%rd59];
	add.s32 	%r815, %r813, %r69;
	mul.wide.s32 	%rd60, %r815, 4;
	add.s64 	%rd61, %rd5, %rd60;
	ld.global.f32 	%f45, [%rd61];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f44;
  cvt.rn.f16.f32 high, %f45;
  mov.b32 %r1786, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_21;

$L__BB0_19:
	mov.f32 	%f43, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f43;
  cvt.rn.f16.f32 high, %f43;
  mov.b32 %r1786, {low,high};}

	// end inline asm

$L__BB0_21:
	add.s32 	%r816, %r62, %r76;
	mul.wide.s32 	%rd62, %r816, 4;
	add.s64 	%rd63, %rd6, %rd62;
	st.global.u32 	[%rd63], %r1786;
	@%p20 bra 	$L__BB0_23;
	bra.uni 	$L__BB0_22;

$L__BB0_23:
	add.s32 	%r819, %r72, %r1784;
	mul.lo.s32 	%r820, %r819, %r36;
	add.s32 	%r821, %r820, %r68;
	mul.wide.s32 	%rd64, %r821, 4;
	add.s64 	%rd65, %rd5, %rd64;
	ld.global.f32 	%f48, [%rd65];
	add.s32 	%r822, %r820, %r69;
	mul.wide.s32 	%rd66, %r822, 4;
	add.s64 	%rd67, %rd5, %rd66;
	ld.global.f32 	%f49, [%rd67];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f48;
  cvt.rn.f16.f32 high, %f49;
  mov.b32 %r1787, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_24;

$L__BB0_22:
	mov.f32 	%f47, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f47;
  cvt.rn.f16.f32 high, %f47;
  mov.b32 %r1787, {low,high};}

	// end inline asm

$L__BB0_24:
	rem.s32 	%r823, %r67, %r728;
	add.s32 	%r824, %r823, %r74;
	shl.b32 	%r87, %r824, 5;
	add.s32 	%r825, %r87, %r27;
	shl.b32 	%r826, %r825, 2;
	add.s32 	%r827, %r58, %r826;
	add.s32 	%r828, %r827, 2;
	mul.wide.s32 	%rd68, %r828, 4;
	add.s64 	%rd69, %rd6, %rd68;
	st.global.u32 	[%rd69], %r1787;
	@%p20 bra 	$L__BB0_26;
	bra.uni 	$L__BB0_25;

$L__BB0_26:
	add.s32 	%r835, %r70, %r1784;
	mul.lo.s32 	%r836, %r835, %r36;
	add.s32 	%r837, %r836, %r88;
	mul.wide.s32 	%rd70, %r837, 4;
	add.s64 	%rd71, %rd5, %rd70;
	ld.global.f32 	%f52, [%rd71];
	add.s32 	%r838, %r836, %r89;
	mul.wide.s32 	%rd72, %r838, 4;
	add.s64 	%rd73, %rd5, %rd72;
	ld.global.f32 	%f53, [%rd73];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f52;
  cvt.rn.f16.f32 high, %f53;
  mov.b32 %r1788, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_27;

$L__BB0_25:
	mov.f32 	%f51, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f51;
  cvt.rn.f16.f32 high, %f51;
  mov.b32 %r1788, {low,high};}

	// end inline asm

$L__BB0_27:
	add.s32 	%r839, %r80, %r65;
	shl.b32 	%r840, %r839, 2;
	add.s32 	%r841, %r64, %r840;
	mul.wide.s32 	%rd74, %r841, 4;
	add.s64 	%rd75, %rd6, %rd74;
	st.global.u32 	[%rd75], %r1788;
	@%p20 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_28;

$L__BB0_29:
	add.s32 	%r844, %r71, %r1784;
	mul.lo.s32 	%r845, %r844, %r36;
	add.s32 	%r846, %r845, %r88;
	mul.wide.s32 	%rd76, %r846, 4;
	add.s64 	%rd77, %rd5, %rd76;
	ld.global.f32 	%f56, [%rd77];
	add.s32 	%r847, %r845, %r89;
	mul.wide.s32 	%rd78, %r847, 4;
	add.s64 	%rd79, %rd5, %rd78;
	ld.global.f32 	%f57, [%rd79];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f56;
  cvt.rn.f16.f32 high, %f57;
  mov.b32 %r1789, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_30;

$L__BB0_28:
	mov.f32 	%f55, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f55;
  cvt.rn.f16.f32 high, %f55;
  mov.b32 %r1789, {low,high};}

	// end inline asm

$L__BB0_30:
	add.s32 	%r848, %r63, %r76;
	mul.wide.s32 	%rd80, %r848, 4;
	add.s64 	%rd81, %rd6, %rd80;
	st.global.u32 	[%rd81], %r1789;
	@%p20 bra 	$L__BB0_32;
	bra.uni 	$L__BB0_31;

$L__BB0_32:
	add.s32 	%r851, %r72, %r1784;
	mul.lo.s32 	%r852, %r851, %r36;
	add.s32 	%r853, %r852, %r88;
	mul.wide.s32 	%rd82, %r853, 4;
	add.s64 	%rd83, %rd5, %rd82;
	ld.global.f32 	%f60, [%rd83];
	add.s32 	%r854, %r852, %r89;
	mul.wide.s32 	%rd84, %r854, 4;
	add.s64 	%rd85, %rd5, %rd84;
	ld.global.f32 	%f61, [%rd85];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f60;
  cvt.rn.f16.f32 high, %f61;
  mov.b32 %r1790, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_33;

$L__BB0_31:
	mov.f32 	%f59, 0f3F800000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f59;
  cvt.rn.f16.f32 high, %f59;
  mov.b32 %r1790, {low,high};}

	// end inline asm

$L__BB0_33:
	add.s32 	%r855, %r87, %r65;
	shl.b32 	%r856, %r855, 2;
	add.s32 	%r857, %r64, %r856;
	add.s32 	%r858, %r857, 2;
	mul.wide.s32 	%rd86, %r858, 4;
	add.s64 	%rd87, %rd6, %rd86;
	st.global.u32 	[%rd87], %r1790;
	add.s32 	%r1784, %r1784, %r748;
	setp.lt.s32 	%p28, %r1784, %r729;
	@%p28 bra 	$L__BB0_15;

$L__BB0_34:
	add.s32 	%r1783, %r1783, %r743;
	setp.lt.s32 	%p29, %r1783, %r728;
	@%p29 bra 	$L__BB0_13;

$L__BB0_35:
	ld.param.u64 	%rd88, [%rd1+104];
	cvta.to.global.u64 	%rd7, %rd88;
	ld.param.u64 	%rd89, [%rd1+72];
	cvta.to.global.u64 	%rd8, %rd89;
	@%p19 bra 	$L__BB0_119;

	shl.b32 	%r101, %r55, 1;
	mov.u64 	%rd90, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	mov.u32 	%r1791, %r1824;

$L__BB0_37:
	setp.ge.s32 	%p31, %r101, %r729;
	@%p31 bra 	$L__BB0_118;

	mov.u32 	%r1792, %r101;

$L__BB0_39:
	setp.ne.s32 	%p32, %r27, 0;
	@%p32 bra 	$L__BB0_117;

	shr.u32 	%r860, %r1792, 31;
	add.s32 	%r861, %r1792, %r860;
	shr.s32 	%r862, %r861, 1;
	mad.lo.s32 	%r863, %r862, %r728, %r1791;
	shl.b32 	%r105, %r863, 5;
	add.s32 	%r106, %r1792, -2;
	mul.lo.s32 	%r107, %r106, %r728;
	add.s32 	%r864, %r729, %r106;
	mul.lo.s32 	%r108, %r864, %r728;
	add.s32 	%r865, %r864, %r729;
	mul.lo.s32 	%r109, %r865, %r728;
	add.s32 	%r110, %r107, %r728;
	add.s32 	%r111, %r1792, -1;
	add.s32 	%r866, %r729, %r111;
	mul.lo.s32 	%r112, %r866, %r728;
	add.s32 	%r867, %r866, %r729;
	mul.lo.s32 	%r113, %r867, %r728;
	add.s32 	%r868, %r729, %r1792;
	mul.lo.s32 	%r114, %r868, %r728;
	add.s32 	%r869, %r868, %r729;
	mul.lo.s32 	%r115, %r869, %r728;
	mul.lo.s32 	%r116, %r1792, %r728;
	add.s32 	%r117, %r116, %r728;
	add.s32 	%r118, %r1792, 1;
	add.s32 	%r870, %r729, %r118;
	mul.lo.s32 	%r119, %r870, %r728;
	add.s32 	%r871, %r870, %r729;
	mul.lo.s32 	%r120, %r871, %r728;
	add.s32 	%r121, %r117, %r728;
	add.s32 	%r122, %r1792, 2;
	add.s32 	%r872, %r729, %r122;
	mul.lo.s32 	%r123, %r872, %r728;
	add.s32 	%r873, %r872, %r729;
	mul.lo.s32 	%r124, %r873, %r728;
	mov.u32 	%r1795, 0;
	mov.u64 	%rd540, %rd90;

$L__BB0_41:
	ld.global.nc.u32 	%r874, [%rd540];
	cvt.rn.f64.s32 	%fd1, %r874;
	add.f64 	%fd3, %fd1, 0d3FE0000000000000;
	add.s32 	%r126, %r874, %r1791;
	setp.lt.s32 	%p33, %r126, %r728;
	or.b32  	%r875, %r106, %r126;
	setp.gt.s32 	%p34, %r875, -1;
	and.pred  	%p35, %p33, %p34;
	setp.lt.s32 	%p36, %r106, %r729;
	and.pred  	%p1, %p36, %p35;
	cvt.rn.f32.f64 	%f62, %fd3;
	add.f32 	%f63, %f62, 0f3E800000;
	abs.f32 	%f1, %f63;
	add.f32 	%f64, %f1, 0f40200000;
	setp.geu.f32 	%p37, %f64, 0f40000000;
	@%p37 bra 	$L__BB0_46;

	@%p1 bra 	$L__BB0_44;
	bra.uni 	$L__BB0_43;

$L__BB0_44:
	add.s32 	%r878, %r107, %r126;
	mul.wide.s32 	%rd91, %r878, 4;
	add.s64 	%rd92, %rd7, %rd91;
	ld.global.f32 	%f67, [%rd92];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f67;
  mov.b32 %r1794, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_45;

$L__BB0_43:
	mov.f32 	%f66, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f66;
  cvt.rn.f16.f32 high, %f66;
  mov.b32 %r1794, {low,high};}

	// end inline asm

$L__BB0_45:
	add.s32 	%r879, %r1795, %r105;
	mul.wide.s32 	%rd93, %r879, 4;
	add.s64 	%rd94, %rd8, %rd93;
	st.global.u32 	[%rd94], %r1794;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_46:
	cvt.rn.f32.f64 	%f68, %fd1;
	add.f32 	%f69, %f68, 0f3E800000;
	abs.f32 	%f2, %f69;
	add.f32 	%f3, %f2, 0f40000000;
	setp.geu.f32 	%p38, %f3, 0f40000000;
	@%p38 bra 	$L__BB0_51;

	@%p1 bra 	$L__BB0_49;
	bra.uni 	$L__BB0_48;

$L__BB0_49:
	add.s32 	%r882, %r108, %r126;
	mul.wide.s32 	%rd95, %r882, 4;
	add.s64 	%rd96, %rd7, %rd95;
	ld.global.f32 	%f72, [%rd96];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f72;
  mov.b32 %r1796, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_50;

$L__BB0_48:
	mov.f32 	%f71, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f71;
  cvt.rn.f16.f32 high, %f71;
  mov.b32 %r1796, {low,high};}

	// end inline asm

$L__BB0_50:
	add.s32 	%r883, %r1795, %r105;
	mul.wide.s32 	%rd97, %r883, 4;
	add.s64 	%rd98, %rd8, %rd97;
	st.global.u32 	[%rd98], %r1796;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_51:
	add.f32 	%f73, %f2, 0f40200000;
	setp.geu.f32 	%p39, %f73, 0f40000000;
	@%p39 bra 	$L__BB0_56;

	@%p1 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_53;

$L__BB0_54:
	add.s32 	%r886, %r109, %r126;
	mul.wide.s32 	%rd99, %r886, 4;
	add.s64 	%rd100, %rd7, %rd99;
	ld.global.f32 	%f76, [%rd100];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f76;
  mov.b32 %r1798, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_55;

$L__BB0_53:
	mov.f32 	%f75, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f75;
  cvt.rn.f16.f32 high, %f75;
  mov.b32 %r1798, {low,high};}

	// end inline asm

$L__BB0_55:
	add.s32 	%r887, %r1795, %r105;
	mul.wide.s32 	%rd101, %r887, 4;
	add.s64 	%rd102, %rd8, %rd101;
	st.global.u32 	[%rd102], %r1798;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_56:
	or.b32  	%r888, %r111, %r126;
	setp.gt.s32 	%p40, %r888, -1;
	and.pred  	%p42, %p33, %p40;
	setp.le.s32 	%p43, %r1792, %r729;
	and.pred  	%p2, %p43, %p42;
	add.f32 	%f4, %f1, 0f3FC00000;
	setp.geu.f32 	%p44, %f4, 0f40000000;
	@%p44 bra 	$L__BB0_61;

	@%p2 bra 	$L__BB0_59;
	bra.uni 	$L__BB0_58;

$L__BB0_59:
	add.s32 	%r891, %r110, %r126;
	mul.wide.s32 	%rd103, %r891, 4;
	add.s64 	%rd104, %rd7, %rd103;
	ld.global.f32 	%f79, [%rd104];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f79;
  mov.b32 %r1800, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_60;

$L__BB0_58:
	mov.f32 	%f78, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f78;
  cvt.rn.f16.f32 high, %f78;
  mov.b32 %r1800, {low,high};}

	// end inline asm

$L__BB0_60:
	add.s32 	%r892, %r1795, %r105;
	mul.wide.s32 	%rd105, %r892, 4;
	add.s64 	%rd106, %rd8, %rd105;
	st.global.u32 	[%rd106], %r1800;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_61:
	add.f32 	%f5, %f2, 0f3F800000;
	setp.geu.f32 	%p45, %f5, 0f40000000;
	@%p45 bra 	$L__BB0_66;

	@%p2 bra 	$L__BB0_64;
	bra.uni 	$L__BB0_63;

$L__BB0_64:
	add.s32 	%r895, %r112, %r126;
	mul.wide.s32 	%rd107, %r895, 4;
	add.s64 	%rd108, %rd7, %rd107;
	ld.global.f32 	%f82, [%rd108];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f82;
  mov.b32 %r1802, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_65;

$L__BB0_63:
	mov.f32 	%f81, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f81;
  cvt.rn.f16.f32 high, %f81;
  mov.b32 %r1802, {low,high};}

	// end inline asm

$L__BB0_65:
	add.s32 	%r896, %r1795, %r105;
	mul.wide.s32 	%rd109, %r896, 4;
	add.s64 	%rd110, %rd8, %rd109;
	st.global.u32 	[%rd110], %r1802;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_66:
	add.f32 	%f6, %f2, 0f3FC00000;
	setp.geu.f32 	%p46, %f6, 0f40000000;
	@%p46 bra 	$L__BB0_71;

	@%p2 bra 	$L__BB0_69;
	bra.uni 	$L__BB0_68;

$L__BB0_69:
	add.s32 	%r899, %r113, %r126;
	mul.wide.s32 	%rd111, %r899, 4;
	add.s64 	%rd112, %rd7, %rd111;
	ld.global.f32 	%f85, [%rd112];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f85;
  mov.b32 %r1804, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_70;

$L__BB0_68:
	mov.f32 	%f84, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f84;
  cvt.rn.f16.f32 high, %f84;
  mov.b32 %r1804, {low,high};}

	// end inline asm

$L__BB0_70:
	add.s32 	%r900, %r1795, %r105;
	mul.wide.s32 	%rd113, %r900, 4;
	add.s64 	%rd114, %rd8, %rd113;
	st.global.u32 	[%rd114], %r1804;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_71:
	or.b32  	%r901, %r1792, %r126;
	setp.gt.s32 	%p47, %r901, -1;
	and.pred  	%p49, %p33, %p47;
	setp.lt.s32 	%p50, %r1792, %r729;
	and.pred  	%p3, %p50, %p49;
	add.f32 	%f7, %f1, 0f3F000000;
	setp.geu.f32 	%p51, %f7, 0f40000000;
	@%p51 bra 	$L__BB0_76;

	@%p3 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_73;

$L__BB0_74:
	add.s32 	%r904, %r116, %r126;
	mul.wide.s32 	%rd115, %r904, 4;
	add.s64 	%rd116, %rd7, %rd115;
	ld.global.f32 	%f88, [%rd116];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f88;
  mov.b32 %r1806, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_75;

$L__BB0_73:
	mov.f32 	%f87, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f87;
  cvt.rn.f16.f32 high, %f87;
  mov.b32 %r1806, {low,high};}

	// end inline asm

$L__BB0_75:
	add.s32 	%r905, %r1795, %r105;
	mul.wide.s32 	%rd117, %r905, 4;
	add.s64 	%rd118, %rd8, %rd117;
	st.global.u32 	[%rd118], %r1806;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_76:
	add.f32 	%f89, %f2, 0f00000000;
	setp.geu.f32 	%p52, %f89, 0f40000000;
	@%p52 bra 	$L__BB0_81;

	@%p3 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_78;

$L__BB0_79:
	add.s32 	%r908, %r114, %r126;
	mul.wide.s32 	%rd119, %r908, 4;
	add.s64 	%rd120, %rd7, %rd119;
	ld.global.f32 	%f92, [%rd120];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f92;
  mov.b32 %r1808, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_80;

$L__BB0_78:
	mov.f32 	%f91, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f91;
  cvt.rn.f16.f32 high, %f91;
  mov.b32 %r1808, {low,high};}

	// end inline asm

$L__BB0_80:
	add.s32 	%r909, %r1795, %r105;
	mul.wide.s32 	%rd121, %r909, 4;
	add.s64 	%rd122, %rd8, %rd121;
	st.global.u32 	[%rd122], %r1808;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_81:
	add.f32 	%f8, %f2, 0f3F000000;
	setp.geu.f32 	%p53, %f8, 0f40000000;
	@%p53 bra 	$L__BB0_86;

	@%p3 bra 	$L__BB0_84;
	bra.uni 	$L__BB0_83;

$L__BB0_84:
	add.s32 	%r912, %r115, %r126;
	mul.wide.s32 	%rd123, %r912, 4;
	add.s64 	%rd124, %rd7, %rd123;
	ld.global.f32 	%f95, [%rd124];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f95;
  mov.b32 %r1810, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_85;

$L__BB0_83:
	mov.f32 	%f94, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f94;
  cvt.rn.f16.f32 high, %f94;
  mov.b32 %r1810, {low,high};}

	// end inline asm

$L__BB0_85:
	add.s32 	%r913, %r1795, %r105;
	mul.wide.s32 	%rd125, %r913, 4;
	add.s64 	%rd126, %rd8, %rd125;
	st.global.u32 	[%rd126], %r1810;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_86:
	or.b32  	%r914, %r118, %r126;
	setp.gt.s32 	%p54, %r914, -1;
	and.pred  	%p56, %p33, %p54;
	setp.lt.s32 	%p57, %r118, %r729;
	and.pred  	%p4, %p57, %p56;
	@%p51 bra 	$L__BB0_91;

	@%p4 bra 	$L__BB0_89;
	bra.uni 	$L__BB0_88;

$L__BB0_89:
	add.s32 	%r917, %r117, %r126;
	mul.wide.s32 	%rd127, %r917, 4;
	add.s64 	%rd128, %rd7, %rd127;
	ld.global.f32 	%f98, [%rd128];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f98;
  mov.b32 %r1812, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_90;

$L__BB0_88:
	mov.f32 	%f97, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f97;
  cvt.rn.f16.f32 high, %f97;
  mov.b32 %r1812, {low,high};}

	// end inline asm

$L__BB0_90:
	add.s32 	%r918, %r1795, %r105;
	mul.wide.s32 	%rd129, %r918, 4;
	add.s64 	%rd130, %rd8, %rd129;
	st.global.u32 	[%rd130], %r1812;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_91:
	@%p45 bra 	$L__BB0_96;

	@%p4 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_93;

$L__BB0_94:
	add.s32 	%r921, %r119, %r126;
	mul.wide.s32 	%rd131, %r921, 4;
	add.s64 	%rd132, %rd7, %rd131;
	ld.global.f32 	%f101, [%rd132];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f101;
  mov.b32 %r1814, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_95;

$L__BB0_93:
	mov.f32 	%f100, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f100;
  cvt.rn.f16.f32 high, %f100;
  mov.b32 %r1814, {low,high};}

	// end inline asm

$L__BB0_95:
	add.s32 	%r922, %r1795, %r105;
	mul.wide.s32 	%rd133, %r922, 4;
	add.s64 	%rd134, %rd8, %rd133;
	st.global.u32 	[%rd134], %r1814;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_96:
	@%p53 bra 	$L__BB0_101;

	@%p4 bra 	$L__BB0_99;
	bra.uni 	$L__BB0_98;

$L__BB0_99:
	add.s32 	%r925, %r120, %r126;
	mul.wide.s32 	%rd135, %r925, 4;
	add.s64 	%rd136, %rd7, %rd135;
	ld.global.f32 	%f104, [%rd136];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f104;
  mov.b32 %r1816, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_100;

$L__BB0_98:
	mov.f32 	%f103, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f103;
  cvt.rn.f16.f32 high, %f103;
  mov.b32 %r1816, {low,high};}

	// end inline asm

$L__BB0_100:
	add.s32 	%r926, %r1795, %r105;
	mul.wide.s32 	%rd137, %r926, 4;
	add.s64 	%rd138, %rd8, %rd137;
	st.global.u32 	[%rd138], %r1816;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_101:
	or.b32  	%r927, %r122, %r126;
	setp.gt.s32 	%p61, %r927, -1;
	and.pred  	%p63, %p33, %p61;
	setp.lt.s32 	%p64, %r122, %r729;
	and.pred  	%p5, %p64, %p63;
	@%p44 bra 	$L__BB0_106;

	@%p5 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_103;

$L__BB0_104:
	add.s32 	%r930, %r121, %r126;
	mul.wide.s32 	%rd139, %r930, 4;
	add.s64 	%rd140, %rd7, %rd139;
	ld.global.f32 	%f107, [%rd140];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f107;
  mov.b32 %r1818, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_105;

$L__BB0_103:
	mov.f32 	%f106, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f106;
  cvt.rn.f16.f32 high, %f106;
  mov.b32 %r1818, {low,high};}

	// end inline asm

$L__BB0_105:
	add.s32 	%r931, %r1795, %r105;
	mul.wide.s32 	%rd141, %r931, 4;
	add.s64 	%rd142, %rd8, %rd141;
	st.global.u32 	[%rd142], %r1818;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_106:
	@%p38 bra 	$L__BB0_111;

	@%p5 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_108;

$L__BB0_109:
	add.s32 	%r934, %r123, %r126;
	mul.wide.s32 	%rd143, %r934, 4;
	add.s64 	%rd144, %rd7, %rd143;
	ld.global.f32 	%f110, [%rd144];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f110;
  mov.b32 %r1820, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_110;

$L__BB0_108:
	mov.f32 	%f109, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f109;
  cvt.rn.f16.f32 high, %f109;
  mov.b32 %r1820, {low,high};}

	// end inline asm

$L__BB0_110:
	add.s32 	%r935, %r1795, %r105;
	mul.wide.s32 	%rd145, %r935, 4;
	add.s64 	%rd146, %rd8, %rd145;
	st.global.u32 	[%rd146], %r1820;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_111:
	@%p46 bra 	$L__BB0_116;

	@%p5 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_113;

$L__BB0_114:
	add.s32 	%r938, %r124, %r126;
	mul.wide.s32 	%rd147, %r938, 4;
	add.s64 	%rd148, %rd7, %rd147;
	ld.global.f32 	%f113, [%rd148];
	// begin inline asm
	{.reg .f16 low;
  cvt.rn.f16.f32 low, %f113;
  mov.b32 %r1822, {low,low};}

	// end inline asm
	bra.uni 	$L__BB0_115;

$L__BB0_113:
	mov.f32 	%f112, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f112;
  cvt.rn.f16.f32 high, %f112;
  mov.b32 %r1822, {low,high};}

	// end inline asm

$L__BB0_115:
	add.s32 	%r939, %r1795, %r105;
	mul.wide.s32 	%rd149, %r939, 4;
	add.s64 	%rd150, %rd8, %rd149;
	st.global.u32 	[%rd150], %r1822;
	add.s32 	%r1795, %r1795, 1;

$L__BB0_116:
	add.s64 	%rd540, %rd540, 4;
	mov.u64 	%rd151, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;
	add.s64 	%rd152, %rd151, 24;
	setp.ne.s64 	%p68, %rd540, %rd152;
	@%p68 bra 	$L__BB0_41;

$L__BB0_117:
	add.s32 	%r1792, %r1792, %r29;
	setp.lt.s32 	%p69, %r1792, %r729;
	@%p69 bra 	$L__BB0_39;

$L__BB0_118:
	add.s32 	%r1791, %r1791, %r743;
	setp.lt.s32 	%p70, %r1791, %r728;
	@%p70 bra 	$L__BB0_37;

$L__BB0_119:
	setp.eq.s32 	%p71, %r732, 1;
	ld.param.u64 	%rd153, [%rd1+112];
	cvta.to.global.u64 	%rd11, %rd153;
	ld.param.u64 	%rd154, [%rd1+80];
	cvta.to.global.u64 	%rd12, %rd154;
	@%p71 bra 	$L__BB0_137;
	bra.uni 	$L__BB0_120;

$L__BB0_137:
	@%p19 bra 	$L__BB0_266;

	shl.b32 	%r229, %r55, 1;
	shr.u32 	%r985, %r733, 31;
	add.s32 	%r986, %r733, %r985;
	shr.u32 	%r987, %r986, 1;
	and.b32  	%r230, %r987, 1;
	mov.u64 	%rd174, _ZN44_INTERNAL_3aa255b4_13_kernel_ptx_cu_c13d142d7diamond4AllIE;

$L__BB0_139:
	setp.ge.s32 	%p81, %r229, %r729;
	@%p81 bra 	$L__BB0_265;

	mov.u32 	%r1830, %r229;

$L__BB0_141:
	setp.ne.s32 	%p82, %r27, 0;
	@%p82 bra 	$L__BB0_264;

	shr.u32 	%r989, %r1830, 31;
	add.s32 	%r990, %r1830, %r989;
	shr.s32 	%r991, %r990, 1;
	mad.lo.s32 	%r992, %r991, %r728, %r1824;
	shl.b32 	%r234, %r992, 5;
	add.s32 	%r235, %r1830, -2;
	mul.lo.s32 	%r236, %r235, %r728;
	add.s32 	%r993, %r729, %r235;
	mul.lo.s32 	%r237, %r993, %r728;
	add.s32 	%r238, %r236, %r728;
	add.s32 	%r239, %r1830, -1;
	add.s32 	%r994, %r729, %r239;
	mul.lo.s32 	%r240, %r994, %r728;
	add.s32 	%r995, %r729, %r1830;
	mul.lo.s32 	%r241, %r995, %r728;
	mul.lo.s32 	%r242, %r1830, %r728;
	add.s32 	%r243, %r242, %r728;
	add.s32 	%r244, %r1830, 1;
	add.s32 	%r996, %r729, %r244;
	mul.lo.s32 	%r245, %r996, %r728;
	add.s32 	%r246, %r243, %r728;
	add.s32 	%r247, %r1830, 2;
	add.s32 	%r997, %r729, %r247;
	mul.lo.s32 	%r248, %r997, %r728;
	mov.u32 	%r1834, 0;
	mov.u64 	%rd541, 24;
	mov.u64 	%rd542, %rd174;

$L__BB0_143:
	ld.global.nc.u32 	%r998, [%rd542];
	cvt.rn.f64.s32 	%fd2, %r998;
	add.f64 	%fd4, %fd2, 0d3FE0000000000000;
	add.s32 	%r250, %r998, %r1824;
	setp.lt.s32 	%p83, %r250, %r728;
	or.b32  	%r999, %r235, %r250;
	setp.gt.s32 	%p84, %r999, -1;
	and.pred  	%p85, %p83, %p84;
	setp.lt.s32 	%p86, %r235, %r729;
	and.pred  	%p6, %p86, %p85;
	cvt.rn.f32.f64 	%f130, %fd4;
	add.f32 	%f131, %f130, 0f3E800000;
	abs.f32 	%f9, %f131;
	add.f32 	%f132, %f9, 0f40200000;
	setp.geu.f32 	%p87, %f132, 0f40000000;
	@%p87 bra 	$L__BB0_155;

	@%p6 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_145;

$L__BB0_146:
	setp.eq.s32 	%p88, %r230, 0;
	add.s32 	%r1001, %r236, %r250;
	shl.b32 	%r1002, %r1001, 1;
	mul.wide.s32 	%rd175, %r1002, 4;
	add.s64 	%rd176, %rd11, %rd175;
	ld.global.f32 	%f10, [%rd176];
	@%p88 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_147;

$L__BB0_148:
	mov.f32 	%f138, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f10;
  cvt.rn.f16.f32 high, %f138;
  mov.b32 %r1832, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_145:
	mov.f32 	%f134, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f134;
  cvt.rn.f16.f32 high, %f134;
  mov.b32 %r1832, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_149;

$L__BB0_147:
	mov.f32 	%f135, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f135;
  cvt.rn.f16.f32 high, %f10;
  mov.b32 %r1832, {low,high};}

	// end inline asm

$L__BB0_149:
	add.s32 	%r255, %r1834, %r234;
	mul.wide.s32 	%rd177, %r255, 4;
	add.s64 	%rd178, %rd12, %rd177;
	st.global.u32 	[%rd178], %r1832;
	@%p6 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_150;

$L__BB0_151:
	setp.eq.s32 	%p89, %r230, 0;
	add.s32 	%r1006, %r237, %r250;
	shl.b32 	%r1007, %r1006, 1;
	mul.wide.s32 	%rd179, %r1007, 4;
	add.s64 	%rd180, %rd11, %rd179;
	ld.global.f32 	%f11, [%rd180];
	@%p89 bra 	$L__BB0_153;
	bra.uni 	$L__BB0_152;

$L__BB0_153:
	mov.f32 	%f144, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f11;
  cvt.rn.f16.f32 high, %f144;
  mov.b32 %r1833, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_154;

$L__BB0_150:
	mov.f32 	%f140, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f140;
  cvt.rn.f16.f32 high, %f140;
  mov.b32 %r1833, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_154;

$L__BB0_152:
	mov.f32 	%f141, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f141;
  cvt.rn.f16.f32 high, %f11;
  mov.b32 %r1833, {low,high};}

	// end inline asm

$L__BB0_154:
	add.s32 	%r1010, %r255, 1;
	mul.wide.s32 	%rd181, %r1010, 4;
	add.s64 	%rd182, %rd12, %rd181;
	st.global.u32 	[%rd182], %r1833;
	add.s32 	%r1834, %r1834, 2;

$L__BB0_155:
	cvt.rn.f32.f64 	%f145, %fd2;
	add.f32 	%f146, %f145, 0f3E800000;
	abs.f32 	%f12, %f146;
	add.f32 	%f13, %f12, 0f40000000;
	setp.geu.f32 	%p90, %f13, 0f40000000;
	@%p90 bra 	$L__BB0_167;

	@%p6 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_157;

$L__BB0_158:
	setp.eq.s32 	%p91, %r230, 0;
	add.s32 	%r1012, %r236, %r250;
	shl.b32 	%r1013, %r1012, 1;
	or.b32  	%r1014, %r1013, 1;
	mul.wide.s32 	%rd183, %r1014, 4;
	add.s64 	%rd184, %rd11, %rd183;
	ld.global.f32 	%f14, [%rd184];
	@%p91 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_159;

$L__BB0_160:
	mov.f32 	%f152, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f14;
  cvt.rn.f16.f32 high, %f152;
  mov.b32 %r1835, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_161;

$L__BB0_157:
	mov.f32 	%f148, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f148;
  cvt.rn.f16.f32 high, %f148;
  mov.b32 %r1835, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_161;

$L__BB0_159:
	mov.f32 	%f149, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f149;
  cvt.rn.f16.f32 high, %f14;
  mov.b32 %r1835, {low,high};}

	// end inline asm

$L__BB0_161:
	add.s32 	%r266, %r1834, %r234;
	mul.wide.s32 	%rd185, %r266, 4;
	add.s64 	%rd186, %rd12, %rd185;
	st.global.u32 	[%rd186], %r1835;
	@%p6 bra 	$L__BB0_163;
	bra.uni 	$L__BB0_162;

$L__BB0_163:
	setp.eq.s32 	%p92, %r230, 0;
	add.s32 	%r1018, %r237, %r250;
	shl.b32 	%r1019, %r1018, 1;
	or.b32  	%r1020, %r1019, 1;
	mul.wide.s32 	%rd187, %r1020, 4;
	add.s64 	%rd188, %rd11, %rd187;
	ld.global.f32 	%f15, [%rd188];
	@%p92 bra 	$L__BB0_165;
	bra.uni 	$L__BB0_164;

$L__BB0_165:
	mov.f32 	%f158, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f15;
  cvt.rn.f16.f32 high, %f158;
  mov.b32 %r1836, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_166;

$L__BB0_162:
	mov.f32 	%f154, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f154;
  cvt.rn.f16.f32 high, %f154;
  mov.b32 %r1836, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_166;

$L__BB0_164:
	mov.f32 	%f155, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f155;
  cvt.rn.f16.f32 high, %f15;
  mov.b32 %r1836, {low,high};}

	// end inline asm

$L__BB0_166:
	add.s32 	%r1023, %r266, 1;
	mul.wide.s32 	%rd189, %r1023, 4;
	add.s64 	%rd190, %rd12, %rd189;
	st.global.u32 	[%rd190], %r1836;
	add.s32 	%r1834, %r1834, 2;

$L__BB0_167:
	or.b32  	%r1024, %r239, %r250;
	setp.gt.s32 	%p93, %r1024, -1;
	and.pred  	%p95, %p83, %p93;
	setp.le.s32 	%p96, %r1830, %r729;
	and.pred  	%p7, %p96, %p95;
	add.f32 	%f16, %f9, 0f3FC00000;
	setp.geu.f32 	%p97, %f16, 0f40000000;
	@%p97 bra 	$L__BB0_179;

	@%p7 bra 	$L__BB0_170;
	bra.uni 	$L__BB0_169;

$L__BB0_170:
	setp.eq.s32 	%p98, %r230, 0;
	add.s32 	%r1026, %r238, %r250;
	shl.b32 	%r1027, %r1026, 1;
	mul.wide.s32 	%rd191, %r1027, 4;
	add.s64 	%rd192, %rd11, %rd191;
	ld.global.f32 	%f17, [%rd192];
	@%p98 bra 	$L__BB0_172;
	bra.uni 	$L__BB0_171;

$L__BB0_172:
	mov.f32 	%f164, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f17;
  cvt.rn.f16.f32 high, %f164;
  mov.b32 %r1838, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_173;

$L__BB0_169:
	mov.f32 	%f160, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f160;
  cvt.rn.f16.f32 high, %f160;
  mov.b32 %r1838, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_173;

$L__BB0_171:
	mov.f32 	%f161, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f161;
  cvt.rn.f16.f32 high, %f17;
  mov.b32 %r1838, {low,high};}

	// end inline asm

$L__BB0_173:
	add.s32 	%r277, %r1834, %r234;
	mul.wide.s32 	%rd193, %r277, 4;
	add.s64 	%rd194, %rd12, %rd193;
	st.global.u32 	[%rd194], %r1838;
	@%p7 bra 	$L__BB0_175;
	bra.uni 	$L__BB0_174;

$L__BB0_175:
	setp.eq.s32 	%p99, %r230, 0;
	add.s32 	%r1031, %r240, %r250;
	shl.b32 	%r1032, %r1031, 1;
	mul.wide.s32 	%rd195, %r1032, 4;
	add.s64 	%rd196, %rd11, %rd195;
	ld.global.f32 	%f18, [%rd196];
	@%p99 bra 	$L__BB0_177;
	bra.uni 	$L__BB0_176;

$L__BB0_177:
	mov.f32 	%f170, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f18;
  cvt.rn.f16.f32 high, %f170;
  mov.b32 %r1839, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_178;

$L__BB0_174:
	mov.f32 	%f166, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f166;
  cvt.rn.f16.f32 high, %f166;
  mov.b32 %r1839, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_178;

$L__BB0_176:
	mov.f32 	%f167, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f167;
  cvt.rn.f16.f32 high, %f18;
  mov.b32 %r1839, {low,high};}

	// end inline asm

$L__BB0_178:
	add.s32 	%r1035, %r277, 1;
	mul.wide.s32 	%rd197, %r1035, 4;
	add.s64 	%rd198, %rd12, %rd197;
	st.global.u32 	[%rd198], %r1839;
	add.s32 	%r1834, %r1834, 2;

$L__BB0_179:
	add.f32 	%f19, %f12, 0f3F800000;
	setp.geu.f32 	%p100, %f19, 0f40000000;
	@%p100 bra 	$L__BB0_191;

	@%p7 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_181;

$L__BB0_182:
	setp.eq.s32 	%p101, %r230, 0;
	add.s32 	%r1037, %r238, %r250;
	shl.b32 	%r1038, %r1037, 1;
	or.b32  	%r1039, %r1038, 1;
	mul.wide.s32 	%rd199, %r1039, 4;
	add.s64 	%rd200, %rd11, %rd199;
	ld.global.f32 	%f20, [%rd200];
	@%p101 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;

$L__BB0_184:
	mov.f32 	%f176, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f20;
  cvt.rn.f16.f32 high, %f176;
  mov.b32 %r1841, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_185;

$L__BB0_181:
	mov.f32 	%f172, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f172;
  cvt.rn.f16.f32 high, %f172;
  mov.b32 %r1841, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_185;

$L__BB0_183:
	mov.f32 	%f173, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f173;
  cvt.rn.f16.f32 high, %f20;
  mov.b32 %r1841, {low,high};}

	// end inline asm

$L__BB0_185:
	add.s32 	%r288, %r1834, %r234;
	mul.wide.s32 	%rd201, %r288, 4;
	add.s64 	%rd202, %rd12, %rd201;
	st.global.u32 	[%rd202], %r1841;
	@%p7 bra 	$L__BB0_187;
	bra.uni 	$L__BB0_186;

$L__BB0_187:
	setp.eq.s32 	%p102, %r230, 0;
	add.s32 	%r1043, %r240, %r250;
	shl.b32 	%r1044, %r1043, 1;
	or.b32  	%r1045, %r1044, 1;
	mul.wide.s32 	%rd203, %r1045, 4;
	add.s64 	%rd204, %rd11, %rd203;
	ld.global.f32 	%f21, [%rd204];
	@%p102 bra 	$L__BB0_189;
	bra.uni 	$L__BB0_188;

$L__BB0_189:
	mov.f32 	%f182, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f21;
  cvt.rn.f16.f32 high, %f182;
  mov.b32 %r1842, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_190;

$L__BB0_186:
	mov.f32 	%f178, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f178;
  cvt.rn.f16.f32 high, %f178;
  mov.b32 %r1842, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_190;

$L__BB0_188:
	mov.f32 	%f179, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f179;
  cvt.rn.f16.f32 high, %f21;
  mov.b32 %r1842, {low,high};}

	// end inline asm

$L__BB0_190:
	add.s32 	%r1048, %r288, 1;
	mul.wide.s32 	%rd205, %r1048, 4;
	add.s64 	%rd206, %rd12, %rd205;
	st.global.u32 	[%rd206], %r1842;
	add.s32 	%r1834, %r1834, 2;

$L__BB0_191:
	or.b32  	%r1049, %r1830, %r250;
	setp.gt.s32 	%p103, %r1049, -1;
	and.pred  	%p105, %p83, %p103;
	setp.lt.s32 	%p106, %r1830, %r729;
	and.pred  	%p8, %p106, %p105;
	add.f32 	%f22, %f9, 0f3F000000;
	setp.geu.f32 	%p107, %f22, 0f40000000;
	@%p107 bra 	$L__BB0_203;

	@%p8 bra 	$L__BB0_194;
	bra.uni 	$L__BB0_193;

$L__BB0_194:
	setp.eq.s32 	%p108, %r230, 0;
	add.s32 	%r1051, %r242, %r250;
	shl.b32 	%r1052, %r1051, 1;
	mul.wide.s32 	%rd207, %r1052, 4;
	add.s64 	%rd208, %rd11, %rd207;
	ld.global.f32 	%f23, [%rd208];
	@%p108 bra 	$L__BB0_196;
	bra.uni 	$L__BB0_195;

$L__BB0_196:
	mov.f32 	%f188, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f23;
  cvt.rn.f16.f32 high, %f188;
  mov.b32 %r1844, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_197;

$L__BB0_193:
	mov.f32 	%f184, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f184;
  cvt.rn.f16.f32 high, %f184;
  mov.b32 %r1844, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_197;

$L__BB0_195:
	mov.f32 	%f185, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f185;
  cvt.rn.f16.f32 high, %f23;
  mov.b32 %r1844, {low,high};}

	// end inline asm

$L__BB0_197:
	add.s32 	%r299, %r1834, %r234;
	mul.wide.s32 	%rd209, %r299, 4;
	add.s64 	%rd210, %rd12, %rd209;
	st.global.u32 	[%rd210], %r1844;
	@%p8 bra 	$L__BB0_199;
	bra.uni 	$L__BB0_198;

$L__BB0_199:
	setp.eq.s32 	%p109, %r230, 0;
	add.s32 	%r1056, %r241, %r250;
	shl.b32 	%r1057, %r1056, 1;
	mul.wide.s32 	%rd211, %r1057, 4;
	add.s64 	%rd212, %rd11, %rd211;
	ld.global.f32 	%f24, [%rd212];
	@%p109 bra 	$L__BB0_201;
	bra.uni 	$L__BB0_200;

$L__BB0_201:
	mov.f32 	%f194, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f24;
  cvt.rn.f16.f32 high, %f194;
  mov.b32 %r1845, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_202;

$L__BB0_198:
	mov.f32 	%f190, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f190;
  cvt.rn.f16.f32 high, %f190;
  mov.b32 %r1845, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_202;

$L__BB0_200:
	mov.f32 	%f191, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f191;
  cvt.rn.f16.f32 high, %f24;
  mov.b32 %r1845, {low,high};}

	// end inline asm

$L__BB0_202:
	add.s32 	%r1060, %r299, 1;
	mul.wide.s32 	%rd213, %r1060, 4;
	add.s64 	%rd214, %rd12, %rd213;
	st.global.u32 	[%rd214], %r1845;
	add.s32 	%r1834, %r1834, 2;

$L__BB0_203:
	add.f32 	%f195, %f12, 0f00000000;
	setp.geu.f32 	%p110, %f195, 0f40000000;
	@%p110 bra 	$L__BB0_215;

	@%p8 bra 	$L__BB0_206;
	bra.uni 	$L__BB0_205;

$L__BB0_206:
	setp.eq.s32 	%p111, %r230, 0;
	add.s32 	%r1062, %r242, %r250;
	shl.b32 	%r1063, %r1062, 1;
	or.b32  	%r1064, %r1063, 1;
	mul.wide.s32 	%rd215, %r1064, 4;
	add.s64 	%rd216, %rd11, %rd215;
	ld.global.f32 	%f25, [%rd216];
	@%p111 bra 	$L__BB0_208;
	bra.uni 	$L__BB0_207;

$L__BB0_208:
	mov.f32 	%f201, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f25;
  cvt.rn.f16.f32 high, %f201;
  mov.b32 %r1847, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_209;

$L__BB0_205:
	mov.f32 	%f197, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f197;
  cvt.rn.f16.f32 high, %f197;
  mov.b32 %r1847, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_209;

$L__BB0_207:
	mov.f32 	%f198, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f198;
  cvt.rn.f16.f32 high, %f25;
  mov.b32 %r1847, {low,high};}

	// end inline asm

$L__BB0_209:
	add.s32 	%r310, %r1834, %r234;
	mul.wide.s32 	%rd217, %r310, 4;
	add.s64 	%rd218, %rd12, %rd217;
	st.global.u32 	[%rd218], %r1847;
	@%p8 bra 	$L__BB0_211;
	bra.uni 	$L__BB0_210;

$L__BB0_211:
	setp.eq.s32 	%p112, %r230, 0;
	add.s32 	%r1068, %r241, %r250;
	shl.b32 	%r1069, %r1068, 1;
	or.b32  	%r1070, %r1069, 1;
	mul.wide.s32 	%rd219, %r1070, 4;
	add.s64 	%rd220, %rd11, %rd219;
	ld.global.f32 	%f26, [%rd220];
	@%p112 bra 	$L__BB0_213;
	bra.uni 	$L__BB0_212;

$L__BB0_213:
	mov.f32 	%f207, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f26;
  cvt.rn.f16.f32 high, %f207;
  mov.b32 %r1848, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_214;

$L__BB0_210:
	mov.f32 	%f203, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f203;
  cvt.rn.f16.f32 high, %f203;
  mov.b32 %r1848, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_214;

$L__BB0_212:
	mov.f32 	%f204, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f204;
  cvt.rn.f16.f32 high, %f26;
  mov.b32 %r1848, {low,high};}

	// end inline asm

$L__BB0_214:
	add.s32 	%r1073, %r310, 1;
	mul.wide.s32 	%rd221, %r1073, 4;
	add.s64 	%rd222, %rd12, %rd221;
	st.global.u32 	[%rd222], %r1848;
	add.s32 	%r1834, %r1834, 2;

$L__BB0_215:
	or.b32  	%r1074, %r244, %r250;
	setp.gt.s32 	%p113, %r1074, -1;
	and.pred  	%p115, %p83, %p113;
	setp.lt.s32 	%p116, %r244, %r729;
	and.pred  	%p9, %p116, %p115;
	@%p107 bra 	$L__BB0_227;

	@%p9 bra 	$L__BB0_218;
	bra.uni 	$L__BB0_217;

$L__BB0_218:
	setp.eq.s32 	%p118, %r230, 0;
	add.s32 	%r1076, %r243, %r250;
	shl.b32 	%r1077, %r1076, 1;
	mul.wide.s32 	%rd223, %r1077, 4;
	add.s64 	%rd224, %rd11, %rd223;
	ld.global.f32 	%f27, [%rd224];
	@%p118 bra 	$L__BB0_220;
	bra.uni 	$L__BB0_219;

$L__BB0_220:
	mov.f32 	%f213, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f27;
  cvt.rn.f16.f32 high, %f213;
  mov.b32 %r1850, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_221;

$L__BB0_217:
	mov.f32 	%f209, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f209;
  cvt.rn.f16.f32 high, %f209;
  mov.b32 %r1850, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_221;

$L__BB0_219:
	mov.f32 	%f210, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f210;
  cvt.rn.f16.f32 high, %f27;
  mov.b32 %r1850, {low,high};}

	// end inline asm

$L__BB0_221:
	add.s32 	%r321, %r1834, %r234;
	mul.wide.s32 	%rd225, %r321, 4;
	add.s64 	%rd226, %rd12, %rd225;
	st.global.u32 	[%rd226], %r1850;
	@%p9 bra 	$L__BB0_223;
	bra.uni 	$L__BB0_222;

$L__BB0_223:
	setp.eq.s32 	%p119, %r230, 0;
	add.s32 	%r1081, %r245, %r250;
	shl.b32 	%r1082, %r1081, 1;
	mul.wide.s32 	%rd227, %r1082, 4;
	add.s64 	%rd228, %rd11, %rd227;
	ld.global.f32 	%f28, [%rd228];
	@%p119 bra 	$L__BB0_225;
	bra.uni 	$L__BB0_224;

$L__BB0_225:
	mov.f32 	%f219, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f28;
  cvt.rn.f16.f32 high, %f219;
  mov.b32 %r1851, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_226;

$L__BB0_222:
	mov.f32 	%f215, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f215;
  cvt.rn.f16.f32 high, %f215;
  mov.b32 %r1851, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_226;

$L__BB0_224:
	mov.f32 	%f216, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f216;
  cvt.rn.f16.f32 high, %f28;
  mov.b32 %r1851, {low,high};}

	// end inline asm

$L__BB0_226:
	add.s32 	%r1085, %r321, 1;
	mul.wide.s32 	%rd229, %r1085, 4;
	add.s64 	%rd230, %rd12, %rd229;
	st.global.u32 	[%rd230], %r1851;
	add.s32 	%r1834, %r1834, 2;

$L__BB0_227:
	@%p100 bra 	$L__BB0_239;

	@%p9 bra 	$L__BB0_230;
	bra.uni 	$L__BB0_229;

$L__BB0_230:
	setp.eq.s32 	%p121, %r230, 0;
	add.s32 	%r1087, %r243, %r250;
	shl.b32 	%r1088, %r1087, 1;
	or.b32  	%r1089, %r1088, 1;
	mul.wide.s32 	%rd231, %r1089, 4;
	add.s64 	%rd232, %rd11, %rd231;
	ld.global.f32 	%f29, [%rd232];
	@%p121 bra 	$L__BB0_232;
	bra.uni 	$L__BB0_231;

$L__BB0_232:
	mov.f32 	%f225, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f29;
  cvt.rn.f16.f32 high, %f225;
  mov.b32 %r1853, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_233;

$L__BB0_229:
	mov.f32 	%f221, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f221;
  cvt.rn.f16.f32 high, %f221;
  mov.b32 %r1853, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_233;

$L__BB0_231:
	mov.f32 	%f222, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f222;
  cvt.rn.f16.f32 high, %f29;
  mov.b32 %r1853, {low,high};}

	// end inline asm

$L__BB0_233:
	add.s32 	%r332, %r1834, %r234;
	mul.wide.s32 	%rd233, %r332, 4;
	add.s64 	%rd234, %rd12, %rd233;
	st.global.u32 	[%rd234], %r1853;
	@%p9 bra 	$L__BB0_235;
	bra.uni 	$L__BB0_234;

$L__BB0_235:
	setp.eq.s32 	%p122, %r230, 0;
	add.s32 	%r1093, %r245, %r250;
	shl.b32 	%r1094, %r1093, 1;
	or.b32  	%r1095, %r1094, 1;
	mul.wide.s32 	%rd235, %r1095, 4;
	add.s64 	%rd236, %rd11, %rd235;
	ld.global.f32 	%f30, [%rd236];
	@%p122 bra 	$L__BB0_237;
	bra.uni 	$L__BB0_236;

$L__BB0_237:
	mov.f32 	%f231, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f30;
  cvt.rn.f16.f32 high, %f231;
  mov.b32 %r1854, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_238;

$L__BB0_234:
	mov.f32 	%f227, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f227;
  cvt.rn.f16.f32 high, %f227;
  mov.b32 %r1854, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_238;

$L__BB0_236:
	mov.f32 	%f228, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f228;
  cvt.rn.f16.f32 high, %f30;
  mov.b32 %r1854, {low,high};}

	// end inline asm

$L__BB0_238:
	add.s32 	%r1098, %r332, 1;
	mul.wide.s32 	%rd237, %r1098, 4;
	add.s64 	%rd238, %rd12, %rd237;
	st.global.u32 	[%rd238], %r1854;
	add.s32 	%r1834, %r1834, 2;

$L__BB0_239:
	or.b32  	%r1099, %r247, %r250;
	setp.gt.s32 	%p123, %r1099, -1;
	and.pred  	%p125, %p83, %p123;
	setp.lt.s32 	%p126, %r247, %r729;
	and.pred  	%p10, %p126, %p125;
	@%p97 bra 	$L__BB0_251;

	@%p10 bra 	$L__BB0_242;
	bra.uni 	$L__BB0_241;

$L__BB0_242:
	setp.eq.s32 	%p128, %r230, 0;
	add.s32 	%r1101, %r246, %r250;
	shl.b32 	%r1102, %r1101, 1;
	mul.wide.s32 	%rd239, %r1102, 4;
	add.s64 	%rd240, %rd11, %rd239;
	ld.global.f32 	%f31, [%rd240];
	@%p128 bra 	$L__BB0_244;
	bra.uni 	$L__BB0_243;

$L__BB0_244:
	mov.f32 	%f237, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f31;
  cvt.rn.f16.f32 high, %f237;
  mov.b32 %r1856, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_245;

$L__BB0_241:
	mov.f32 	%f233, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f233;
  cvt.rn.f16.f32 high, %f233;
  mov.b32 %r1856, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_245;

$L__BB0_243:
	mov.f32 	%f234, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f234;
  cvt.rn.f16.f32 high, %f31;
  mov.b32 %r1856, {low,high};}

	// end inline asm

$L__BB0_245:
	add.s32 	%r343, %r1834, %r234;
	mul.wide.s32 	%rd241, %r343, 4;
	add.s64 	%rd242, %rd12, %rd241;
	st.global.u32 	[%rd242], %r1856;
	@%p10 bra 	$L__BB0_247;
	bra.uni 	$L__BB0_246;

$L__BB0_247:
	setp.eq.s32 	%p129, %r230, 0;
	add.s32 	%r1106, %r248, %r250;
	shl.b32 	%r1107, %r1106, 1;
	mul.wide.s32 	%rd243, %r1107, 4;
	add.s64 	%rd244, %rd11, %rd243;
	ld.global.f32 	%f32, [%rd244];
	@%p129 bra 	$L__BB0_249;
	bra.uni 	$L__BB0_248;

$L__BB0_249:
	mov.f32 	%f243, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f32;
  cvt.rn.f16.f32 high, %f243;
  mov.b32 %r1857, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_250;

$L__BB0_246:
	mov.f32 	%f239, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f239;
  cvt.rn.f16.f32 high, %f239;
  mov.b32 %r1857, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_250;

$L__BB0_248:
	mov.f32 	%f240, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f240;
  cvt.rn.f16.f32 high, %f32;
  mov.b32 %r1857, {low,high};}

	// end inline asm

$L__BB0_250:
	add.s32 	%r1110, %r343, 1;
	mul.wide.s32 	%rd245, %r1110, 4;
	add.s64 	%rd246, %rd12, %rd245;
	st.global.u32 	[%rd246], %r1857;
	add.s32 	%r1834, %r1834, 2;

$L__BB0_251:
	@%p90 bra 	$L__BB0_263;

	@%p10 bra 	$L__BB0_254;
	bra.uni 	$L__BB0_253;

$L__BB0_254:
	setp.eq.s32 	%p131, %r230, 0;
	add.s32 	%r1112, %r246, %r250;
	shl.b32 	%r1113, %r1112, 1;
	or.b32  	%r1114, %r1113, 1;
	mul.wide.s32 	%rd247, %r1114, 4;
	add.s64 	%rd248, %rd11, %rd247;
	ld.global.f32 	%f33, [%rd248];
	@%p131 bra 	$L__BB0_256;
	bra.uni 	$L__BB0_255;

$L__BB0_256:
	mov.f32 	%f249, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f33;
  cvt.rn.f16.f32 high, %f249;
  mov.b32 %r1859, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_257;

$L__BB0_253:
	mov.f32 	%f245, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f245;
  cvt.rn.f16.f32 high, %f245;
  mov.b32 %r1859, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_257;

$L__BB0_255:
	mov.f32 	%f246, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f246;
  cvt.rn.f16.f32 high, %f33;
  mov.b32 %r1859, {low,high};}

	// end inline asm

$L__BB0_257:
	add.s32 	%r354, %r1834, %r234;
	mul.wide.s32 	%rd249, %r354, 4;
	add.s64 	%rd250, %rd12, %rd249;
	st.global.u32 	[%rd250], %r1859;
	@%p10 bra 	$L__BB0_259;
	bra.uni 	$L__BB0_258;

$L__BB0_259:
	setp.eq.s32 	%p132, %r230, 0;
	add.s32 	%r1118, %r248, %r250;
	shl.b32 	%r1119, %r1118, 1;
	or.b32  	%r1120, %r1119, 1;
	mul.wide.s32 	%rd251, %r1120, 4;
	add.s64 	%rd252, %rd11, %rd251;
	ld.global.f32 	%f34, [%rd252];
	@%p132 bra 	$L__BB0_261;
	bra.uni 	$L__BB0_260;

$L__BB0_261:
	mov.f32 	%f255, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f34;
  cvt.rn.f16.f32 high, %f255;
  mov.b32 %r1860, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_262;

$L__BB0_258:
	mov.f32 	%f251, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f251;
  cvt.rn.f16.f32 high, %f251;
  mov.b32 %r1860, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_262;

$L__BB0_260:
	mov.f32 	%f252, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f252;
  cvt.rn.f16.f32 high, %f34;
  mov.b32 %r1860, {low,high};}

	// end inline asm

$L__BB0_262:
	add.s32 	%r1123, %r354, 1;
	mul.wide.s32 	%rd253, %r1123, 4;
	add.s64 	%rd254, %rd12, %rd253;
	st.global.u32 	[%rd254], %r1860;
	add.s32 	%r1834, %r1834, 2;

$L__BB0_263:
	add.s64 	%rd542, %rd542, 4;
	add.s64 	%rd541, %rd541, -4;
	setp.ne.s64 	%p133, %rd541, 0;
	@%p133 bra 	$L__BB0_143;

$L__BB0_264:
	add.s32 	%r1830, %r1830, %r29;
	setp.lt.s32 	%p134, %r1830, %r729;
	@%p134 bra 	$L__BB0_141;

$L__BB0_265:
	add.s32 	%r1824, %r1824, %r743;
	setp.lt.s32 	%p135, %r1824, %r728;
	@%p135 bra 	$L__BB0_139;
	bra.uni 	$L__BB0_266;

$L__BB0_120:
	@%p19 bra 	$L__BB0_266;

	neg.s32 	%r204, %r54;
	mov.u32 	%r940, 31;
	sub.s32 	%r941, %r940, %r27;
	setp.gt.s32 	%p73, %r26, %r27;
	selp.b32 	%r942, %r27, %r941, %p73;
	shl.b32 	%r943, %r942, 2;
	mov.u32 	%r944, 2;
	sub.s32 	%r205, %r943, %r731;
	sub.s32 	%r945, %r944, %r731;
	add.s32 	%r206, %r945, %r943;
	add.s32 	%r207, %r728, -1;
	add.s32 	%r208, %r205, 1;
	add.s32 	%r209, %r206, 1;
	rem.s32 	%r970, %r208, %r36;
	add.s32 	%r971, %r970, %r36;
	rem.s32 	%r220, %r971, %r36;
	rem.s32 	%r972, %r209, %r36;
	add.s32 	%r973, %r972, %r36;
	rem.s32 	%r221, %r973, %r36;

$L__BB0_122:
	setp.ne.s32 	%p74, %r23, %r204;
	@%p74 bra 	$L__BB0_136;

	shl.b32 	%r211, %r1824, 1;
	rem.s32 	%r946, %r205, %r36;
	add.s32 	%r947, %r946, %r36;
	rem.s32 	%r212, %r947, %r36;
	rem.s32 	%r948, %r206, %r36;
	add.s32 	%r949, %r948, %r36;
	rem.s32 	%r213, %r949, %r36;
	@%p73 bra 	$L__BB0_125;
	bra.uni 	$L__BB0_124;

$L__BB0_125:
	mul.lo.s32 	%r952, %r211, %r36;
	add.s32 	%r953, %r952, %r212;
	mul.wide.s32 	%rd155, %r953, 4;
	add.s64 	%rd156, %rd11, %rd155;
	ld.global.f32 	%f116, [%rd156];
	add.s32 	%r954, %r952, %r213;
	mul.wide.s32 	%rd157, %r954, 4;
	add.s64 	%rd158, %rd11, %rd157;
	ld.global.f32 	%f117, [%rd158];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f116;
  cvt.rn.f16.f32 high, %f117;
  mov.b32 %r1825, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_126;

$L__BB0_124:
	mov.f32 	%f115, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f115;
  cvt.rn.f16.f32 high, %f115;
  mov.b32 %r1825, {low,high};}

	// end inline asm

$L__BB0_126:
	shl.b32 	%r955, %r1824, 5;
	add.s32 	%r956, %r955, %r27;
	shl.b32 	%r957, %r956, 2;
	mul.wide.s32 	%rd159, %r957, 4;
	add.s64 	%rd13, %rd12, %rd159;
	st.global.u32 	[%rd13], %r1825;
	@%p73 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_127;

$L__BB0_128:
	add.s32 	%r960, %r211, 1;
	mul.lo.s32 	%r961, %r960, %r36;
	add.s32 	%r962, %r961, %r212;
	mul.wide.s32 	%rd160, %r962, 4;
	add.s64 	%rd161, %rd11, %rd160;
	ld.global.f32 	%f120, [%rd161];
	add.s32 	%r963, %r961, %r213;
	mul.wide.s32 	%rd162, %r963, 4;
	add.s64 	%rd163, %rd11, %rd162;
	ld.global.f32 	%f121, [%rd163];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f120;
  cvt.rn.f16.f32 high, %f121;
  mov.b32 %r1826, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_129;

$L__BB0_127:
	mov.f32 	%f119, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f119;
  cvt.rn.f16.f32 high, %f119;
  mov.b32 %r1826, {low,high};}

	// end inline asm

$L__BB0_129:
	add.s32 	%r964, %r207, %r1824;
	rem.s32 	%r965, %r964, %r728;
	shl.b32 	%r966, %r965, 5;
	add.s32 	%r967, %r966, %r27;
	shl.b32 	%r968, %r967, 2;
	or.b32  	%r969, %r968, 2;
	mul.wide.s32 	%rd164, %r969, 4;
	add.s64 	%rd14, %rd12, %rd164;
	st.global.u32 	[%rd14], %r1826;
	@%p73 bra 	$L__BB0_131;
	bra.uni 	$L__BB0_130;

$L__BB0_131:
	mul.lo.s32 	%r976, %r211, %r36;
	add.s32 	%r977, %r976, %r220;
	mul.wide.s32 	%rd165, %r977, 4;
	add.s64 	%rd166, %rd11, %rd165;
	ld.global.f32 	%f124, [%rd166];
	add.s32 	%r978, %r976, %r221;
	mul.wide.s32 	%rd167, %r978, 4;
	add.s64 	%rd168, %rd11, %rd167;
	ld.global.f32 	%f125, [%rd168];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f124;
  cvt.rn.f16.f32 high, %f125;
  mov.b32 %r1827, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_132;

$L__BB0_130:
	mov.f32 	%f123, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f123;
  cvt.rn.f16.f32 high, %f123;
  mov.b32 %r1827, {low,high};}

	// end inline asm

$L__BB0_132:
	st.global.u32 	[%rd13+4], %r1827;
	@%p73 bra 	$L__BB0_134;
	bra.uni 	$L__BB0_133;

$L__BB0_134:
	add.s32 	%r981, %r211, 1;
	mul.lo.s32 	%r982, %r981, %r36;
	add.s32 	%r983, %r982, %r220;
	mul.wide.s32 	%rd169, %r983, 4;
	add.s64 	%rd170, %rd11, %rd169;
	ld.global.f32 	%f128, [%rd170];
	add.s32 	%r984, %r982, %r221;
	mul.wide.s32 	%rd171, %r984, 4;
	add.s64 	%rd172, %rd11, %rd171;
	ld.global.f32 	%f129, [%rd172];
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f128;
  cvt.rn.f16.f32 high, %f129;
  mov.b32 %r1828, {low,high};}

	// end inline asm
	bra.uni 	$L__BB0_135;

$L__BB0_133:
	mov.f32 	%f127, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f127;
  cvt.rn.f16.f32 high, %f127;
  mov.b32 %r1828, {low,high};}

	// end inline asm

$L__BB0_135:
	st.global.u32 	[%rd14+4], %r1828;

$L__BB0_136:
	add.s32 	%r1824, %r1824, %r743;
	setp.lt.s32 	%p79, %r1824, %r728;
	@%p79 bra 	$L__BB0_122;

$L__BB0_266:
	add.s32 	%r1125, %r723, -1;
	mad.lo.s32 	%r1126, %r724, 576, 128;
	mul.lo.s32 	%r1127, %r1126, %r1125;
	add.s32 	%r1128, %r48, -64;
	add.s32 	%r1129, %r1128, %r48;
	add.s32 	%r1130, %r724, -1;
	mad.lo.s32 	%r1131, %r1129, %r1130, %r1127;
	mul.lo.s32 	%r1132, %r1125, %r724;
	mul.lo.s32 	%r1133, %r1132, 320;
	mad.lo.s32 	%r1134, %r1128, %r1130, %r1133;
	add.s32 	%r363, %r1134, %r1131;
	setp.lt.s32 	%p136, %r363, 1;
	mov.f32 	%f257, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r1863, {low,high};}

	// end inline asm
	@%p136 bra 	$L__BB0_269;

	mov.u32 	%r1864, 0;
	mov.u32 	%r1862, _ZN6kernel5shmemE;

$L__BB0_268:
	st.shared.u32 	[%r1862], %r1863;
	mov.f32 	%f265, 0f00000000;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1137, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1862+4], %r1137;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1138, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1862+8], %r1138;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1139, {low,high};}

	// end inline asm
	st.shared.u32 	[%r1862+12], %r1139;
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f265;
  cvt.rn.f16.f32 high, %f265;
  mov.b32 %r1863, {low,high};}

	// end inline asm
	add.s32 	%r1862, %r1862, 16;
	add.s32 	%r1864, %r1864, 4;
	setp.lt.s32 	%p137, %r1864, %r363;
	@%p137 bra 	$L__BB0_268;

$L__BB0_269:
	// begin inline asm
	{.reg .f16 low,high;
  cvt.rn.f16.f32 low, %f257;
  cvt.rn.f16.f32 high, %f257;
  mov.b32 %r1142, {low,high};}

	// end inline asm
	mov.u32 	%r1143, 31;
	sub.s32 	%r1144, %r1143, %r27;
	setp.gt.s32 	%p139, %r26, %r27;
	selp.b32 	%r1145, %r27, %r1144, %p139;
	shl.b32 	%r1146, %r1145, 2;
	sub.s32 	%r372, %r1146, %r731;
	rem.s32 	%r1147, %r372, %r36;
	add.s32 	%r1148, %r1147, %r36;
	rem.s32 	%r373, %r1148, %r36;
	add.s32 	%r1149, %r372, 2;
	rem.s32 	%r1150, %r1149, %r36;
	add.s32 	%r1151, %r1150, %r36;
	rem.s32 	%r374, %r1151, %r36;
	add.s32 	%r1162, %r372, 1;
	rem.s32 	%r1163, %r1162, %r36;
	add.s32 	%r1164, %r1163, %r36;
	rem.s32 	%r375, %r1164, %r36;
	add.s32 	%r1165, %r372, 3;
	rem.s32 	%r1166, %r1165, %r36;
	add.s32 	%r1167, %r1166, %r36;
	rem.s32 	%r376, %r1167, %r36;
	// begin inline asm
	mov.u32 %r1178, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd260, %r1178;
	// begin inline asm
	mov.u32 %r1179, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd261, %r1179;
	bfi.b64 	%rd24, %rd261, %rd260, 32, 32;
	setp.ne.s64 	%p147, %rd24, 0;
	@%p147 bra 	$L__BB0_287;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_287:
	add.s64 	%rd25, %rd24, 4;
	mov.u32 	%r1180, %nctaid.y;
	mov.u32 	%r1181, %nctaid.x;
	mul.lo.s32 	%r1182, %r1181, %r1180;
	mov.u32 	%r1183, %nctaid.z;
	mul.lo.s32 	%r377, %r1182, %r1183;
	neg.s32 	%r1184, %r23;
	add.s32 	%r1185, %r27, %r22;
	setp.ne.s32 	%p148, %r1185, %r1184;
	mov.u32 	%r1186, %ctaid.x;
	add.s32 	%r378, %r1186, %r24;
	neg.s32 	%r379, %r25;
	bar.sync 	0;
	@%p148 bra 	$L__BB0_291;

	setp.eq.s32 	%p149, %r378, %r379;
	mov.u32 	%r1189, -2147483647;
	sub.s32 	%r1190, %r1189, %r377;
	selp.b32 	%r1188, %r1190, 1, %p149;
	membar.gl;
	// begin inline asm
	atom.add.release.gpu.u32 %r1187,[%rd25],%r1188;
	// end inline asm

$L__BB0_289:
	ld.volatile.u32 	%r1191, [%rd25];
	xor.b32  	%r1192, %r1191, %r1187;
	setp.gt.s32 	%p150, %r1192, -1;
	@%p150 bra 	$L__BB0_289;

	// begin inline asm
	ld.acquire.gpu.u32 %r1193,[%rd25];
	// end inline asm

$L__BB0_291:
	bar.sync 	0;
	setp.lt.s32 	%p151, %r30, 1;
	@%p151 bra 	$L__BB0_395;

	mov.u32 	%r1981, 0;
	not.b32 	%r1196, %r24;
	add.s32 	%r1197, %r725, %r1196;
	mul.lo.s32 	%r1198, %r1197, %r727;
	mul.wide.s32 	%rd268, %r27, 16;
	mul.wide.s32 	%rd270, %r27, 8;
	mov.u32 	%r1865, %r1142;
	mov.u32 	%r1866, %r1142;
	mov.u32 	%r1996, %r1142;
	mov.u32 	%r1868, %r1142;
	mov.u32 	%r1869, %r1142;
	mov.u32 	%r2081, %r1142;
	mov.u32 	%r1871, %r1142;
	mov.u32 	%r2064, %r1142;
	mov.u32 	%r1873, %r1142;
	mov.u32 	%r1998, %r1142;
	mov.u32 	%r1875, %r1142;
	mov.u32 	%r2066, %r1142;
	mov.u32 	%r1877, %r1142;
	mov.u32 	%r1878, %r1142;
	mov.u32 	%r1879, %r1142;
	mov.u32 	%r1880, %r1142;
	mov.u32 	%r1881, %r1142;
	mov.u32 	%r1882, %r1142;
	mov.u32 	%r1883, %r1142;
	mov.u32 	%r2083, %r1142;
	mov.u32 	%r1885, %r1142;
	mov.u32 	%r1886, %r1142;
	mov.u32 	%r1887, %r1142;
	mov.u32 	%r1888, %r1142;
	mov.u32 	%r1889, %r1142;
	mov.u32 	%r1890, %r1142;
	mov.u32 	%r1891, %r1142;
	mov.u32 	%r1892, %r1142;
	mov.u32 	%r1893, %r1142;
	mov.u32 	%r1894, %r1142;
	mov.u32 	%r1895, %r1142;
	mov.u32 	%r1896, %r1142;
	mov.u32 	%r1897, %r1142;
	mov.u32 	%r1898, %r1142;
	mov.u32 	%r1899, %r1142;
	mov.u32 	%r1900, %r1142;
	mov.u32 	%r1901, %r1142;
	mov.u32 	%r1902, %r1142;
	mov.u32 	%r1903, %r1142;
	mov.u32 	%r1904, %r1142;
	mov.u32 	%r1905, %r1142;
	mov.u32 	%r1906, %r1142;
	mov.u32 	%r1907, %r1142;
	mov.u32 	%r1908, %r1142;
	mov.u32 	%r2088, %r1142;
	mov.u32 	%r2075, %r1142;
	mov.u32 	%r2006, %r1142;
	mov.u32 	%r1912, %r1142;
	mov.u32 	%r2089, %r1142;
	mov.u32 	%r2077, %r1142;
	mov.u32 	%r2008, %r1142;
	mov.u32 	%r1916, %r1142;
	mov.u32 	%r2036, %r1142;
	mov.u32 	%r1918, %r1142;
	mov.u32 	%r1919, %r1142;
	mov.u32 	%r2037, %r1142;
	mov.u32 	%r1921, %r1142;
	mov.u32 	%r1922, %r1142;
	mov.u32 	%r2038, %r1142;
	mov.u32 	%r2039, %r1142;
	mov.u32 	%r1925, %r1142;
	mov.u32 	%r1926, %r1142;
	mov.u32 	%r1927, %r1142;
	mov.u32 	%r1928, %r1142;
	mov.u32 	%r2040, %r1142;
	mov.u32 	%r2041, %r1142;
	mov.u32 	%r1931, %r1142;
	mov.u32 	%r1932, %r1142;
	mov.u32 	%r1933, %r1142;
	mov.u32 	%r1934, %r1142;
	mov.u32 	%r1935, %r1142;
	mov.u32 	%r1936, %r1142;
	mov.u32 	%r1937, %r1142;
	mov.u32 	%r1938, %r1142;
	mov.u32 	%r1939, %r1142;
	mov.u32 	%r1940, %r1142;
	mov.u32 	%r2045, %r1142;
	mov.u32 	%r1942, %r1142;
	mov.u32 	%r1943, %r1142;
	mov.u32 	%r1944, %r1142;
	mov.u32 	%r1945, %r1142;
	mov.u32 	%r1946, %r1142;
	mov.u32 	%r2047, %r1142;
	mov.u32 	%r1948, %r1142;
	mov.u32 	%r1949, %r1142;
	mov.u32 	%r1950, %r1142;
	mov.u32 	%r1951, %r1142;
	mov.u32 	%r1952, %r1142;
	mov.u32 	%r2048, %r1142;
	mov.u32 	%r1954, %r1142;
	mov.u32 	%r1955, %r1142;
	mov.u32 	%r1956, %r1142;
	mov.u32 	%r1957, %r1142;
	mov.u32 	%r1958, %r1142;
	mov.u32 	%r1959, %r1142;
	mov.u32 	%r2049, %r1142;
	mov.u32 	%r1961, %r1142;
	mov.u32 	%r1962, %r1142;
	mov.u32 	%r1963, %r1142;
	mov.u32 	%r1964, %r1142;
	mov.u32 	%r1965, %r1142;
	mov.u32 	%r1966, %r1142;
	mov.u32 	%r1967, %r1142;
	mov.u32 	%r1968, %r1142;
	mov.u32 	%r1969, %r1142;
	mov.u32 	%r1970, %r1142;
	mov.u32 	%r1971, %r1142;
	mov.u32 	%r1972, %r1142;
	mov.u32 	%r1973, %r1142;
	mov.u32 	%r1974, %r1142;
	mov.u32 	%r1975, %r1142;
	mov.u32 	%r1976, %r1142;
	mov.u32 	%r1977, %r1142;
	mov.u32 	%r1978, %r1142;
	mov.u32 	%r1979, %r1142;
	mov.u32 	%r1980, %r1142;
	mov.u32 	%r1982, %r1142;
	mov.u32 	%r1983, %r1142;
	mov.u32 	%r1984, %r1142;
	mov.u32 	%r1985, %r1142;
	mov.u32 	%r1986, %r1142;
	mov.u32 	%r1987, %r1142;
	mov.u32 	%r1988, %r1142;
	mov.u32 	%r1989, %r1142;
	mov.u32 	%r1990, %r1142;
	mov.u32 	%r1991, %r1142;
	mov.u32 	%r1992, %r1142;
	mov.u32 	%r1993, %r1142;
	mov.u32 	%r1997, %r1873;
	mov.u32 	%r1999, %r1877;
	mov.u32 	%r2007, %r1912;
	mov.u32 	%r2009, %r1916;

$L__BB0_293:
	mov.u32 	%r418, %r1989;
	mov.u32 	%r413, %r1988;
	mov.u32 	%r406, %r1986;
	mov.u32 	%r398, %r1984;
	mov.u32 	%r1988, %r1983;
	mov.u32 	%r1989, %r1982;
	mov.u32 	%r492, %r1964;
	mov.u32 	%r491, %r1963;
	mov.u32 	%r488, %r2049;
	mov.u32 	%r487, %r1959;
	mov.u32 	%r485, %r1957;
	mov.u32 	%r484, %r1956;
	mov.u32 	%r481, %r2048;
	mov.u32 	%r480, %r1952;
	mov.u32 	%r478, %r1950;
	mov.u32 	%r475, %r2047;
	mov.u32 	%r472, %r1944;
	mov.u32 	%r469, %r2045;
	mov.u32 	%r1963, %r1934;
	mov.u32 	%r461, %r1933;
	mov.u32 	%r458, %r1931;
	mov.u32 	%r1959, %r2041;
	mov.u32 	%r456, %r2040;
	mov.u32 	%r1956, %r1928;
	mov.u32 	%r454, %r1927;
	mov.u32 	%r451, %r1925;
	mov.u32 	%r1952, %r2039;
	mov.u32 	%r449, %r2038;
	mov.u32 	%r448, %r1922;
	mov.u32 	%r445, %r2037;
	mov.u32 	%r444, %r1919;
	mov.u32 	%r441, %r2036;
	mov.u32 	%r1983, %r2089;
	mov.u32 	%r1982, %r2088;
	mov.u32 	%r432, %r1908;
	mov.u32 	%r428, %r1904;
	mov.u32 	%r1984, %r1903;
	mov.u32 	%r426, %r1902;
	mov.u32 	%r425, %r1901;
	mov.u32 	%r421, %r1897;
	mov.u32 	%r1986, %r1896;
	mov.u32 	%r1964, %r1895;
	mov.u32 	%r417, %r1894;
	mov.u32 	%r1931, %r1893;
	mov.u32 	%r415, %r1892;
	mov.u32 	%r1957, %r1891;
	mov.u32 	%r412, %r1890;
	mov.u32 	%r1925, %r1889;
	mov.u32 	%r1950, %r1888;
	mov.u32 	%r409, %r1887;
	mov.u32 	%r1922, %r1886;
	mov.u32 	%r405, %r1885;
	mov.u32 	%r1889, %r2083;
	mov.u32 	%r1890, %r1883;
	mov.u32 	%r1944, %r1882;
	mov.u32 	%r401, %r1881;
	mov.u32 	%r1919, %r1880;
	mov.u32 	%r397, %r1879;
	mov.u32 	%r1927, %r1878;
	mov.u32 	%r1928, %r1998;
	mov.u32 	%r1893, %r2081;
	mov.u32 	%r386, %r1869;
	mov.u32 	%r385, %r1868;
	mov.u32 	%r1934, %r1996;
	mov.u32 	%r1933, %r1866;
	mov.u32 	%r1894, %r1865;
	shl.b32 	%r1758, %r748, 1;
	sub.s32 	%r1757, %r728, %r1758;
	add.s32 	%r1199, %r1981, %r1198;
	not.b32 	%r1201, %r25;
	add.s32 	%r1202, %r726, %r1201;
	mul.lo.s32 	%r1203, %r1202, %r727;
	add.s32 	%r1204, %r1981, %r1203;
	rem.s32 	%r510, %r1199, %r47;
	rem.s32 	%r511, %r1204, %r1757;
	add.s32 	%r1208, %r1198, %r1203;
	add.s32 	%r1209, %r1208, %r728;
	not.b32 	%r1210, %r22;
	add.s32 	%r1211, %r723, %r1210;
	mad.lo.s32 	%r1212, %r1197, %r723, %r1211;
	not.b32 	%r1214, %r23;
	add.s32 	%r1215, %r724, %r1214;
	mad.lo.s32 	%r1216, %r1202, %r724, %r1215;
	add.s32 	%r1217, %r1212, %r1216;
	shl.b32 	%r1218, %r1217, 1;
	add.s32 	%r1219, %r1209, %r1218;
	add.s32 	%r1220, %r1981, %r1219;
	add.s32 	%r1221, %r1981, %r1208;
	div.s32 	%r1222, %r1220, %r728;
	mul.lo.s32 	%r1223, %r1222, %r728;
	sub.s32 	%r1224, %r1758, %r728;
	sub.s32 	%r512, %r1220, %r1223;
	sub.s32 	%r1225, %r1212, %r1216;
	shl.b32 	%r1226, %r1225, 1;
	add.s32 	%r1227, %r1226, %r729;
	mad.lo.s32 	%r1228, %r1222, %r1758, %r1227;
	mad.lo.s32 	%r1229, %r1222, %r1224, %r1221;
	div.s32 	%r1230, %r1228, %r729;
	mul.lo.s32 	%r1231, %r1230, %r729;
	sub.s32 	%r1234, %r744, %r729;
	sub.s32 	%r513, %r1228, %r1231;
	mad.lo.s32 	%r514, %r1230, %r1234, %r1229;
	ld.param.u64 	%rd265, [%rd1+56];
	cvta.to.global.u64 	%rd26, %rd265;
	setp.ne.s32 	%p152, %r22, 0;
	@%p152 bra 	$L__BB0_298;

	setp.eq.s32 	%p153, %r23, 0;
	mad.lo.s32 	%r1237, %r510, %r726, %r25;
	mul.lo.s32 	%r1238, %r1237, %r724;
	mul.lo.s32 	%r1239, %r1238, 768;
	mad.lo.s32 	%r1240, %r23, 384, %r1239;
	add.s32 	%r1241, %r1240, -64;
	mul.wide.s32 	%rd266, %r1241, 4;
	add.s64 	%rd267, %rd26, %rd266;
	add.s64 	%rd269, %rd267, %rd268;
	ld.global.v4.u32 	{%r1888, %r1882, %r1886, %r1880}, [%rd269+256];
	ld.global.v4.u32 	{%r2009, %r2007, %r1999, %r1997}, [%rd269+1024];
	add.s64 	%rd27, %rd267, %rd270;
	mov.u32 	%r1996, %r1934;
	mov.u32 	%r1998, %r1928;
	@%p153 bra 	$L__BB0_296;

	ld.global.v2.u32 	{%r1996, %r1998}, [%rd27];

$L__BB0_296:
	setp.ne.s32 	%p154, %r23, %r1130;
	ld.global.v2.u32 	{%r1887, %r1881}, [%rd27+768];
	@%p154 bra 	$L__BB0_298;

	ld.global.v2.u32 	{%r2008, %r2006}, [%rd27+1536];

$L__BB0_298:
	setp.ne.s32 	%p155, %r23, 0;
	mov.u32 	%r1866, %r1933;
	mov.u32 	%r1878, %r1927;
	mov.u32 	%r1891, %r1957;
	mov.u32 	%r1895, %r1964;
	mov.u32 	%r2016, %r1900;
	mov.u32 	%r1901, %r425;
	mov.u32 	%r2018, %r1907;
	mov.u32 	%r1908, %r432;
	mov.u32 	%r2020, %r1936;
	mov.u32 	%r2021, %r1938;
	@%p155 bra 	$L__BB0_300;

	not.b32 	%r1763, %r22;
	add.s32 	%r1762, %r723, %r1763;
	mad.lo.s32 	%r1260, %r511, %r725, %r24;
	mul.lo.s32 	%r1267, %r748, %r47;
	mul.lo.s32 	%r1268, %r1267, 768;
	mad.lo.s32 	%r1269, %r1762, 384, %r1268;
	add.s32 	%r1270, %r1269, -64;
	mad.lo.s32 	%r1271, %r1260, %r780, %r1270;
	mul.wide.s32 	%rd271, %r1271, 4;
	add.s64 	%rd272, %rd26, %rd271;
	add.s64 	%rd274, %rd272, %rd268;
	ld.global.v4.u32 	{%r2021, %r2020, %r2018, %r2016}, [%rd274+256];
	ld.global.v4.u32 	{%r1895, %r1891, %r1866, %r1878}, [%rd274+1024];
	add.s64 	%rd276, %rd272, %rd270;
	ld.global.v2.u32 	{%r1908, %r1901}, [%rd276+768];
	ld.global.v2.u32 	{%r1996, %r1998}, [%rd276+1536];

$L__BB0_300:
	ld.param.u64 	%rd278, [%rd1+64];
	cvta.to.global.u64 	%rd28, %rd278;
	add.s32 	%r1284, %r728, -1;
	setp.lt.s32 	%p156, %r512, %r1284;
	setp.gt.s32 	%p157, %r512, 1;
	and.pred  	%p158, %p157, %p156;
	setp.gt.s32 	%p159, %r513, 1;
	and.pred  	%p160, %p159, %p158;
	add.s32 	%r1285, %r729, -2;
	setp.lt.s32 	%p161, %r513, %r1285;
	and.pred  	%p11, %p161, %p160;
	not.pred 	%p162, %p11;
	mov.u32 	%r2036, %r1142;
	mov.u32 	%r2037, %r1142;
	mov.u32 	%r2038, %r1142;
	mov.u32 	%r2039, %r1142;
	mov.u32 	%r2040, %r1142;
	mov.u32 	%r2041, %r1142;
	mov.u32 	%r2042, %r1142;
	mov.u32 	%r2043, %r1142;
	mov.u32 	%r2044, %r1142;
	mov.u32 	%r2045, %r1142;
	mov.u32 	%r2046, %r1142;
	mov.u32 	%r2047, %r1142;
	mov.u32 	%r2048, %r1142;
	mov.u32 	%r2049, %r1142;
	mov.u32 	%r2050, %r1142;
	mov.u32 	%r2051, %r1142;
	mov.u32 	%r2052, %r1142;
	mov.u32 	%r2053, %r1142;
	mov.u32 	%r2054, %r1142;
	mov.u32 	%r2055, %r1142;
	mov.u32 	%r2056, %r1142;
	mov.u32 	%r2057, %r1142;
	@%p162 bra 	$L__BB0_311;

	mad.lo.s32 	%r577, %r513, %r728, %r512;
	shl.b32 	%r1286, %r577, 6;
	mul.wide.s32 	%rd279, %r1286, 4;
	add.s64 	%rd29, %rd28, %rd279;
	and.pred  	%p165, %p152, %p155;
	mov.u32 	%r2039, %r1142;
	mov.u32 	%r2041, %r1142;
	@%p165 bra 	$L__BB0_303;

	add.s64 	%rd281, %rd29, %rd270;
	ld.global.v2.u32 	{%r2041, %r2039}, [%rd281+256];

$L__BB0_303:
	mov.u32 	%r2044, %r1142;
	mov.u32 	%r2046, %r1142;
	@%p152 bra 	$L__BB0_305;

	shl.b32 	%r1290, %r728, 5;
	cvt.s64.s32 	%rd282, %r1290;
	cvt.s64.s32 	%rd283, %r27;
	add.s64 	%rd284, %rd282, %rd283;
	shl.b64 	%rd285, %rd284, 3;
	add.s64 	%rd286, %rd29, %rd285;
	ld.global.v2.u32 	{%r2046, %r2044}, [%rd286];

$L__BB0_305:
	mov.u32 	%r2051, %r1142;
	mov.u32 	%r2053, %r1142;
	@%p155 bra 	$L__BB0_307;

	shl.b32 	%r1294, %r728, 5;
	neg.s32 	%r1295, %r1294;
	cvt.s64.s32 	%rd287, %r1295;
	cvt.s64.s32 	%rd288, %r27;
	add.s64 	%rd289, %rd287, %rd288;
	shl.b64 	%rd290, %rd289, 3;
	add.s64 	%rd291, %rd29, %rd290;
	ld.global.v2.u32 	{%r2053, %r2051}, [%rd291];

$L__BB0_307:
	shl.b32 	%r1298, %r729, 6;
	shl.b32 	%r1299, %r577, 7;
	mad.lo.s32 	%r1300, %r1298, %r728, %r1299;
	mul.wide.s32 	%rd292, %r1300, 4;
	add.s64 	%rd30, %rd28, %rd292;
	mov.u32 	%r2036, %r1142;
	mov.u32 	%r2037, %r1142;
	mov.u32 	%r2042, %r1142;
	mov.u32 	%r2043, %r1142;
	mov.u32 	%r2045, %r1142;
	mov.u32 	%r2047, %r1142;
	mov.u32 	%r2054, %r1142;
	mov.u32 	%r2055, %r1142;
	@%p152 bra 	$L__BB0_309;

	shl.b32 	%r1301, %r728, 5;
	cvt.s64.s32 	%rd293, %r1301;
	cvt.s64.s32 	%rd294, %r27;
	add.s64 	%rd295, %rd293, %rd294;
	shl.b64 	%rd296, %rd295, 4;
	add.s64 	%rd297, %rd30, %rd296;
	ld.global.v4.u32 	{%r2047, %r2045, %r2037, %r2036}, [%rd297];
	shl.b32 	%r1306, %r728, 6;
	add.s32 	%r1307, %r1306, -32;
	cvt.s64.s32 	%rd298, %r1307;
	add.s64 	%rd299, %rd298, %rd294;
	shl.b64 	%rd300, %rd299, 4;
	add.s64 	%rd301, %rd30, %rd300;
	ld.global.v4.u32 	{%r2055, %r2054, %r2043, %r2042}, [%rd301];

$L__BB0_309:
	mov.u32 	%r2038, %r1142;
	mov.u32 	%r2040, %r1142;
	mov.u32 	%r2048, %r1142;
	mov.u32 	%r2049, %r1142;
	mov.u32 	%r2050, %r1142;
	mov.u32 	%r2052, %r1142;
	mov.u32 	%r2056, %r1142;
	mov.u32 	%r2057, %r1142;
	@%p155 bra 	$L__BB0_311;

	shl.b32 	%r1313, %r728, 5;
	xor.b32  	%r1314, %r1313, -32;
	cvt.s64.s32 	%rd302, %r1314;
	cvt.s64.s32 	%rd303, %r27;
	add.s64 	%rd304, %rd302, %rd303;
	shl.b64 	%rd305, %rd304, 4;
	add.s64 	%rd306, %rd30, %rd305;
	ld.global.v4.u32 	{%r2057, %r2056, %r2052, %r2050}, [%rd306];
	add.s64 	%rd308, %rd30, %rd268;
	ld.global.v4.u32 	{%r2049, %r2048, %r2040, %r2038}, [%rd308];

$L__BB0_311:
	bar.sync 	0;
	ld.param.u64 	%rd310, [%rd1+136];
	cvta.to.global.u64 	%rd31, %rd310;
	setp.lt.s32 	%p170, %r514, %r734;
	or.pred  	%p172, %p170, %p162;
	mad.lo.s32 	%r1323, %r736, %r735, %r734;
	setp.ge.s32 	%p173, %r514, %r1323;
	or.pred  	%p174, %p172, %p173;
	@%p174 bra 	$L__BB0_361;

	sub.s32 	%r636, %r514, %r734;
	rem.s32 	%r1324, %r636, %r735;
	setp.ne.s32 	%p175, %r1324, 0;
	@%p175 bra 	$L__BB0_361;

	div.s32 	%r1325, %r636, %r735;
	mul.lo.s32 	%r1326, %r1325, %r728;
	mul.lo.s32 	%r637, %r1326, 3;
	add.s32 	%r638, %r512, -2;
	add.s32 	%r1327, %r637, %r638;
	mul.lo.s32 	%r639, %r1327, %r729;
	@%p12 bra 	$L__BB0_315;

	add.s32 	%r1332, %r639, %r513;
	mul.lo.s32 	%r1333, %r1332, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1980;
  cvt.f32.f16 %f302, low;}

	// end inline asm
	add.s32 	%r1334, %r373, %r1333;
	mul.wide.s32 	%rd311, %r1334, 4;
	add.s64 	%rd312, %rd31, %rd311;
	st.global.f32 	[%rd312], %f302;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1980;
  cvt.f32.f16 %f303, high;}

	// end inline asm
	add.s32 	%r1335, %r374, %r1333;
	mul.wide.s32 	%rd313, %r1335, 4;
	add.s64 	%rd314, %rd31, %rd313;
	st.global.f32 	[%rd314], %f303;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1976;
  cvt.f32.f16 %f304, low;}

	// end inline asm
	add.s32 	%r1336, %r375, %r1333;
	mul.wide.s32 	%rd315, %r1336, 4;
	add.s64 	%rd316, %rd31, %rd315;
	st.global.f32 	[%rd316], %f304;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1976;
  cvt.f32.f16 %f305, high;}

	// end inline asm
	add.s32 	%r1337, %r376, %r1333;
	mul.wide.s32 	%rd317, %r1337, 4;
	add.s64 	%rd318, %rd31, %rd317;
	st.global.f32 	[%rd318], %f305;

$L__BB0_315:
	add.s32 	%r640, %r637, %r728;
	@%p12 bra 	$L__BB0_317;

	add.s32 	%r1773, %r512, -2;
	add.s32 	%r1342, %r640, %r1773;
	mad.lo.s32 	%r1343, %r1342, %r729, %r513;
	mul.lo.s32 	%r1344, %r1343, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1979;
  cvt.f32.f16 %f306, low;}

	// end inline asm
	add.s32 	%r1345, %r373, %r1344;
	mul.wide.s32 	%rd319, %r1345, 4;
	add.s64 	%rd320, %rd31, %rd319;
	st.global.f32 	[%rd320], %f306;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1979;
  cvt.f32.f16 %f307, high;}

	// end inline asm
	add.s32 	%r1346, %r374, %r1344;
	mul.wide.s32 	%rd321, %r1346, 4;
	add.s64 	%rd322, %rd31, %rd321;
	st.global.f32 	[%rd322], %f307;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1975;
  cvt.f32.f16 %f308, low;}

	// end inline asm
	add.s32 	%r1347, %r375, %r1344;
	mul.wide.s32 	%rd323, %r1347, 4;
	add.s64 	%rd324, %rd31, %rd323;
	st.global.f32 	[%rd324], %f308;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1975;
  cvt.f32.f16 %f309, high;}

	// end inline asm
	add.s32 	%r1348, %r376, %r1344;
	mul.wide.s32 	%rd325, %r1348, 4;
	add.s64 	%rd326, %rd31, %rd325;
	st.global.f32 	[%rd326], %f309;

$L__BB0_317:
	@%p12 bra 	$L__BB0_319;

	add.s32 	%r1759, %r513, 1;
	add.s32 	%r1353, %r639, %r1759;
	mul.lo.s32 	%r1354, %r1353, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1972;
  cvt.f32.f16 %f310, low;}

	// end inline asm
	add.s32 	%r1355, %r373, %r1354;
	mul.wide.s32 	%rd327, %r1355, 4;
	add.s64 	%rd328, %rd31, %rd327;
	st.global.f32 	[%rd328], %f310;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1972;
  cvt.f32.f16 %f311, high;}

	// end inline asm
	add.s32 	%r1356, %r374, %r1354;
	mul.wide.s32 	%rd329, %r1356, 4;
	add.s64 	%rd330, %rd31, %rd329;
	st.global.f32 	[%rd330], %f311;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1970;
  cvt.f32.f16 %f312, low;}

	// end inline asm
	add.s32 	%r1357, %r375, %r1354;
	mul.wide.s32 	%rd331, %r1357, 4;
	add.s64 	%rd332, %rd31, %rd331;
	st.global.f32 	[%rd332], %f312;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1970;
  cvt.f32.f16 %f313, high;}

	// end inline asm
	add.s32 	%r1358, %r376, %r1354;
	mul.wide.s32 	%rd333, %r1358, 4;
	add.s64 	%rd334, %rd31, %rd333;
	st.global.f32 	[%rd334], %f313;

$L__BB0_319:
	add.s32 	%r642, %r512, -1;
	add.s32 	%r1359, %r637, %r642;
	mul.lo.s32 	%r643, %r1359, %r729;
	@%p12 bra 	$L__BB0_321;

	add.s32 	%r1760, %r513, -1;
	add.s32 	%r1364, %r643, %r1760;
	mul.lo.s32 	%r1365, %r1364, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1938;
  cvt.f32.f16 %f314, low;}

	// end inline asm
	add.s32 	%r1366, %r373, %r1365;
	mul.wide.s32 	%rd335, %r1366, 4;
	add.s64 	%rd336, %rd31, %rd335;
	st.global.f32 	[%rd336], %f314;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1938;
  cvt.f32.f16 %f315, high;}

	// end inline asm
	add.s32 	%r1367, %r374, %r1365;
	mul.wide.s32 	%rd337, %r1367, 4;
	add.s64 	%rd338, %rd31, %rd337;
	st.global.f32 	[%rd338], %f315;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1936;
  cvt.f32.f16 %f316, low;}

	// end inline asm
	add.s32 	%r1368, %r375, %r1365;
	mul.wide.s32 	%rd339, %r1368, 4;
	add.s64 	%rd340, %rd31, %rd339;
	st.global.f32 	[%rd340], %f316;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1936;
  cvt.f32.f16 %f317, high;}

	// end inline asm
	add.s32 	%r1369, %r376, %r1365;
	mul.wide.s32 	%rd341, %r1369, 4;
	add.s64 	%rd342, %rd31, %rd341;
	st.global.f32 	[%rd342], %f317;

$L__BB0_321:
	add.s32 	%r1774, %r512, -1;
	add.s32 	%r1370, %r640, %r1774;
	mul.lo.s32 	%r645, %r1370, %r729;
	@%p12 bra 	$L__BB0_323;

	add.s32 	%r1761, %r513, -1;
	add.s32 	%r1375, %r645, %r1761;
	mul.lo.s32 	%r1376, %r1375, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1968;
  cvt.f32.f16 %f318, low;}

	// end inline asm
	add.s32 	%r1377, %r373, %r1376;
	mul.wide.s32 	%rd343, %r1377, 4;
	add.s64 	%rd344, %rd31, %rd343;
	st.global.f32 	[%rd344], %f318;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1968;
  cvt.f32.f16 %f319, high;}

	// end inline asm
	add.s32 	%r1378, %r374, %r1376;
	mul.wide.s32 	%rd345, %r1378, 4;
	add.s64 	%rd346, %rd31, %rd345;
	st.global.f32 	[%rd346], %f319;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1966;
  cvt.f32.f16 %f320, low;}

	// end inline asm
	add.s32 	%r1379, %r375, %r1376;
	mul.wide.s32 	%rd347, %r1379, 4;
	add.s64 	%rd348, %rd31, %rd347;
	st.global.f32 	[%rd348], %f320;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1966;
  cvt.f32.f16 %f321, high;}

	// end inline asm
	add.s32 	%r1380, %r376, %r1376;
	mul.wide.s32 	%rd349, %r1380, 4;
	add.s64 	%rd350, %rd31, %rd349;
	st.global.f32 	[%rd350], %f321;

$L__BB0_323:
	@%p12 bra 	$L__BB0_325;

	add.s32 	%r1385, %r643, %r513;
	mul.lo.s32 	%r1386, %r1385, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r492;
  cvt.f32.f16 %f322, low;}

	// end inline asm
	add.s32 	%r1387, %r373, %r1386;
	mul.wide.s32 	%rd351, %r1387, 4;
	add.s64 	%rd352, %rd31, %rd351;
	st.global.f32 	[%rd352], %f322;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r492;
  cvt.f32.f16 %f323, high;}

	// end inline asm
	add.s32 	%r1388, %r374, %r1386;
	mul.wide.s32 	%rd353, %r1388, 4;
	add.s64 	%rd354, %rd31, %rd353;
	st.global.f32 	[%rd354], %f323;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r485;
  cvt.f32.f16 %f324, low;}

	// end inline asm
	add.s32 	%r1389, %r375, %r1386;
	mul.wide.s32 	%rd355, %r1389, 4;
	add.s64 	%rd356, %rd31, %rd355;
	st.global.f32 	[%rd356], %f324;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r485;
  cvt.f32.f16 %f325, high;}

	// end inline asm
	add.s32 	%r1390, %r376, %r1386;
	mul.wide.s32 	%rd357, %r1390, 4;
	add.s64 	%rd358, %rd31, %rd357;
	st.global.f32 	[%rd358], %f325;

$L__BB0_325:
	@%p12 bra 	$L__BB0_327;

	add.s32 	%r1395, %r645, %r513;
	mul.lo.s32 	%r1396, %r1395, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r491;
  cvt.f32.f16 %f326, low;}

	// end inline asm
	add.s32 	%r1397, %r373, %r1396;
	mul.wide.s32 	%rd359, %r1397, 4;
	add.s64 	%rd360, %rd31, %rd359;
	st.global.f32 	[%rd360], %f326;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r491;
  cvt.f32.f16 %f327, high;}

	// end inline asm
	add.s32 	%r1398, %r374, %r1396;
	mul.wide.s32 	%rd361, %r1398, 4;
	add.s64 	%rd362, %rd31, %rd361;
	st.global.f32 	[%rd362], %f327;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r484;
  cvt.f32.f16 %f328, low;}

	// end inline asm
	add.s32 	%r1399, %r375, %r1396;
	mul.wide.s32 	%rd363, %r1399, 4;
	add.s64 	%rd364, %rd31, %rd363;
	st.global.f32 	[%rd364], %f328;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r484;
  cvt.f32.f16 %f329, high;}

	// end inline asm
	add.s32 	%r1400, %r376, %r1396;
	mul.wide.s32 	%rd365, %r1400, 4;
	add.s64 	%rd366, %rd31, %rd365;
	st.global.f32 	[%rd366], %f329;

$L__BB0_327:
	add.s32 	%r1775, %r512, -1;
	add.s32 	%r646, %r640, %r728;
	add.s32 	%r1401, %r646, %r1775;
	mul.lo.s32 	%r647, %r1401, %r729;
	@%p12 bra 	$L__BB0_329;

	add.s32 	%r1406, %r647, %r513;
	mul.lo.s32 	%r1407, %r1406, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1962;
  cvt.f32.f16 %f330, low;}

	// end inline asm
	add.s32 	%r1408, %r373, %r1407;
	mul.wide.s32 	%rd367, %r1408, 4;
	add.s64 	%rd368, %rd31, %rd367;
	st.global.f32 	[%rd368], %f330;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1962;
  cvt.f32.f16 %f331, high;}

	// end inline asm
	add.s32 	%r1409, %r374, %r1407;
	mul.wide.s32 	%rd369, %r1409, 4;
	add.s64 	%rd370, %rd31, %rd369;
	st.global.f32 	[%rd370], %f331;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1955;
  cvt.f32.f16 %f332, low;}

	// end inline asm
	add.s32 	%r1410, %r375, %r1407;
	mul.wide.s32 	%rd371, %r1410, 4;
	add.s64 	%rd372, %rd31, %rd371;
	st.global.f32 	[%rd372], %f332;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1955;
  cvt.f32.f16 %f333, high;}

	// end inline asm
	add.s32 	%r1411, %r376, %r1407;
	mul.wide.s32 	%rd373, %r1411, 4;
	add.s64 	%rd374, %rd31, %rd373;
	st.global.f32 	[%rd374], %f333;

$L__BB0_329:
	@%p12 bra 	$L__BB0_331;

	add.s32 	%r1748, %r513, 1;
	add.s32 	%r1416, %r643, %r1748;
	mul.lo.s32 	%r1417, %r1416, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r478;
  cvt.f32.f16 %f334, low;}

	// end inline asm
	add.s32 	%r1418, %r373, %r1417;
	mul.wide.s32 	%rd375, %r1418, 4;
	add.s64 	%rd376, %rd31, %rd375;
	st.global.f32 	[%rd376], %f334;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r478;
  cvt.f32.f16 %f335, high;}

	// end inline asm
	add.s32 	%r1419, %r374, %r1417;
	mul.wide.s32 	%rd377, %r1419, 4;
	add.s64 	%rd378, %rd31, %rd377;
	st.global.f32 	[%rd378], %f335;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r472;
  cvt.f32.f16 %f336, low;}

	// end inline asm
	add.s32 	%r1420, %r375, %r1417;
	mul.wide.s32 	%rd379, %r1420, 4;
	add.s64 	%rd380, %rd31, %rd379;
	st.global.f32 	[%rd380], %f336;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r472;
  cvt.f32.f16 %f337, high;}

	// end inline asm
	add.s32 	%r1421, %r376, %r1417;
	mul.wide.s32 	%rd381, %r1421, 4;
	add.s64 	%rd382, %rd31, %rd381;
	st.global.f32 	[%rd382], %f337;

$L__BB0_331:
	@%p12 bra 	$L__BB0_333;

	add.s32 	%r1749, %r513, 1;
	add.s32 	%r1426, %r645, %r1749;
	mul.lo.s32 	%r1427, %r1426, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1949;
  cvt.f32.f16 %f338, low;}

	// end inline asm
	add.s32 	%r1428, %r373, %r1427;
	mul.wide.s32 	%rd383, %r1428, 4;
	add.s64 	%rd384, %rd31, %rd383;
	st.global.f32 	[%rd384], %f338;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1949;
  cvt.f32.f16 %f339, high;}

	// end inline asm
	add.s32 	%r1429, %r374, %r1427;
	mul.wide.s32 	%rd385, %r1429, 4;
	add.s64 	%rd386, %rd31, %rd385;
	st.global.f32 	[%rd386], %f339;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1943;
  cvt.f32.f16 %f340, low;}

	// end inline asm
	add.s32 	%r1430, %r375, %r1427;
	mul.wide.s32 	%rd387, %r1430, 4;
	add.s64 	%rd388, %rd31, %rd387;
	st.global.f32 	[%rd388], %f340;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1943;
  cvt.f32.f16 %f341, high;}

	// end inline asm
	add.s32 	%r1431, %r376, %r1427;
	mul.wide.s32 	%rd389, %r1431, 4;
	add.s64 	%rd390, %rd31, %rd389;
	st.global.f32 	[%rd390], %f341;

$L__BB0_333:
	@%p12 bra 	$L__BB0_335;

	add.s32 	%r1750, %r513, 1;
	add.s32 	%r1436, %r647, %r1750;
	mul.lo.s32 	%r1437, %r1436, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1948;
  cvt.f32.f16 %f342, low;}

	// end inline asm
	add.s32 	%r1438, %r373, %r1437;
	mul.wide.s32 	%rd391, %r1438, 4;
	add.s64 	%rd392, %rd31, %rd391;
	st.global.f32 	[%rd392], %f342;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1948;
  cvt.f32.f16 %f343, high;}

	// end inline asm
	add.s32 	%r1439, %r374, %r1437;
	mul.wide.s32 	%rd393, %r1439, 4;
	add.s64 	%rd394, %rd31, %rd393;
	st.global.f32 	[%rd394], %f343;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1942;
  cvt.f32.f16 %f344, low;}

	// end inline asm
	add.s32 	%r1440, %r375, %r1437;
	mul.wide.s32 	%rd395, %r1440, 4;
	add.s64 	%rd396, %rd31, %rd395;
	st.global.f32 	[%rd396], %f344;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1942;
  cvt.f32.f16 %f345, high;}

	// end inline asm
	add.s32 	%r1441, %r376, %r1437;
	mul.wide.s32 	%rd397, %r1441, 4;
	add.s64 	%rd398, %rd31, %rd397;
	st.global.f32 	[%rd398], %f345;

$L__BB0_335:
	@%p12 bra 	$L__BB0_337;

	add.s32 	%r1776, %r513, 2;
	add.s32 	%r1446, %r643, %r1776;
	mul.lo.s32 	%r1447, %r1446, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1916;
  cvt.f32.f16 %f346, low;}

	// end inline asm
	add.s32 	%r1448, %r373, %r1447;
	mul.wide.s32 	%rd399, %r1448, 4;
	add.s64 	%rd400, %rd31, %rd399;
	st.global.f32 	[%rd400], %f346;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1916;
  cvt.f32.f16 %f347, high;}

	// end inline asm
	add.s32 	%r1449, %r374, %r1447;
	mul.wide.s32 	%rd401, %r1449, 4;
	add.s64 	%rd402, %rd31, %rd401;
	st.global.f32 	[%rd402], %f347;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1912;
  cvt.f32.f16 %f348, low;}

	// end inline asm
	add.s32 	%r1450, %r375, %r1447;
	mul.wide.s32 	%rd403, %r1450, 4;
	add.s64 	%rd404, %rd31, %rd403;
	st.global.f32 	[%rd404], %f348;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1912;
  cvt.f32.f16 %f349, high;}

	// end inline asm
	add.s32 	%r1451, %r376, %r1447;
	mul.wide.s32 	%rd405, %r1451, 4;
	add.s64 	%rd406, %rd31, %rd405;
	st.global.f32 	[%rd406], %f349;

$L__BB0_337:
	add.s32 	%r1452, %r640, %r512;
	mul.lo.s32 	%r649, %r1452, %r729;
	@%p12 bra 	$L__BB0_339;

	add.s32 	%r1751, %r513, -1;
	add.s32 	%r1457, %r649, %r1751;
	mul.lo.s32 	%r1458, %r1457, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r432;
  cvt.f32.f16 %f350, low;}

	// end inline asm
	add.s32 	%r1459, %r373, %r1458;
	mul.wide.s32 	%rd407, %r1459, 4;
	add.s64 	%rd408, %rd31, %rd407;
	st.global.f32 	[%rd408], %f350;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r432;
  cvt.f32.f16 %f351, high;}

	// end inline asm
	add.s32 	%r1460, %r374, %r1458;
	mul.wide.s32 	%rd409, %r1460, 4;
	add.s64 	%rd410, %rd31, %rd409;
	st.global.f32 	[%rd410], %f351;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r425;
  cvt.f32.f16 %f352, low;}

	// end inline asm
	add.s32 	%r1461, %r375, %r1458;
	mul.wide.s32 	%rd411, %r1461, 4;
	add.s64 	%rd412, %rd31, %rd411;
	st.global.f32 	[%rd412], %f352;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r425;
  cvt.f32.f16 %f353, high;}

	// end inline asm
	add.s32 	%r1462, %r376, %r1458;
	mul.wide.s32 	%rd413, %r1462, 4;
	add.s64 	%rd414, %rd31, %rd413;
	st.global.f32 	[%rd414], %f353;

$L__BB0_339:
	add.s32 	%r1463, %r646, %r512;
	mul.lo.s32 	%r650, %r1463, %r729;
	@%p12 bra 	$L__BB0_341;

	add.s32 	%r1752, %r513, -1;
	add.s32 	%r1468, %r650, %r1752;
	mul.lo.s32 	%r1469, %r1468, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1907;
  cvt.f32.f16 %f354, low;}

	// end inline asm
	add.s32 	%r1470, %r373, %r1469;
	mul.wide.s32 	%rd415, %r1470, 4;
	add.s64 	%rd416, %rd31, %rd415;
	st.global.f32 	[%rd416], %f354;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1907;
  cvt.f32.f16 %f355, high;}

	// end inline asm
	add.s32 	%r1471, %r374, %r1469;
	mul.wide.s32 	%rd417, %r1471, 4;
	add.s64 	%rd418, %rd31, %rd417;
	st.global.f32 	[%rd418], %f355;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1900;
  cvt.f32.f16 %f356, low;}

	// end inline asm
	add.s32 	%r1472, %r375, %r1469;
	mul.wide.s32 	%rd419, %r1472, 4;
	add.s64 	%rd420, %rd31, %rd419;
	st.global.f32 	[%rd420], %f356;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1900;
  cvt.f32.f16 %f357, high;}

	// end inline asm
	add.s32 	%r1473, %r376, %r1469;
	mul.wide.s32 	%rd421, %r1473, 4;
	add.s64 	%rd422, %rd31, %rd421;
	st.global.f32 	[%rd422], %f357;

$L__BB0_341:
	add.s32 	%r1474, %r637, %r512;
	mul.lo.s32 	%r651, %r1474, %r729;
	@%p12 bra 	$L__BB0_343;

	add.s32 	%r1479, %r651, %r513;
	mul.lo.s32 	%r1480, %r1479, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1964;
  cvt.f32.f16 %f358, low;}

	// end inline asm
	add.s32 	%r1481, %r373, %r1480;
	mul.wide.s32 	%rd423, %r1481, 4;
	add.s64 	%rd424, %rd31, %rd423;
	st.global.f32 	[%rd424], %f358;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1964;
  cvt.f32.f16 %f359, high;}

	// end inline asm
	add.s32 	%r1482, %r374, %r1480;
	mul.wide.s32 	%rd425, %r1482, 4;
	add.s64 	%rd426, %rd31, %rd425;
	st.global.f32 	[%rd426], %f359;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1957;
  cvt.f32.f16 %f360, low;}

	// end inline asm
	add.s32 	%r1483, %r375, %r1480;
	mul.wide.s32 	%rd427, %r1483, 4;
	add.s64 	%rd428, %rd31, %rd427;
	st.global.f32 	[%rd428], %f360;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1957;
  cvt.f32.f16 %f361, high;}

	// end inline asm
	add.s32 	%r1484, %r376, %r1480;
	mul.wide.s32 	%rd429, %r1484, 4;
	add.s64 	%rd430, %rd31, %rd429;
	st.global.f32 	[%rd430], %f361;

$L__BB0_343:
	@%p12 bra 	$L__BB0_345;

	add.s32 	%r1489, %r649, %r513;
	mul.lo.s32 	%r1490, %r1489, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1963;
  cvt.f32.f16 %f362, low;}

	// end inline asm
	add.s32 	%r1491, %r373, %r1490;
	mul.wide.s32 	%rd431, %r1491, 4;
	add.s64 	%rd432, %rd31, %rd431;
	st.global.f32 	[%rd432], %f362;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1963;
  cvt.f32.f16 %f363, high;}

	// end inline asm
	add.s32 	%r1492, %r374, %r1490;
	mul.wide.s32 	%rd433, %r1492, 4;
	add.s64 	%rd434, %rd31, %rd433;
	st.global.f32 	[%rd434], %f363;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1956;
  cvt.f32.f16 %f364, low;}

	// end inline asm
	add.s32 	%r1493, %r375, %r1490;
	mul.wide.s32 	%rd435, %r1493, 4;
	add.s64 	%rd436, %rd31, %rd435;
	st.global.f32 	[%rd436], %f364;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1956;
  cvt.f32.f16 %f365, high;}

	// end inline asm
	add.s32 	%r1494, %r376, %r1490;
	mul.wide.s32 	%rd437, %r1494, 4;
	add.s64 	%rd438, %rd31, %rd437;
	st.global.f32 	[%rd438], %f365;

$L__BB0_345:
	@%p12 bra 	$L__BB0_347;

	add.s32 	%r1499, %r650, %r513;
	mul.lo.s32 	%r1500, %r1499, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r461;
  cvt.f32.f16 %f366, low;}

	// end inline asm
	add.s32 	%r1501, %r373, %r1500;
	mul.wide.s32 	%rd439, %r1501, 4;
	add.s64 	%rd440, %rd31, %rd439;
	st.global.f32 	[%rd440], %f366;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r461;
  cvt.f32.f16 %f367, high;}

	// end inline asm
	add.s32 	%r1502, %r374, %r1500;
	mul.wide.s32 	%rd441, %r1502, 4;
	add.s64 	%rd442, %rd31, %rd441;
	st.global.f32 	[%rd442], %f367;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r454;
  cvt.f32.f16 %f368, low;}

	// end inline asm
	add.s32 	%r1503, %r375, %r1500;
	mul.wide.s32 	%rd443, %r1503, 4;
	add.s64 	%rd444, %rd31, %rd443;
	st.global.f32 	[%rd444], %f368;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r454;
  cvt.f32.f16 %f369, high;}

	// end inline asm
	add.s32 	%r1504, %r376, %r1500;
	mul.wide.s32 	%rd445, %r1504, 4;
	add.s64 	%rd446, %rd31, %rd445;
	st.global.f32 	[%rd446], %f369;

$L__BB0_347:
	@%p12 bra 	$L__BB0_349;

	add.s32 	%r1753, %r513, 1;
	add.s32 	%r1509, %r651, %r1753;
	mul.lo.s32 	%r1510, %r1509, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1950;
  cvt.f32.f16 %f370, low;}

	// end inline asm
	add.s32 	%r1511, %r373, %r1510;
	mul.wide.s32 	%rd447, %r1511, 4;
	add.s64 	%rd448, %rd31, %rd447;
	st.global.f32 	[%rd448], %f370;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1950;
  cvt.f32.f16 %f371, high;}

	// end inline asm
	add.s32 	%r1512, %r374, %r1510;
	mul.wide.s32 	%rd449, %r1512, 4;
	add.s64 	%rd450, %rd31, %rd449;
	st.global.f32 	[%rd450], %f371;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1944;
  cvt.f32.f16 %f372, low;}

	// end inline asm
	add.s32 	%r1513, %r375, %r1510;
	mul.wide.s32 	%rd451, %r1513, 4;
	add.s64 	%rd452, %rd31, %rd451;
	st.global.f32 	[%rd452], %f372;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1944;
  cvt.f32.f16 %f373, high;}

	// end inline asm
	add.s32 	%r1514, %r376, %r1510;
	mul.wide.s32 	%rd453, %r1514, 4;
	add.s64 	%rd454, %rd31, %rd453;
	st.global.f32 	[%rd454], %f373;

$L__BB0_349:
	@%p12 bra 	$L__BB0_351;

	add.s32 	%r1754, %r513, 1;
	add.s32 	%r1519, %r649, %r1754;
	mul.lo.s32 	%r1520, %r1519, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r409;
  cvt.f32.f16 %f374, low;}

	// end inline asm
	add.s32 	%r1521, %r373, %r1520;
	mul.wide.s32 	%rd455, %r1521, 4;
	add.s64 	%rd456, %rd31, %rd455;
	st.global.f32 	[%rd456], %f374;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r409;
  cvt.f32.f16 %f375, high;}

	// end inline asm
	add.s32 	%r1522, %r374, %r1520;
	mul.wide.s32 	%rd457, %r1522, 4;
	add.s64 	%rd458, %rd31, %rd457;
	st.global.f32 	[%rd458], %f375;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r401;
  cvt.f32.f16 %f376, low;}

	// end inline asm
	add.s32 	%r1523, %r375, %r1520;
	mul.wide.s32 	%rd459, %r1523, 4;
	add.s64 	%rd460, %rd31, %rd459;
	st.global.f32 	[%rd460], %f376;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r401;
  cvt.f32.f16 %f377, high;}

	// end inline asm
	add.s32 	%r1524, %r376, %r1520;
	mul.wide.s32 	%rd461, %r1524, 4;
	add.s64 	%rd462, %rd31, %rd461;
	st.global.f32 	[%rd462], %f377;

$L__BB0_351:
	@%p12 bra 	$L__BB0_353;

	add.s32 	%r1755, %r513, 1;
	add.s32 	%r1529, %r650, %r1755;
	mul.lo.s32 	%r1530, %r1529, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r448;
  cvt.f32.f16 %f378, low;}

	// end inline asm
	add.s32 	%r1531, %r373, %r1530;
	mul.wide.s32 	%rd463, %r1531, 4;
	add.s64 	%rd464, %rd31, %rd463;
	st.global.f32 	[%rd464], %f378;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r448;
  cvt.f32.f16 %f379, high;}

	// end inline asm
	add.s32 	%r1532, %r374, %r1530;
	mul.wide.s32 	%rd465, %r1532, 4;
	add.s64 	%rd466, %rd31, %rd465;
	st.global.f32 	[%rd466], %f379;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r444;
  cvt.f32.f16 %f380, low;}

	// end inline asm
	add.s32 	%r1533, %r375, %r1530;
	mul.wide.s32 	%rd467, %r1533, 4;
	add.s64 	%rd468, %rd31, %rd467;
	st.global.f32 	[%rd468], %f380;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r444;
  cvt.f32.f16 %f381, high;}

	// end inline asm
	add.s32 	%r1534, %r376, %r1530;
	mul.wide.s32 	%rd469, %r1534, 4;
	add.s64 	%rd470, %rd31, %rd469;
	st.global.f32 	[%rd470], %f381;

$L__BB0_353:
	add.s32 	%r1777, %r513, 2;
	add.s32 	%r652, %r650, %r1777;
	@%p12 bra 	$L__BB0_355;

	mul.lo.s32 	%r1539, %r652, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1877;
  cvt.f32.f16 %f382, low;}

	// end inline asm
	add.s32 	%r1540, %r373, %r1539;
	mul.wide.s32 	%rd471, %r1540, 4;
	add.s64 	%rd472, %rd31, %rd471;
	st.global.f32 	[%rd472], %f382;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1877;
  cvt.f32.f16 %f383, high;}

	// end inline asm
	add.s32 	%r1541, %r374, %r1539;
	mul.wide.s32 	%rd473, %r1541, 4;
	add.s64 	%rd474, %rd31, %rd473;
	st.global.f32 	[%rd474], %f383;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1873;
  cvt.f32.f16 %f384, low;}

	// end inline asm
	add.s32 	%r1542, %r375, %r1539;
	mul.wide.s32 	%rd475, %r1542, 4;
	add.s64 	%rd476, %rd31, %rd475;
	st.global.f32 	[%rd476], %f384;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1873;
  cvt.f32.f16 %f385, high;}

	// end inline asm
	add.s32 	%r1543, %r376, %r1539;
	mul.wide.s32 	%rd477, %r1543, 4;
	add.s64 	%rd478, %rd31, %rd477;
	st.global.f32 	[%rd478], %f385;

$L__BB0_355:
	add.s32 	%r653, %r512, 1;
	@%p12 bra 	$L__BB0_357;

	add.s32 	%r1548, %r640, %r653;
	mad.lo.s32 	%r1549, %r1548, %r729, %r513;
	mul.lo.s32 	%r1550, %r1549, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1934;
  cvt.f32.f16 %f386, low;}

	// end inline asm
	add.s32 	%r1551, %r373, %r1550;
	mul.wide.s32 	%rd479, %r1551, 4;
	add.s64 	%rd480, %rd31, %rd479;
	st.global.f32 	[%rd480], %f386;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1934;
  cvt.f32.f16 %f387, high;}

	// end inline asm
	add.s32 	%r1552, %r374, %r1550;
	mul.wide.s32 	%rd481, %r1552, 4;
	add.s64 	%rd482, %rd31, %rd481;
	st.global.f32 	[%rd482], %f387;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1928;
  cvt.f32.f16 %f388, low;}

	// end inline asm
	add.s32 	%r1553, %r375, %r1550;
	mul.wide.s32 	%rd483, %r1553, 4;
	add.s64 	%rd484, %rd31, %rd483;
	st.global.f32 	[%rd484], %f388;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1928;
  cvt.f32.f16 %f389, high;}

	// end inline asm
	add.s32 	%r1554, %r376, %r1550;
	mul.wide.s32 	%rd485, %r1554, 4;
	add.s64 	%rd486, %rd31, %rd485;
	st.global.f32 	[%rd486], %f389;

$L__BB0_357:
	add.s32 	%r1555, %r646, %r653;
	mul.lo.s32 	%r654, %r1555, %r729;
	@%p12 bra 	$L__BB0_359;

	add.s32 	%r1560, %r654, %r513;
	mul.lo.s32 	%r1561, %r1560, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1933;
  cvt.f32.f16 %f390, low;}

	// end inline asm
	add.s32 	%r1562, %r373, %r1561;
	mul.wide.s32 	%rd487, %r1562, 4;
	add.s64 	%rd488, %rd31, %rd487;
	st.global.f32 	[%rd488], %f390;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1933;
  cvt.f32.f16 %f391, high;}

	// end inline asm
	add.s32 	%r1563, %r374, %r1561;
	mul.wide.s32 	%rd489, %r1563, 4;
	add.s64 	%rd490, %rd31, %rd489;
	st.global.f32 	[%rd490], %f391;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1927;
  cvt.f32.f16 %f392, low;}

	// end inline asm
	add.s32 	%r1564, %r375, %r1561;
	mul.wide.s32 	%rd491, %r1564, 4;
	add.s64 	%rd492, %rd31, %rd491;
	st.global.f32 	[%rd492], %f392;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1927;
  cvt.f32.f16 %f393, high;}

	// end inline asm
	add.s32 	%r1565, %r376, %r1561;
	mul.wide.s32 	%rd493, %r1565, 4;
	add.s64 	%rd494, %rd31, %rd493;
	st.global.f32 	[%rd494], %f393;

$L__BB0_359:
	add.s32 	%r1756, %r513, 1;
	add.s32 	%r655, %r654, %r1756;
	@%p12 bra 	$L__BB0_361;

	mul.lo.s32 	%r1570, %r655, %r36;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1922;
  cvt.f32.f16 %f394, low;}

	// end inline asm
	add.s32 	%r1571, %r373, %r1570;
	mul.wide.s32 	%rd495, %r1571, 4;
	add.s64 	%rd496, %rd31, %rd495;
	st.global.f32 	[%rd496], %f394;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1922;
  cvt.f32.f16 %f395, high;}

	// end inline asm
	add.s32 	%r1572, %r374, %r1570;
	mul.wide.s32 	%rd497, %r1572, 4;
	add.s64 	%rd498, %rd31, %rd497;
	st.global.f32 	[%rd498], %f395;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1919;
  cvt.f32.f16 %f396, low;}

	// end inline asm
	add.s32 	%r1573, %r375, %r1570;
	mul.wide.s32 	%rd499, %r1573, 4;
	add.s64 	%rd500, %rd31, %rd499;
	st.global.f32 	[%rd500], %f396;
	// begin inline asm
	{.reg .f16 low,high;
  mov.b32 {low,high},%r1919;
  cvt.f32.f16 %f397, high;}

	// end inline asm
	add.s32 	%r1574, %r376, %r1570;
	mul.wide.s32 	%rd501, %r1574, 4;
	add.s64 	%rd502, %rd31, %rd501;
	st.global.f32 	[%rd502], %f397;

$L__BB0_361:
	setp.ne.s32 	%p200, %r22, %r1125;
	@%p200 bra 	$L__BB0_363;

	ld.param.u64 	%rd537, [%rd1+56];
	cvta.to.global.u64 	%rd536, %rd537;
	mad.lo.s32 	%r1576, %r510, %r726, %r25;
	mul.lo.s32 	%r1577, %r724, %r1576;
	mul.lo.s32 	%r1578, %r1577, 768;
	mad.lo.s32 	%r1580, %r23, 384, %r1578;
	add.s32 	%r1581, %r1580, -64;
	mul.wide.s32 	%rd504, %r1581, 4;
	add.s64 	%rd505, %rd536, %rd504;
	add.s64 	%rd507, %rd505, %rd268;
	st.global.v4.u32 	[%rd507+256], {%r1938, %r1936, %r1907, %r1900};
	st.global.v4.u32 	[%rd507+1024], {%r1980, %r1976, %r1962, %r1955};
	add.s64 	%rd509, %rd505, %rd270;
	st.global.v2.u32 	[%rd509+768], {%r1968, %r1966};
	st.global.v2.u32 	[%rd509+1536], {%r1979, %r1975};

$L__BB0_363:
	setp.ne.s32 	%p201, %r23, %r1130;
	@%p201 bra 	$L__BB0_368;

	ld.param.u64 	%rd539, [%rd1+56];
	cvta.to.global.u64 	%rd538, %rd539;
	not.b32 	%r1772, %r22;
	add.s32 	%r1771, %r723, %r1772;
	setp.eq.s32 	%p202, %r22, %r1125;
	mad.lo.s32 	%r1584, %r511, %r725, %r24;
	mul.lo.s32 	%r1591, %r748, %r47;
	mul.lo.s32 	%r1592, %r1591, 768;
	mad.lo.s32 	%r1593, %r1771, 384, %r1592;
	add.s32 	%r1594, %r1593, -64;
	mad.lo.s32 	%r1595, %r1584, %r780, %r1594;
	mul.wide.s32 	%rd510, %r1595, 4;
	add.s64 	%rd511, %rd538, %rd510;
	add.s64 	%rd513, %rd511, %rd268;
	st.global.v4.u32 	[%rd513+256], {%r1972, %r1970, %r1948, %r1942};
	st.global.v4.u32 	[%rd513+1024], {%r1916, %r1912, %r1877, %r1873};
	add.s64 	%rd34, %rd511, %rd270;
	@%p202 bra 	$L__BB0_366;

	st.global.v2.u32 	[%rd34], {%r1979, %r1975};

$L__BB0_366:
	st.global.v2.u32 	[%rd34+768], {%r1949, %r1943};
	@%p152 bra 	$L__BB0_368;

	st.global.v2.u32 	[%rd34+1536], {%r2008, %r2006};

$L__BB0_368:
	setp.ge.s32 	%p204, %r22, %r1125;
	@%p204 bra 	$L__BB0_370;

	add.s32 	%r1770, %r48, %r48;
	mul.lo.s32 	%r1596, %r724, 320;
	mul.lo.s32 	%r1598, %r23, 320;
	mad.lo.s32 	%r1599, %r1596, %r22, %r1598;
	add.s32 	%r1602, %r1770, -64;
	mad.lo.s32 	%r1607, %r1602, %r1130, %r1127;
	add.s32 	%r1608, %r1599, %r1607;
	shl.b32 	%r1609, %r1608, 2;
	mov.u32 	%r1610, _ZN6kernel5shmemE;
	add.s32 	%r1611, %r1610, %r1609;
	shl.b32 	%r1612, %r27, 4;
	add.s32 	%r1613, %r1611, %r1612;
	st.shared.v4.u32 	[%r1613], {%r2057, %r2056, %r2052, %r2050};
	shl.b32 	%r1614, %r27, 3;
	add.s32 	%r1615, %r1611, %r1614;
	st.shared.v2.u32 	[%r1615+512], {%r1967, %r1965};
	st.shared.v4.u32 	[%r1613+768], {%r1978, %r1974, %r1958, %r1951};

$L__BB0_370:
	setp.ge.s32 	%p205, %r23, %r1130;
	@%p205 bra 	$L__BB0_374;

	not.b32 	%r1769, %r22;
	add.s32 	%r1768, %r723, %r1769;
	mad.lo.s32 	%r1621, %r1768, 384, %r1133;
	mad.lo.s32 	%r1625, %r1128, %r23, %r1621;
	add.s32 	%r1631, %r1625, %r1131;
	shl.b32 	%r1632, %r1631, 2;
	mov.u32 	%r1633, _ZN6kernel5shmemE;
	add.s32 	%r1634, %r1633, %r1632;
	shl.b32 	%r1635, %r27, 3;
	add.s32 	%r1636, %r1634, %r1635;
	@%p204 bra 	$L__BB0_373;

	add.s32 	%r1746, %r1636, -256;
	st.shared.v2.u32 	[%r1746], {%r1977, %r1973};

$L__BB0_373:
	shl.b32 	%r1656, %r27, 4;
	add.s32 	%r1657, %r1634, %r1656;
	st.shared.v4.u32 	[%r1657], {%r1971, %r1969, %r1945, %r1939};
	add.s32 	%r1747, %r1636, -256;
	st.shared.v2.u32 	[%r1747+768], {%r1946, %r1940};
	st.shared.v4.u32 	[%r1657+768], {%r2055, %r2054, %r2043, %r2042};

$L__BB0_374:
	bar.sync 	0;
	ld.param.u64 	%rd515, [%rd1+56];
	cvta.to.global.u64 	%rd35, %rd515;
	mov.u32 	%r2081, %r1893;
	mov.u32 	%r2063, %r1871;
	mov.u32 	%r2065, %r1875;
	mov.u32 	%r1879, %r397;
	mov.u32 	%r2083, %r1889;
	mov.u32 	%r1885, %r405;
	mov.u32 	%r1892, %r415;
	mov.u32 	%r1896, %r1986;
	mov.u32 	%r1902, %r426;
	mov.u32 	%r1903, %r1984;
	mov.u32 	%r2088, %r1982;
	mov.u32 	%r2089, %r1983;
	@%p152 bra 	$L__BB0_378;

	setp.eq.s32 	%p208, %r23, 0;
	mad.lo.s32 	%r1660, %r510, %r726, %r25;
	mad.lo.s32 	%r1661, %r1660, 768, 384;
	mul.lo.s32 	%r1662, %r1661, %r724;
	mad.lo.s32 	%r1663, %r23, 384, %r1662;
	add.s32 	%r1664, %r1663, -128;
	mul.wide.s32 	%rd516, %r1664, 4;
	add.s64 	%rd517, %rd35, %rd516;
	add.s64 	%rd519, %rd517, %rd268;
	add.s64 	%rd36, %rd519, 512;
	mov.u32 	%r2081, %r1893;
	mov.u32 	%r2083, %r1889;
	mov.u32 	%r2088, %r1982;
	mov.u32 	%r2089, %r1983;
	@%p208 bra 	$L__BB0_377;

	ld.global.v4.u32 	{%r2088, %r2089, %r2081, %r2083}, [%rd36+-512];

$L__BB0_377:
	ld.global.v4.u32 	{%r1896, %r1903, %r1892, %r1902}, [%rd36];
	ld.global.v4.u32 	{%r1885, %r1879, %r2065, %r2063}, [%rd36+512];
	ld.global.v4.u32 	{%r2066, %r2064, %r2077, %r2075}, [%rd36+1024];

$L__BB0_378:
	mov.u32 	%r1865, %r1894;
	mov.u32 	%r1868, %r385;
	mov.u32 	%r1869, %r386;
	mov.u32 	%r1883, %r1890;
	mov.u32 	%r1897, %r421;
	mov.u32 	%r2085, %r1898;
	mov.u32 	%r1904, %r428;
	mov.u32 	%r2087, %r1905;
	@%p155 bra 	$L__BB0_380;

	not.b32 	%r1767, %r22;
	add.s32 	%r1766, %r723, %r1767;
	mad.lo.s32 	%r1682, %r511, %r725, %r24;
	mad.lo.s32 	%r1688, %r1766, 384, %r48;
	mad.lo.s32 	%r1689, %r1682, %r780, %r1688;
	mad.lo.s32 	%r1692, %r782, %r47, %r1689;
	mul.wide.s32 	%rd520, %r1692, 4;
	add.s64 	%rd521, %rd35, %rd520;
	add.s64 	%rd523, %rd521, %rd268;
	ld.global.v4.u32 	{%r2087, %r2085, %r1869, %r1868}, [%rd523+512];
	ld.global.v4.u32 	{%r1904, %r1897, %r1865, %r1883}, [%rd523+1024];
	ld.global.v4.u32 	{%r2088, %r2089, %r2081, %r2083}, [%rd523+1536];

$L__BB0_380:
	setp.ne.s32 	%p219, %r22, %r1125;
	add.s32 	%r720, %r1981, 1;
	bar.sync 	0;
	ld.param.u64 	%rd524, [%rd1+56];
	cvta.to.global.u64 	%rd37, %rd524;
	@%p219 bra 	$L__BB0_382;

	mad.lo.s32 	%r1706, %r510, %r726, %r25;
	mad.lo.s32 	%r1707, %r1706, 768, 384;
	mul.lo.s32 	%r1708, %r1707, %r724;
	mad.lo.s32 	%r1710, %r23, 384, %r1708;
	add.s32 	%r1711, %r1710, -128;
	mul.wide.s32 	%rd525, %r1711, 4;
	add.s64 	%rd526, %rd37, %rd525;
	add.s64 	%rd528, %rd526, %rd268;
	st.global.v4.u32 	[%rd528+512], {%r1905, %r1898, %r1906, %r1899};
	st.global.v4.u32 	[%rd528+1024], {%r1937, %r1935, %r1932, %r1926};
	st.global.v4.u32 	[%rd528+1536], {%r1993, %r1992, %r1961, %r1954};

$L__BB0_382:
	setp.ne.s32 	%p220, %r23, %r1130;
	@%p220 bra 	$L__BB0_385;

	not.b32 	%r1765, %r22;
	add.s32 	%r1764, %r723, %r1765;
	mad.lo.s32 	%r1713, %r511, %r725, %r24;
	mad.lo.s32 	%r1719, %r1764, 384, %r48;
	mad.lo.s32 	%r1720, %r1713, %r780, %r1719;
	mad.lo.s32 	%r1723, %r782, %r47, %r1720;
	mul.wide.s32 	%rd529, %r1723, 4;
	add.s64 	%rd530, %rd37, %rd529;
	add.s64 	%rd38, %rd530, %rd268;
	st.global.v4.u32 	[%rd38], {%r1993, %r1992, %r1961, %r1954};
	st.global.v4.u32 	[%rd38+512], {%r1991, %r1990, %r1987, %r1985};
	st.global.v4.u32 	[%rd38+1024], {%r1921, %r1918, %r1875, %r1871};
	@%p152 bra 	$L__BB0_385;

	st.global.v4.u32 	[%rd38+1536], {%r2066, %r2064, %r2077, %r2075};

$L__BB0_385:
	rem.s32 	%r1724, %r1981, %r727;
	setp.eq.s32 	%p213, %r1724, 0;
	@%p213 bra 	$L__BB0_387;

	bar.sync 	0;
	bra.uni 	$L__BB0_394;

$L__BB0_387:
	@%p147 bra 	$L__BB0_389;

	// begin inline asm
	trap;
	// end inline asm

$L__BB0_389:
	bar.sync 	0;
	@%p148 bra 	$L__BB0_393;

	membar.gl;
	setp.eq.s32 	%p216, %r378, %r379;
	mov.u32 	%r1740, -2147483647;
	sub.s32 	%r1741, %r1740, %r377;
	selp.b32 	%r1729, %r1741, 1, %p216;
	// begin inline asm
	atom.add.release.gpu.u32 %r1728,[%rd25],%r1729;
	// end inline asm

$L__BB0_391:
	ld.volatile.u32 	%r1742, [%rd25];
	xor.b32  	%r1743, %r1742, %r1728;
	setp.gt.s32 	%p217, %r1743, -1;
	@%p217 bra 	$L__BB0_391;

	// begin inline asm
	ld.acquire.gpu.u32 %r1744,[%rd25];
	// end inline asm

$L__BB0_393:
	bar.sync 	0;

$L__BB0_394:
	setp.lt.s32 	%p218, %r720, %r30;
	mov.u32 	%r1871, %r2063;
	mov.u32 	%r1873, %r1997;
	mov.u32 	%r1875, %r2065;
	mov.u32 	%r1877, %r1999;
	mov.u32 	%r1898, %r2085;
	mov.u32 	%r1899, %r385;
	mov.u32 	%r1900, %r2016;
	mov.u32 	%r1905, %r2087;
	mov.u32 	%r1906, %r386;
	mov.u32 	%r1907, %r2018;
	mov.u32 	%r1912, %r2007;
	mov.u32 	%r1916, %r2009;
	mov.u32 	%r1918, %r397;
	mov.u32 	%r1921, %r405;
	mov.u32 	%r1926, %r412;
	mov.u32 	%r1932, %r417;
	mov.u32 	%r1935, %r421;
	mov.u32 	%r1936, %r2020;
	mov.u32 	%r1937, %r428;
	mov.u32 	%r1938, %r2021;
	mov.u32 	%r1939, %r441;
	mov.u32 	%r1940, %r2044;
	mov.u32 	%r1942, %r444;
	mov.u32 	%r1943, %r401;
	mov.u32 	%r1945, %r445;
	mov.u32 	%r1946, %r2046;
	mov.u32 	%r1948, %r448;
	mov.u32 	%r1949, %r409;
	mov.u32 	%r1951, %r449;
	mov.u32 	%r1954, %r451;
	mov.u32 	%r1955, %r454;
	mov.u32 	%r1958, %r456;
	mov.u32 	%r1961, %r458;
	mov.u32 	%r1962, %r461;
	mov.u32 	%r1965, %r2051;
	mov.u32 	%r1966, %r425;
	mov.u32 	%r1967, %r2053;
	mov.u32 	%r1968, %r432;
	mov.u32 	%r1969, %r469;
	mov.u32 	%r1970, %r472;
	mov.u32 	%r1971, %r475;
	mov.u32 	%r1972, %r478;
	mov.u32 	%r1973, %r480;
	mov.u32 	%r1974, %r481;
	mov.u32 	%r1975, %r484;
	mov.u32 	%r1976, %r485;
	mov.u32 	%r1977, %r487;
	mov.u32 	%r1978, %r488;
	mov.u32 	%r1979, %r491;
	mov.u32 	%r1980, %r492;
	mov.u32 	%r1981, %r720;
	mov.u32 	%r1985, %r426;
	mov.u32 	%r1987, %r415;
	mov.u32 	%r1990, %r398;
	mov.u32 	%r1991, %r406;
	mov.u32 	%r1992, %r413;
	mov.u32 	%r1993, %r418;
	@%p218 bra 	$L__BB0_293;

$L__BB0_395:
	ret;

}

