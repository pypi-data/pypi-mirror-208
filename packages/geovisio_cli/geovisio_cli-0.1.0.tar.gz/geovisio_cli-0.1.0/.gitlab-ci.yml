variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

cache:
  paths:
    - .cache/pip

before_script:
  - python --version # For debugging
  - apk add --update --no-cache libc-dev libffi-dev gcc

test mypy:
  image: python:3.8-alpine
  script:
    - pip install .[dev]
    - mypy geovisio_cli/

lint:
  image: python:3.8-alpine
  script:
    - pip install .[dev]
    - black --fast --check .

tests:
  image: python:3.8-alpine
  services:
    - docker:dind
  script:
    - apk add --update --no-cache docker-cli docker-cli-compose curl
    - pip install .[dev]
    - docker compose -f tests/integration/docker-compose-geovisio.yml up -d --wait
      # additional sleep since Postgres start twice as docker and screw all docker healthcheck mechanisms
    - sleep 5
    - docker compose -f tests/integration/docker-compose-geovisio.yml ps
    - GEOVISIO=$(docker compose -f tests/integration/docker-compose-geovisio.yml port geovisio-api 5000)
    # Since the docker service is run on another container, we need to cheat and change the geovisio host url
    - OTHER_URL=$(echo $GEOVISIO | sed 's#0.0.0.0:\(.*\)#http://docker:\1#g')
    - curl $OTHER_URL || true
    - pytest -s -vv --external-geovisio-url=$OTHER_URL
  after_script:
    - docker compose -f tests/integration/docker-compose-geovisio.yml logs || true
    - docker compose -f tests/integration/docker-compose-geovisio.yml down || true

deploy_pypi:
  stage: deploy
  image: python:3.8-alpine
  script:
    - apk add --update --no-cache git
    - pip install .[build]
    - flit publish # use [flit](https://flit.pypa.io/) and FLIT_USERNAME/FLIT_PASSWORD env var
  only:
    - tags
