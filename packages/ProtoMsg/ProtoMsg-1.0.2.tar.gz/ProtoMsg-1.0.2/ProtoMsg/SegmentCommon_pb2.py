# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: SegmentCommon.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13SegmentCommon.proto\x12\x11\x63om.loorr.message\"*\n\x05Point\x12\t\n\x01x\x18\x01 \x01(\x01\x12\t\n\x01y\x18\x02 \x01(\x01\x12\x0b\n\x03tag\x18\x03 \x01(\x08\"_\n\x03\x42ox\x12)\n\x07leftTop\x18\x01 \x01(\x0b\x32\x18.com.loorr.message.Point\x12-\n\x0brightBottom\x18\x02 \x01(\x0b\x32\x18.com.loorr.message.Point\"\x98\x01\n\x0cSegmentation\x12\n\n\x02id\x18\x01 \x01(\r\x12,\n\x0csegmentation\x18\x02 \x01(\x0b\x32\x16.com.loorr.message.Rle\x12\x0c\n\x04\x62\x62ox\x18\x03 \x03(\x02\x12\r\n\x05score\x18\x04 \x01(\x02\x12\x0c\n\x04\x61rea\x18\x05 \x01(\x04\x12\x12\n\ncategoryId\x18\x06 \x01(\x05\x12\x0f\n\x07\x63lassId\x18\x07 \x01(\x05\"#\n\x03Rle\x12\x0c\n\x04size\x18\x01 \x03(\r\x12\x0e\n\x06\x63ounts\x18\x02 \x03(\x04*.\n\x0bSegmentType\x12\x08\n\x04\x41UTO\x10\x00\x12\n\n\x06SINGLE\x10\x01\x12\t\n\x05MULTI\x10\x02\x42\x16\x42\x12SegmentCommonProtoP\x01\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'SegmentCommon_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'B\022SegmentCommonProtoP\001'
  _SEGMENTTYPE._serialized_start=375
  _SEGMENTTYPE._serialized_end=421
  _POINT._serialized_start=42
  _POINT._serialized_end=84
  _BOX._serialized_start=86
  _BOX._serialized_end=181
  _SEGMENTATION._serialized_start=184
  _SEGMENTATION._serialized_end=336
  _RLE._serialized_start=338
  _RLE._serialized_end=373
# @@protoc_insertion_point(module_scope)
