{
  "src/ts/components/Input.tsx": {
    "displayName": "Input",
    "description": "",
    "props": {
      "id": {
        "description": "Unique ID to identify this component in Dash callbacks.",
        "required": false,
        "defaultValue": {
          "value": "Math.random().toString(36).substring(2, 7)",
          "computed": false
        },
        "type": {
          "name": "string",
          "raw": "string"
        }
      },
      "type": {
        "description": "",
        "required": false,
        "defaultValue": {
          "value": "'text'",
          "computed": false
        },
        "type": {
          "name": "string",
          "raw": "string"
        }
      },
      "className": {
        "description": "",
        "required": false,
        "type": {
          "name": "string",
          "raw": "string"
        }
      },
      "value": {
        "description": "",
        "required": false,
        "type": {
          "name": "any",
          "raw": "any"
        }
      },
      "label": {
        "description": "",
        "required": false,
        "type": {
          "name": "string",
          "raw": "string"
        }
      },
      "helper_text": {
        "description": "",
        "required": false,
        "type": {
          "name": "string",
          "raw": "string"
        }
      },
      "disabled": {
        "description": "",
        "required": false,
        "defaultValue": {
          "value": "false",
          "computed": false
        },
        "type": {
          "name": "bool",
          "raw": "boolean"
        }
      },
      "setProps": {
        "description": "Update props to trigger callbacks.",
        "required": true,
        "type": {
          "name": "func",
          "raw": "(props: Record<string, any>) => void"
        }
      },
      "children": {
        "description": "",
        "required": false,
        "type": {
          "name": "node",
          "raw": "ReactNode"
        }
      }
    },
    "isContext": false
  },
  "src/ts/components/Panel.tsx": {
    "displayName": "Panel",
    "description": "",
    "props": {
      "id": {
        "description": "Unique ID to identify this component in Dash callbacks.",
        "required": false,
        "defaultValue": {
          "value": "Math.random().toString(36).substring(2, 7)",
          "computed": false
        },
        "type": {
          "name": "string",
          "raw": "string"
        }
      },
      "bg": {
        "description": "",
        "required": false,
        "defaultValue": {
          "value": "'#ffffff'",
          "computed": false
        },
        "type": {
          "name": "string",
          "raw": "string"
        }
      },
      "customClass": {
        "description": "",
        "required": false,
        "type": {
          "name": "string",
          "raw": "string"
        }
      },
      "color": {
        "description": "",
        "required": false,
        "defaultValue": {
          "value": "'#0092E4'",
          "computed": false
        },
        "type": {
          "name": "string",
          "raw": "string"
        }
      },
      "setProps": {
        "description": "Update props to trigger callbacks.",
        "required": true,
        "type": {
          "name": "func",
          "raw": "(props: Record<string, any>) => void"
        }
      },
      "children": {
        "description": "",
        "required": false,
        "type": {
          "name": "node",
          "raw": "ReactNode"
        }
      }
    },
    "isContext": false
  },
  "src/ts/components/PullDashComponents.tsx": {
    "displayName": "PullDashComponents",
    "description": "Component description",
    "props": {
      "id": {
        "description": "Unique ID to identify this component in Dash callbacks.",
        "required": false,
        "type": {
          "name": "string",
          "raw": "string"
        }
      },
      "setProps": {
        "description": "Update props to trigger callbacks.",
        "required": true,
        "type": {
          "name": "func",
          "raw": "(props: Record<string, any>) => void"
        }
      }
    },
    "isContext": false
  }
}