# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: reads.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='reads.proto',
  package='ont.data_output',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0breads.proto\x12\x0font.data_output\"K\n\x04Read\x12\x0e\n\x06signal\x18\x01 \x03(\x11\x12\n\n\x02id\x18\x02 \x01(\t\x12\x0e\n\x06number\x18\x03 \x01(\r\x12\x17\n\x0fstart_raw_index\x18\x04 \x01(\x04\"\x8f\x01\n\x07\x43hannel\x12$\n\x05reads\x18\x01 \x03(\x0b\x32\x15.ont.data_output.Read\x12\x14\n\x0c\x63hannel_name\x18\x02 \x01(\t\x12\x14\n\x0c\x64igitisation\x18\x03 \x01(\x05\x12\x0e\n\x06offset\x18\x04 \x01(\x05\x12\r\n\x05range\x18\x05 \x01(\x02\x12\x13\n\x0bsample_rate\x18\x06 \x01(\rb\x06proto3'
)




_READ = _descriptor.Descriptor(
  name='Read',
  full_name='ont.data_output.Read',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='signal', full_name='ont.data_output.Read.signal', index=0,
      number=1, type=17, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='id', full_name='ont.data_output.Read.id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='number', full_name='ont.data_output.Read.number', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='start_raw_index', full_name='ont.data_output.Read.start_raw_index', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=107,
)


_CHANNEL = _descriptor.Descriptor(
  name='Channel',
  full_name='ont.data_output.Channel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='reads', full_name='ont.data_output.Channel.reads', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='channel_name', full_name='ont.data_output.Channel.channel_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='digitisation', full_name='ont.data_output.Channel.digitisation', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='offset', full_name='ont.data_output.Channel.offset', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='range', full_name='ont.data_output.Channel.range', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sample_rate', full_name='ont.data_output.Channel.sample_rate', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=110,
  serialized_end=253,
)

_CHANNEL.fields_by_name['reads'].message_type = _READ
DESCRIPTOR.message_types_by_name['Read'] = _READ
DESCRIPTOR.message_types_by_name['Channel'] = _CHANNEL
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Read = _reflection.GeneratedProtocolMessageType('Read', (_message.Message,), {
  'DESCRIPTOR' : _READ,
  '__module__' : 'reads_pb2'
  ,
  '__doc__': """Attributes:
      signal:
          The raw data signal read from the device
      id:
          A GUID value that uniquely represents the read
      number:
          The current number of the read  This number goes up
          sequentially for every read, per channel So for example
          channel 0 and channel 1 both start on read 0, then channel 0
          starts a new read which is read 1, then channel 1 gets a new
          read which is also read 1 and so on
      start_raw_index:
          The absolute raw index that the read began on
  """,
  # @@protoc_insertion_point(class_scope:ont.data_output.Read)
  })
_sym_db.RegisterMessage(Read)

Channel = _reflection.GeneratedProtocolMessageType('Channel', (_message.Message,), {
  'DESCRIPTOR' : _CHANNEL,
  '__module__' : 'reads_pb2'
  ,
  '__doc__': """Attributes:
      reads:
          Accumulation of all reads per channel  At the moment, read
          files are all written out into separate files, so the size of
          this is going to be 1. But it could easily be changed so that
          reads could be accumulated before being written to a file
      channel_name:
          Name of the channel, 1-indexed
      digitisation:
          The range of ADC values that the device produces
      offset:
          The ADC value that is represented at 0 picoamps
      range:
          The range of values in picoamps after calibration
      sample_rate:
          The rate the data is acquired off of the device per second
  """,
  # @@protoc_insertion_point(class_scope:ont.data_output.Channel)
  })
_sym_db.RegisterMessage(Channel)


# @@protoc_insertion_point(module_scope)
