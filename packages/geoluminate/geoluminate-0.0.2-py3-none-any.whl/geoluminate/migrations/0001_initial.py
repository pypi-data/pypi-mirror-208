# Generated by Django 4.2.1 on 2023-05-10 16:44

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import filer.fields.image
import meta.models
import model_utils.fields
from django.conf import settings
from django.db import migrations, models

import geoluminate.db.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("sites", "0002_alter_domain_unique"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Geoluminate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="created",
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="modified",
                    ),
                ),
                (
                    "pid",
                    geoluminate.db.fields.PIDField(
                        alphabet="23456789ABCDEFGHJKLMNPQRSTUVWXYZ",
                        blank=True,
                        length=10,
                        max_length=16,
                        prefix="GHFDB-",
                    ),
                ),
                (
                    "IGSN",
                    models.IntegerField(
                        blank=True,
                        help_text="An International Generic Sample Number for the site.",
                        null=True,
                        verbose_name="IGSN",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Specified site name for the related database entry",
                        max_length=255,
                        null=True,
                        verbose_name="name",
                    ),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326),
                ),
                (
                    "elevation",
                    geoluminate.db.fields.RangeField(
                        blank=True,
                        help_text="elevation with reference to mean sea level (m)",
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(9000),
                            django.core.validators.MinValueValidator(-12000),
                        ],
                        verbose_name="elevation (m)",
                    ),
                ),
                (
                    "acquired",
                    models.DateTimeField(
                        help_text="Date and time of acquisition.",
                        null=True,
                        verbose_name="date acquired",
                    ),
                ),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        help_text="General comments regarding the site and/or measurement",
                        null=True,
                        verbose_name="comment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Geoluminate",
                "verbose_name_plural": "Geoluminate",
                "permissions": [
                    (
                        "geoluminate_database_admin",
                        "Can create, view, update or delete any model associated with the research database",
                    )
                ],
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
        migrations.CreateModel(
            name="GlobalConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "lockdown_enabled",
                    models.BooleanField(
                        choices=[(True, "Admin only"), (False, "Public")],
                        default=False,
                        help_text="Locks down the entire application so that only administrators can log in.",
                        verbose_name="Access rights",
                    ),
                ),
                (
                    "enable_api",
                    models.BooleanField(
                        choices=[(True, "Enabled"), (False, "Disabled")],
                        default=True,
                        help_text="Enable or disable access to the database API.",
                        verbose_name="Status",
                    ),
                ),
                (
                    "custodian",
                    models.OneToOneField(
                        blank=True,
                        limit_choices_to={"is_staff": True},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="custodian",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="custodian",
                    ),
                ),
                (
                    "icon",
                    filer.fields.image.FilerImageField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.FILER_IMAGE_MODEL,
                        verbose_name="Icon",
                    ),
                ),
                (
                    "logo",
                    filer.fields.image.FilerImageField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.FILER_IMAGE_MODEL,
                        verbose_name="Logo",
                    ),
                ),
                (
                    "site",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sites.site",
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuration",
                "db_table": "global_config",
            },
        ),
    ]
