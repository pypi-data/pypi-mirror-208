[tool.poetry]
name = "geoluminate"
version = "0.0.2"
description = ""
authors = ["Sam Jennings <samuel.scott.jennings@gmail.com>"]
license = "GPL-3.0-or-later"
readme = "README.md"
packages = [{include = "geoluminate"}]
homepage = "https://github.com/Geoluminate/geoluminate"
keywords = ["research", "database", "research data management", "open data", "geoluminate", "FAIR"]
classifiers = [
    "Development Status :: 1 - Planning",
    "Framework :: Django :: 4.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
psycopg2-binary = "^2.9.5"
django-cms = "^3.11.1"
djangocms-frontend = "^1.1.0"
django-allauth = "^0.53.1"
django-invitations = "^2.0.0"
django-fluent-comments = {extras = ["threadedcomments"], version = "^3.0"}
django-storages = "^1.13.2"
django-crispy-forms = "^2.0"
crispy-bootstrap5 = "^0.7"
django-filter = "^22.1"
djangorestframework = "^3.14.0"
drf-spectacular = {extras = ["sidecar"], version = "^0.26.1"}
drf-access-policy = "^1.5.0"
drf-orjson-renderer = "^1.7.1"
shortuuid = "^1.0.11"
whitenoise = "^6.4.0"
gunicorn = "^20.1.0"
redis = "^4.5.2"
django-solo = "^2.0.0"
django-social-share = "^2.3.0"
django-simple-menu = "^2.1.1"
django-split-settings = "^1.2.0"
django-lockdown = "^4.0.0"
django-meta = "^2.1.0"
django-htmx = "^1.14.0"
djangorestframework-gis = "^1.0"
drf-nested-routers = "^0.93.4"
django-rosetta = "^0.9.8"
drf-schema-adapter = "^3.0.6"
django-model-utils = "^4.3.1"
django-postgres-metrics = "^0.13.1"
django-dbbackup = "^4.0.2"
django-spaghetti-and-meatballs = "^0.4.2"
django-celery-beat = "^2.5.0"
django-adminactions = "^2.0.0"
django-jazzmin = "^2.6.0"
django-import-export = "^3.1.0"
django-nested-admin = "^4.0.2"
djangorestframework-datatables-editor = "^0.3.3"
sentry-sdk = {extras = ["django"], version = "^1.17.0"}
django-environ = "^0.10.0"
django-compressor = "^4.3.1"
django-libsass = "^0.9"
django-cors-headers = "^3.14.0"
tldextract = "^3.4.0"
django-pint = "^0.7.1"
dj-rest-auth = "^3.0.0"
django-tellme = "^0.7.3"
django = {extras = ["argon2"], version = ">=3.2"}
pyyaml = "^6.0"
celery = "^5.2.7"
polib = "^1.2.0"
django-select2 = "^8.1.1"
django-literature = "^0.1.2"
django-filer = "^2.2.4"
django-laboratory = "^0.0.1"
flower = "^1.2.0"
django-treebeard = "<4.5"
django-modeltranslation = "^0.18.9"
django-redis = "^5.2.0"

[tool.poetry.group.dev.dependencies]
coverage = "^7.2.1"
black = "^23.1.0"
pytest = "^7.2.2"
factory-boy = "^3.2.1"
django-coverage-plugin = "^3.0.0"
pytest-django = "^4.5.2"
django-stubs = "^1.15.0"
pylint-django = "^2.5.3"
model-bakery = "^1.10.1"
invoke = "^2.0.0"
tox = "^4.4.6"
deptry = "^0.8.0"
mypy = "^1.2.0"
pre-commit = "^3.2.2"
pytest-cov = "^4.0.0"
types-requests = "^2.28.11.17"
types-python-dateutil = "^2.8.19.12"
pytest-sugar = "^0.9.7"
types-polib = "^1.2.0.0"
django-extensions = "^3.2.1"
watchfiles = "^0.19.0"
djlint = "^1.25.0"


[tool.poetry.group.docs.dependencies]
sphinx = "^6.1.3"
sphinx-copybutton = "^0.5.1"
sphinxext-opengraph = "^0.8.1"
sphinx-book-theme = "^1.0.0"
myst-parser = "^0.19.1"
sphinx-autobuild = "^2021.3.14"
toml = "^0.10.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 120
target-version = ['py38']
preview = true

[tool.isort]
profile = "black"

[tool.mypy]
files = ["geoluminate"]
disallow_untyped_defs = "False"
disallow_any_unimported = "False"
ignore_missing_imports = "True"
no_implicit_optional = "True"
check_untyped_defs = "False"
warn_return_any = "True"
warn_unused_ignores = "True"
follow_imports = "skip"
pretty = "True"
exclude = [
    "docs/",
    "migrations/",
    "tests/settings.py",
    "geoluminate/conf/*",
    "geoluminate/contrib/user/forms/*",
    ] 
mypy_path = "./geoluminate/"
plugins = ["mypy_django_plugin.main"]

[[tool.mypy.overrides]]
module = "geoluminate.models"
disable_error_code = [
    "var-annotated",
]

[[tool.mypy.overrides]]
module = "geoluminate.contrib.controlled_vocabulary.models"
disable_error_code = [
    "var-annotated",
]

[[tool.mypy.overrides]]
module = "geoluminate.contrib.gis.base"
disable_error_code = [
    "var-annotated",
]

[[tool.mypy.overrides]]
module = "geoluminate.db.models"
disable_error_code = [
    "var-annotated",
]

[tool.django-stubs]
django_settings_module = "tests.settings"

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
exclude = ['docs/', 'migrations/', 'tests/*.py','geoluminate/conf/*',]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    "TRY003",

    "A003",
    "F403",
    "F405",
    "C901",
]

[tool.ruff.per-file-ignores]
# "tests/*" = ["S101","S105"]
"**/tests/*" = ["S101","S105"]
# "**/models.py" = ["A003",]
# "docs/conf.py" = ["*"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["test_*.py", "*_test.py", "testing/python/*.py"]
filterwarnings = [
    "ignore",
    "default:::geoluminate",
]


[tool.coverage.report]
skip_empty = true
omit = [
    "*site-packages*",
    "*tests*",
    "*.tox*",
    ]
show_missing = "true"

[tool.coverage.run]
branch = "true"
source = ["geoluminate"]


[tool.deptry]
extend_exclude = [
    "tasks.py",
    "docs",
    ".*tests",
]
ignore_transitive = [
    "toml",
]
# deptry checks imports but doesn't detect apps in djangos installed_apps settings. These must be listed here to avoid dependency errors.
ignore_obsolete = [
        "dj-rest-auth",
        "django-adminactions",
        "django-celery-beat",
        "django-compressor",
        "django-cors-headers",
        "django-dbbackup",
        "django-htmx",
        "django-libsass",
        "django-nested-admin",
        "django-postgres-metrics",
        "django-social-share",
        "django-spaghetti-and-meatballs",
        "django-tellme",
        "djangocms-frontend",
        "gunicorn",
        "psycopg2-binary",
        "redis",
        "whitenoise",
        "django-laboratory",
]


[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist = true
envlist = py38, py39, py310, py311

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310
    3.11: py311
    
[testenv]
passenv = PYTHON_VERSION
allowlist_externals = poetry
commands =
    poetry install -v --without docs
    pytest --doctest-modules tests --cov --cov-config=pyproject.toml --cov-report=xml
    mypy
"""

