import json

import pandas as pd
import requests

update_modes = {"1": "update_mode|1",
                "5": "update_mode|5",
                "15": "update_mode|15",
                "30": "update_mode|30",
                "60": "update_mode|60",
                "120": "update_mode|120",
                "240": "update_mode|240",
                "1D": "update_mode|1D",
                "1W": "update_mode|1W"}


def clean_columns(columns):
    to_remove = ['change.60',
                 'change_abs.60',
                 'change.1',
                 'change_abs.1',
                 'change.1M',
                 'change_abs.1M',
                 'change.1W',
                 'change_abs.1W',
                 'change.240',
                 'change_abs.240',
                 'change.5',
                 'change_abs.5',
                 'change.15',
                 'change_abs.15',
                 'change_from_open',
                 'change_from_open_abs',
                 'candlestick',
                 'relative_volume_intraday.5']

    columns = [e for e in columns if e not in to_remove]
    return list(dict.fromkeys(columns))


class Screener:
    main_columns = ["logoid", "name", "description", "type", "subtype", "pricescale", "minmov", "fractional",
                    "minmove2",
                    "currency", "fundamental_currency_code"]

    def __init__(self, subtype="global"):
        self.subtype = subtype
        self.url = f"https://scanner.tradingview.com/{subtype}/scan"
        self.filters = []
        self.options = {}
        self.markets = []
        self.symbols = None
        self.range = None
        self.update_mode = None
        self.market_columns = None

    def add_filter(self, column, operation, values=None):
        filter_val = {"left": column, "operation": operation}
        if values:
            filter_val["right"] = values
        self.filters.append(filter_val)

    def add_option(self, key, value):
        self.options[key] = value

    def set_markets(self, *market):
        self.markets.extend(market)

    def set_range(self, from_range=0, to_range=10000):
        self.range = [from_range, to_range]

    def set_update_mode(self, update_mode="1D"):
        self.update_mode = update_modes[update_mode]

    def set_symbols(self, symbols):
        self.symbols = symbols

    def get(self):
        payload = {}
        if len(self.filters) > 0:
            payload["filter"] = self.filters
        if len(self.options) > 0:
            payload["options"] = self.options
        if len(self.markets) > 0:
            payload["markets"] = self.markets
        if self.symbols:
            payload["symbols"] = self.symbols
        if len(self.range) > 0:
            payload["range"] = self.range

        self.main_columns.append(self.update_mode)
        if self.subtype == "global":
            self.main_columns.extend(columns_stocks)
        elif self.subtype == "forex":
            self.main_columns.extend(columns_forex)
        elif self.subtype == "crypto":
            self.main_columns.extend(columns_crypto)

        payload["columns"] = clean_columns(self.main_columns)
        payload_json = json.dumps(payload)
        res = requests.post(self.url, data=payload_json)
        if res.status_code == 200:
            data = res.json()['data']
            data = [d["d"] for d in data]
            return pd.DataFrame(data, columns=payload["columns"])
        else:
            return res.json()


columns_stocks = ['High.1M',
                  'Low.1M',
                  'beta_1_year',
                  'High.3M',
                  'Low.3M',
                  'Perf.3M',
                  'High.6M',
                  'Low.6M',
                  'Perf.6M',
                  'price_52_week_high',
                  'price_52_week_low',
                  'High.All',
                  'Low.All',
                  'Aroon.Down',
                  'Aroon.Up',
                  'ADR',
                  'ADX',
                  'ATR',
                  'average_volume_10d_calc',
                  'average_volume_30d_calc',
                  'average_volume_60d_calc',
                  'average_volume_90d_calc',
                  'AO',
                  'basic_eps_net_income',
                  'earnings_per_share_basic_ttm',
                  'BB.lower',
                  'BB.upper',
                  'BBPower',
                  'ChaikinMoneyFlow',
                  'change',
                  'change_abs',
                  'close',
                  'Recommend.MA',
                  'SMA20',
                  'SMA50',
                  'SMA200',
                  'CCI20',
                  'country',
                  'current_ratio',
                  'debt_to_equity',
                  'dividends_paid',
                  'dps_common_stock_prim_issue_fy',
                  'dividends_per_share_fq',
                  'dividend_yield_recent',
                  'DonchCh20.Lower',
                  'DonchCh20.Upper',
                  'ebitda',
                  'enterprise_value_ebitda_ttm',
                  'enterprise_value_fq',
                  'last_annual_eps',
                  'earnings_per_share_fq',
                  'earnings_per_share_diluted_ttm',
                  'earnings_per_share_forecast_next_fq',
                  'exchange',
                  'EMA5',
                  'EMA10',
                  'EMA20',
                  'EMA30',
                  'EMA50',
                  'EMA100',
                  'EMA200',
                  'gap',
                  'goodwill',
                  'gross_margin',
                  'gross_profit',
                  'gross_profit_fq',
                  'high',
                  'HullMA9',
                  'Ichimoku.BLine',
                  'Ichimoku.CLine',
                  'Ichimoku.Lead1',
                  'Ichimoku.Lead2',
                  'industry',
                  'KltChnl.lower',
                  'KltChnl.upper',
                  'last_annual_revenue',
                  'low',
                  'MACD.macd',
                  'MACD.signal',
                  'market_cap_basic',
                  'Mom',
                  'MoneyFlow',
                  'Perf.1M',
                  'ADX-DI',
                  'net_debt',
                  'net_income',
                  'after_tax_margin',
                  'number_of_employees',
                  'number_of_shareholders',
                  'open',
                  'operating_margin',
                  'Recommend.Other',
                  'P.SAR',
                  'Pivot.M.Camarilla.Middle',
                  'Pivot.M.Camarilla.R1',
                  'Pivot.M.Camarilla.R2',
                  'Pivot.M.Camarilla.R3',
                  'Pivot.M.Camarilla.S1',
                  'Pivot.M.Camarilla.S2',
                  'Pivot.M.Camarilla.S3',
                  'Pivot.M.Classic.Middle',
                  'Pivot.M.Classic.R1',
                  'Pivot.M.Classic.R2',
                  'Pivot.M.Classic.R3',
                  'Pivot.M.Classic.S1',
                  'Pivot.M.Classic.S2',
                  'Pivot.M.Classic.S3',
                  'Pivot.M.Demark.Middle',
                  'Pivot.M.Demark.R1',
                  'Pivot.M.Demark.S1',
                  'Pivot.M.Fibonacci.Middle',
                  'Pivot.M.Fibonacci.R1',
                  'Pivot.M.Fibonacci.R2',
                  'Pivot.M.Fibonacci.R3',
                  'Pivot.M.Fibonacci.S1',
                  'Pivot.M.Fibonacci.S2',
                  'Pivot.M.Fibonacci.S3',
                  'Pivot.M.Woodie.Middle',
                  'Pivot.M.Woodie.R1',
                  'Pivot.M.Woodie.R2',
                  'Pivot.M.Woodie.R3',
                  'Pivot.M.Woodie.S1',
                  'Pivot.M.Woodie.S2',
                  'Pivot.M.Woodie.S3',
                  'ADX+DI',
                  'postmarket_change',
                  'postmarket_change_abs',
                  'postmarket_close',
                  'postmarket_high',
                  'postmarket_low',
                  'postmarket_open',
                  'postmarket_volume',
                  'premarket_change',
                  'premarket_change_abs',
                  'premarket_change_from_open',
                  'premarket_change_from_open_abs',
                  'premarket_close',
                  'premarket_gap',
                  'premarket_high',
                  'premarket_low',
                  'premarket_open',
                  'premarket_volume',
                  'pre_tax_margin',
                  'price_book_ratio',
                  'price_book_fq',
                  'price_earnings_ttm',
                  'price_free_cash_flow_ttm',
                  'price_revenue_ttm',
                  'price_sales_ratio',
                  'quick_ratio',
                  'ROC',
                  'earnings_release_date',
                  'RSI7',
                  'RSI',
                  'relative_volume_10d_calc',
                  'return_on_assets',
                  'return_on_equity',
                  'return_on_invested_capital',
                  'revenue_per_employee',
                  'sector',
                  'float_shares_outstanding',
                  'SMA5',
                  'SMA10',
                  'SMA30',
                  'SMA100',
                  'Stoch.D',
                  'Stoch.K',
                  'Stoch.RSI.K',
                  'Stoch.RSI.D',
                  'Recommend.All',
                  'total_assets',
                  'total_current_assets',
                  'total_debt',
                  'total_liabilities_fy',
                  'total_liabilities_fq',
                  'total_revenue',
                  'total_shares_outstanding_fundamental',
                  'UO',
                  'earnings_release_next_date',
                  'Volatility.D',
                  'Volatility.M',
                  'Volatility.W',
                  'volume',
                  'Value.Traded',
                  'VWAP',
                  'VWMA',
                  'Perf.W',
                  'W.R',
                  'Perf.Y',
                  'Perf.YTD',
                  "Candle.AbandonedBaby.Bearish", "Candle.AbandonedBaby.Bullish", "Candle.Engulfing.Bearish",
                  "Candle.Harami.Bearish", "Candle.Engulfing.Bullish", "Candle.Harami.Bullish", "Candle.Doji",
                  "Candle.Doji.Dragonfly", "Candle.EveningStar", "Candle.Doji.Gravestone", "Candle.Hammer",
                  "Candle.HangingMan", "Candle.InvertedHammer", "Candle.Kicking.Bearish", "Candle.Kicking.Bullish",
                  "Candle.LongShadow.Lower", "Candle.LongShadow.Upper", "Candle.Marubozu.Black",
                  "Candle.Marubozu.White", "Candle.MorningStar", "Candle.ShootingStar", "Candle.SpinningTop.Black",
                  "Candle.SpinningTop.White", "Candle.3BlackCrows", "Candle.3WhiteSoldiers", "Candle.TriStar.Bearish",
                  "Candle.TriStar.Bullish"]

columns_crypto = ['BB.lower',
                  'BB.upper',
                  'close',
                  'Recommend.MA',
                  'SMA20',
                  'SMA50',
                  'SMA200',
                  'Aroon.Down',
                  'Aroon.Up',
                  'low',
                  'DonchCh20.Lower',
                  'DonchCh20.Upper',
                  'market_cap_calc',
                  'market_cap_diluted_calc',
                  'CCI20',
                  'Low.All',
                  'ask',
                  'gap',
                  'Recommend.Other',
                  'W.R',
                  'ADR',
                  'ATR',
                  'high',
                  'Ichimoku.Lead1',
                  'Ichimoku.Lead2',
                  'ADX-DI',
                  'ADX+DI',
                  'RSI7',
                  'RSI',
                  'ADX',
                  'KltChnl.lower',
                  'KltChnl.upper',
                  'Ichimoku.BLine',
                  'Ichimoku.CLine',
                  'AO',
                  'exchange',
                  'Mom',
                  'EMA5',
                  'EMA10',
                  'EMA20',
                  'EMA30',
                  'EMA50',
                  'EMA100',
                  'EMA200',
                  'HullMA9',
                  'VWMA',
                  'SMA5',
                  'SMA10',
                  'SMA30',
                  'SMA100',
                  'MACD.macd',
                  'Recommend.All',
                  'bid',
                  'UO',
                  'open',
                  'P.SAR',
                  'Perf.Y',
                  'Perf.1M',
                  'Perf.3M',
                  'Perf.6M',
                  'Perf.W',
                  'Perf.YTD',
                  'total_shares_outstanding',
                  'Pivot.M.Camarilla.Middle',
                  'Pivot.M.Camarilla.R1',
                  'Pivot.M.Camarilla.R2',
                  'Pivot.M.Camarilla.R3',
                  'Pivot.M.Camarilla.S1',
                  'Pivot.M.Camarilla.S2',
                  'Pivot.M.Camarilla.S3',
                  'Pivot.M.Classic.Middle',
                  'Pivot.M.Classic.R1',
                  'Pivot.M.Classic.R2',
                  'Pivot.M.Classic.R3',
                  'Pivot.M.Classic.S1',
                  'Pivot.M.Classic.S2',
                  'Pivot.M.Classic.S3',
                  'Pivot.M.Demark.Middle',
                  'Pivot.M.Demark.R1',
                  'Pivot.M.Demark.S1',
                  'Pivot.M.Fibonacci.Middle',
                  'Pivot.M.Fibonacci.R1',
                  'Pivot.M.Fibonacci.R2',
                  'Pivot.M.Fibonacci.R3',
                  'Pivot.M.Fibonacci.S1',
                  'Pivot.M.Fibonacci.S2',
                  'Pivot.M.Fibonacci.S3',
                  'Pivot.M.Woodie.Middle',
                  'Pivot.M.Woodie.R1',
                  'Pivot.M.Woodie.R2',
                  'Pivot.M.Woodie.R3',
                  'Pivot.M.Woodie.S1',
                  'Pivot.M.Woodie.S2',
                  'Pivot.M.Woodie.S3',
                  'Low.6M',
                  'price_52_week_low',
                  'Low.1M',
                  'Low.3M',
                  'High.6M',
                  'price_52_week_high',
                  'High.1M',
                  'High.3M',
                  'VWAP',
                  'BBPower',
                  'Stoch.RSI.D',
                  'Stoch.RSI.K',
                  'MACD.signal',
                  'High.All',
                  'Stoch.D',
                  'Stoch.K',
                  'ROC',
                  'total_shares_diluted',
                  'change',
                  'change_abs',
                  'Volatility.D',
                  'Volatility.M',
                  'Volatility.W',
                  'volume',
                  'average_volume_10d_calc',
                  'average_volume_30d_calc',
                  'average_volume_60d_calc',
                  'average_volume_90d_calc',
                  'total_value_traded',
                  'relative_volume_10d_calc',
                  "Candle.AbandonedBaby.Bearish", "Candle.AbandonedBaby.Bullish", "Candle.Engulfing.Bearish",
                  "Candle.Harami.Bearish", "Candle.Engulfing.Bullish", "Candle.Harami.Bullish", "Candle.Doji",
                  "Candle.Doji.Dragonfly", "Candle.EveningStar", "Candle.Doji.Gravestone", "Candle.Hammer",
                  "Candle.HangingMan", "Candle.InvertedHammer", "Candle.Kicking.Bearish", "Candle.Kicking.Bullish",
                  "Candle.LongShadow.Lower", "Candle.LongShadow.Upper", "Candle.Marubozu.Black",
                  "Candle.Marubozu.White", "Candle.MorningStar", "Candle.ShootingStar", "Candle.SpinningTop.Black",
                  "Candle.SpinningTop.White", "Candle.3BlackCrows", "Candle.3WhiteSoldiers", "Candle.TriStar.Bearish",
                  "Candle.TriStar.Bullish"]

columns_forex = ['BB.lower',
                 'BB.upper',
                 'close',
                 'Recommend.MA',
                 'SMA20',
                 'SMA50',
                 'SMA200',
                 'Aroon.Down',
                 'Aroon.Up',
                 'low',
                 'DonchCh20.Lower',
                 'DonchCh20.Upper',
                 'CCI20',
                 'Low.All',
                 'ask',
                 'gap',
                 'Recommend.Other',
                 'W.R',
                 'ADR',
                 'ATR',
                 'sector',
                 'high',
                 'Ichimoku.Lead1',
                 'Ichimoku.Lead2',
                 'ADX-DI',
                 'ADX+DI',
                 'RSI7',
                 'RSI',
                 'ADX',
                 'KltChnl.lower',
                 'KltChnl.upper',
                 'Ichimoku.BLine',
                 'Ichimoku.CLine',
                 'AO',
                 'Mom',
                 'EMA5',
                 'EMA10',
                 'EMA20',
                 'EMA30',
                 'EMA50',
                 'EMA100',
                 'EMA200',
                 'HullMA9',
                 'VWMA',
                 'SMA5',
                 'SMA10',
                 'SMA30',
                 'SMA100',
                 'MACD.macd',
                 'Recommend.All',
                 'bid',
                 'UO',
                 'open',
                 'P.SAR',
                 'Perf.Y',
                 'Perf.1M',
                 'Perf.3M',
                 'Perf.6M',
                 'Perf.W',
                 'Perf.YTD',
                 'Pivot.M.Camarilla.Middle',
                 'Pivot.M.Camarilla.R1',
                 'Pivot.M.Camarilla.R2',
                 'Pivot.M.Camarilla.R3',
                 'Pivot.M.Camarilla.S1',
                 'Pivot.M.Camarilla.S2',
                 'Pivot.M.Camarilla.S3',
                 'Pivot.M.Classic.Middle',
                 'Pivot.M.Classic.R1',
                 'Pivot.M.Classic.R2',
                 'Pivot.M.Classic.R3',
                 'Pivot.M.Classic.S1',
                 'Pivot.M.Classic.S2',
                 'Pivot.M.Classic.S3',
                 'Pivot.M.Demark.Middle',
                 'Pivot.M.Demark.R1',
                 'Pivot.M.Demark.S1',
                 'Pivot.M.Fibonacci.Middle',
                 'Pivot.M.Fibonacci.R1',
                 'Pivot.M.Fibonacci.R2',
                 'Pivot.M.Fibonacci.R3',
                 'Pivot.M.Fibonacci.S1',
                 'Pivot.M.Fibonacci.S2',
                 'Pivot.M.Fibonacci.S3',
                 'Pivot.M.Woodie.Middle',
                 'Pivot.M.Woodie.R1',
                 'Pivot.M.Woodie.R2',
                 'Pivot.M.Woodie.R3',
                 'Pivot.M.Woodie.S1',
                 'Pivot.M.Woodie.S2',
                 'Pivot.M.Woodie.S3',
                 'Low.6M',
                 'price_52_week_low',
                 'Low.1M',
                 'Low.3M',
                 'High.6M',
                 'price_52_week_high',
                 'High.1M',
                 'High.3M',
                 'VWAP',
                 'BBPower',
                 'country',
                 'Stoch.RSI.D',
                 'Stoch.RSI.K',
                 'MACD.signal',
                 'High.All',
                 'Stoch.D',
                 'Stoch.K',
                 'ROC',
                 'change',
                 'change_abs',
                 'Volatility.D',
                 'Volatility.M',
                 'Volatility.W',
                 "Candle.AbandonedBaby.Bearish", "Candle.AbandonedBaby.Bullish", "Candle.Engulfing.Bearish",
                 "Candle.Harami.Bearish", "Candle.Engulfing.Bullish", "Candle.Harami.Bullish", "Candle.Doji",
                 "Candle.Doji.Dragonfly", "Candle.EveningStar", "Candle.Doji.Gravestone", "Candle.Hammer",
                 "Candle.HangingMan", "Candle.InvertedHammer", "Candle.Kicking.Bearish", "Candle.Kicking.Bullish",
                 "Candle.LongShadow.Lower", "Candle.LongShadow.Upper", "Candle.Marubozu.Black", "Candle.Marubozu.White",
                 "Candle.MorningStar", "Candle.ShootingStar", "Candle.SpinningTop.Black", "Candle.SpinningTop.White",
                 "Candle.3BlackCrows", "Candle.3WhiteSoldiers", "Candle.TriStar.Bearish", "Candle.TriStar.Bullish"]
