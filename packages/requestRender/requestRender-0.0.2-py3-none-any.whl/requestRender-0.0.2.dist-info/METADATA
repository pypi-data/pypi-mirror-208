Metadata-Version: 2.1
Name: requestRender
Version: 0.0.2
Summary: A PyPI package that provides a simple headless Selenium web browser for scraping wrapper around reactive websites.
Maintainer: Milan Lovis Ramthun
Maintainer-email: dev.math.milan@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: chromedriver-autoinstaller
Requires-Dist: requests
Requires-Dist: selenium

# requestRender
A PyPI package that provides a simple headless Selenium web browser for scraping wrapper around reactive websites.

# How to install it
```
pip install requestRender
```
You also need the have Chrome installed to run this, because it uses Selenuim with Chrome as a headless Browser.

# How to use it?
```
import requests
import requestRender

# Start a session
session = requests.Session()
# Start the browser
browser = requestRender.requestRender.RequestRender(session)
# Get the response from the website
response = session.get("https://www.midjourney.com")  
# Render the response to get the render the javascript content
html = browser.renderResponse(response)
# Save the html to a file
with open("index.html", "w", encoding="utf-8") as f:
    f.write(html)
```

# What needs to Improve

1. The logging off the Browser needs be disabeld.
2. A methode to determin if a website has loaded fully. At the moment the software just waits a 3 Seconds.
