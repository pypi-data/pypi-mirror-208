# SPDX-FileCopyrightText: Peter Pentchev <roam@ringlet.net>
# SPDX-License-Identifier: BSD-2-Clause

[tox]
minversion = 4.1
envlist =
  ruff
  ruff-all
  format
  pep8
  mypy
  pylint
  pydocstyle
  pyupgrade
  unit-tests
isolated_build = True

[defs]
pyfiles =
  src/parse_stages \
  unit_tests

[testenv:ruff]
skip_install = True
tags =
  check
deps =
  ruff >= 0.0.267, < 0.1
commands =
  ruff check --config config/ruff-most/pyproject.toml -- {[defs]pyfiles}

[testenv:ruff-all]
skip_install = True
tags =
  check
deps =
  ruff == 0.0.267
commands =
  ruff check --config config/ruff-all/pyproject.toml -- {[defs]pyfiles}

[testenv:format]
skip_install = True
tags =
  check
deps =
  black >= 23, < 24
  ruff >= 0.0.267, < 0.1
commands =
  ruff check --config config/ruff-base/pyproject.toml --select=I --diff -- {[defs]pyfiles}
  black --check {[defs]pyfiles}

[testenv:reformat]
skip_install = True
tags =
  format
  manual
deps =
  black >= 23, < 24
  ruff >= 0.0.267, < 0.1
commands =
  ruff check --config config/ruff-base/pyproject.toml --select=I --fix -- {[defs]pyfiles}
  black {[defs]pyfiles}

# Add flake8-import-conventions if it ever hits PyPI
[testenv:pep8]
skip_install = True
tags =
  check
deps =
  flake8 >= 5, < 7
  flake8-2020 >= 1, < 2
  flake8-annotations >= 3, < 4
  flake8-blind-except >= 0.2, < 0.3
  flake8-bugbear >= 23, < 24
  flake8-builtins >= 2, < 3
  flake8-commas >= 2, < 3
  flake8-comprehensions >= 3, < 4
  flake8-datetimez >= 20, < 21
  flake8-debugger >= 4, < 5
  flake8-executable >= 2, < 3
  flake8-implicit-str-concat >= 0.4, < 0.5
  flake8-no-pep420 >= 2, < 3
  flake8-pie >= 0.16, < 0.17
  flake8-print >= 5, < 6
  flake8-pytest-style >= 1, < 2
  flake8-quotes >= 3, < 4
  flake8-return >= 1, < 2
  flake8-simplify >= 0.20, < 0.21
  flake8-use-pathlib >= 0.3, < 0.4
  mccabe >= 0.7, < 0.8
  pep8-naming >= 0.13, < 0.14
  pycodestyle >= 2.10, < 3
  tryceratops >= 2, < 3
commands =
  flake8 {[defs]pyfiles}
  pycodestyle {[defs]pyfiles}

[testenv:mypy]
skip_install = True
tags =
  check
deps =
  -r requirements/install.txt
  -r requirements/test.txt
  mypy >= 0.981
setenv =
  MYPYPATH = {toxinidir}/stubs
commands =
  mypy {[defs]pyfiles}

[testenv:pylint]
skip_install = True
tags =
  check
deps =
  -r requirements/install.txt
  -r requirements/test.txt
  pylint >= 2.17, < 2.18
commands =
  pylint {[defs]pyfiles}

[testenv:pydocstyle]
skip_install = True
tags =
  check
deps =
  pydocstyle >= 6, < 7
commands =
  pydocstyle {[defs]pyfiles}

[testenv:pyupgrade]
skip_install = True
tags =
  check
  manual
deps =
  pyupgrade >= 3, < 4
allowlist_externals =
  sh
commands =
  sh -c 'pyupgrade --py38-plus src/parse_stages/*.py unit_tests/*.py'

[testenv:unit-tests]
tags =
  tests
deps =
  -r requirements/install.txt
  -r requirements/test.txt
commands =
  pytest {posargs} unit_tests

[testenv:docs]
skip_install = True
tags =
  docs
  manual
deps =
  -r requirements/docs.txt
commands =
  mkdocs build

[testenv:reuse]
skip_install = True
tags =
  check
  manual
deps =
  reuse >= 1, < 2
commands =
  reuse lint
