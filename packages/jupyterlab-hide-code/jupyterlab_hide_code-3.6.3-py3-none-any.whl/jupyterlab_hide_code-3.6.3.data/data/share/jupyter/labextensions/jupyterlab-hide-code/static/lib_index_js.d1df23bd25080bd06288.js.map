{"version":3,"file":"lib_index_js.d1df23bd25080bd06288.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACsH;AAC7B;AACzF,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F;AACA,gNAAgN,gBAAgB,GAAG,SAAS,oFAAoF,MAAM,KAAK,UAAU,+LAA+L,gBAAgB,GAAG,qBAAqB;AAC5jB;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;ACPvC;AACsH;AAC7B;AACW;AACpG,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F,0BAA0B,qFAAiC;AAC3D;AACA,mDAAmD,kEAAkE;AACrH;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;;;;;;ACTiB;AACH;AACE;AAC3B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,YAAY,wEAAsB;AAClC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,oCAAoC,+DAAa;AACjD;AACA;AACA;AACA;AACA,SAAS;AACT,oCAAoC,+DAAa;AACjD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,kEAAkB;AACrC;AACA;AACA,SAAS;AACT;AACA;AACA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;;AC3DgE;AACzF,YAAuF;;AAEvF;;AAEA;AACA;;AAEA,aAAa,0GAAG,CAAC,sFAAO;;;;AAIxB,iEAAe,6FAAc,MAAM","sources":["webpack://jupyterlab-hide-code/./style/base.css","webpack://jupyterlab-hide-code/./style/index.css","webpack://jupyterlab-hide-code/./lib/index.js","webpack://jupyterlab-hide-code/./style/index.css?0140"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\n    See the JupyterLab Developer Guide for useful CSS Patterns:\\n\\n    https://jupyterlab.readthedocs.io/en/stable/developer/css.html\\n*/\\n\\n.fontawesome-colors {\\n  color: gray;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/base.css\"],\"names\":[],\"mappings\":\"AAAA;;;;CAIC;;AAED;EACE,WAAW;AACb\",\"sourcesContent\":[\"/*\\n    See the JupyterLab Developer Guide for useful CSS Patterns:\\n\\n    https://jupyterlab.readthedocs.io/en/stable/developer/css.html\\n*/\\n\\n.fontawesome-colors {\\n  color: gray;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../node_modules/css-loader/dist/cjs.js!./base.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { DisposableDelegate } from '@lumino/disposable';\nimport { ToolbarButton } from '@jupyterlab/apputils';\nimport { NotebookActions } from '@jupyterlab/notebook';\nimport '../style/index.css';\n/**\n * Initialization data for the jupyterlab-hide-code extension.\n */\nconst extension = {\n    id: 'jupyterlab-hide-code',\n    autoStart: true,\n    activate: (app) => {\n        app.docRegistry.addWidgetExtension('Notebook', new ButtonExtension());\n        console.log('JupyterLab extension jupyterlab-hide-code is activated!');\n    }\n};\nexport class ButtonExtension {\n    createNew(panel, context) {\n        const hideInputCode = () => {\n            NotebookActions.runAll(panel.content, context.sessionContext);\n            panel.content.widgets.forEach(cell => {\n                if (cell.model.type === 'code') {\n                    const layout = cell.layout;\n                    layout.widgets[1].hide();\n                }\n            });\n            buttonHideInput.hide();\n            buttonShowInput.show();\n        };\n        const showInputCode = () => {\n            panel.content.widgets.forEach(cell => {\n                if (cell.model.type === 'code') {\n                    const layout = cell.layout;\n                    layout.widgets[1].show();\n                }\n            });\n            buttonHideInput.show();\n            buttonShowInput.hide();\n        };\n        const buttonHideInput = new ToolbarButton({\n            className: 'myButton',\n            iconClass: 'fa fa-sm fa-eye-slash fontawesome-colors',\n            onClick: hideInputCode,\n            tooltip: 'Hide Input'\n        });\n        const buttonShowInput = new ToolbarButton({\n            className: 'myButton',\n            iconClass: 'fa fa-sm fa-eye fontawesome-colors',\n            onClick: showInputCode,\n            tooltip: 'Show Input'\n        });\n        buttonShowInput.hide();\n        panel.toolbar.insertItem(11, 'hideInput', buttonHideInput);\n        panel.toolbar.insertItem(11, 'showInput', buttonShowInput);\n        return new DisposableDelegate(() => {\n            buttonHideInput.dispose();\n            buttonShowInput.dispose();\n        });\n    }\n}\nexport default extension;\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":[],"sourceRoot":""}