# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.7.3, generator: @autorest/python@5.12.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
from copy import deepcopy
from typing import TYPE_CHECKING
import requests
from urllib3.util.retry import Retry

from azure.core import PipelineClient
from msrest import Deserializer, Serializer

from .exceptions import wrap_api_caller_methods_with_error_handling
from . import models
from ._configuration import DesignerServiceClientConfiguration
from .operations import ComponentOperations, ComponentsWorkspaceIndependentOperations, ComputesOperations, \
    ComputesV2Operations, DataSetsOperations, DataSetsV2Operations, ExperimentsOperations, ExperimentsV2Operations, \
    FeedsOperations, FeedsV2Operations, ModelsOperations, ModelsV2Operations, ModuleOperations, \
    ModuleWithAuthOperations, ModulesOperations, ModulesV2Operations, PipelineComponentOperations, \
    PipelineDraftsOperations, PipelineDraftsV2Operations, PipelineEndpointsOperations, PipelineEndpointsV2Operations, \
    PipelineRunsOperations, PipelineRunsV2Operations, PublishedPipelinesOperations, PublishedPipelinesV2Operations, \
    RealTimeEndpointsOperations, RealTimeEndpointsV2Operations, RunsOperations, RunsV2Operations, SamplesOperations, \
    SamplesV2Operations

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Optional

    from azure.core.rest import HttpRequest, HttpResponse

class DesignerServiceClient(object):
    """DesignerServiceClient.

    :ivar component: ComponentOperations operations
    :vartype component: designer.operations.ComponentOperations
    :ivar components_workspace_independent: ComponentsWorkspaceIndependentOperations operations
    :vartype components_workspace_independent:
     designer.operations.ComponentsWorkspaceIndependentOperations
    :ivar computes: ComputesOperations operations
    :vartype computes: designer.operations.ComputesOperations
    :ivar computes_v2: ComputesV2Operations operations
    :vartype computes_v2: designer.operations.ComputesV2Operations
    :ivar data_sets: DataSetsOperations operations
    :vartype data_sets: designer.operations.DataSetsOperations
    :ivar data_sets_v2: DataSetsV2Operations operations
    :vartype data_sets_v2: designer.operations.DataSetsV2Operations
    :ivar experiments: ExperimentsOperations operations
    :vartype experiments: designer.operations.ExperimentsOperations
    :ivar experiments_v2: ExperimentsV2Operations operations
    :vartype experiments_v2: designer.operations.ExperimentsV2Operations
    :ivar feeds: FeedsOperations operations
    :vartype feeds: designer.operations.FeedsOperations
    :ivar feeds_v2: FeedsV2Operations operations
    :vartype feeds_v2: designer.operations.FeedsV2Operations
    :ivar models: ModelsOperations operations
    :vartype models: designer.operations.ModelsOperations
    :ivar models_v2: ModelsV2Operations operations
    :vartype models_v2: designer.operations.ModelsV2Operations
    :ivar module: ModuleOperations operations
    :vartype module: designer.operations.ModuleOperations
    :ivar modules: ModulesOperations operations
    :vartype modules: designer.operations.ModulesOperations
    :ivar modules_v2: ModulesV2Operations operations
    :vartype modules_v2: designer.operations.ModulesV2Operations
    :ivar module_with_auth: ModuleWithAuthOperations operations
    :vartype module_with_auth: designer.operations.ModuleWithAuthOperations
    :ivar pipeline_component: PipelineComponentOperations operations
    :vartype pipeline_component: designer.operations.PipelineComponentOperations
    :ivar pipeline_drafts: PipelineDraftsOperations operations
    :vartype pipeline_drafts: designer.operations.PipelineDraftsOperations
    :ivar pipeline_drafts_v2: PipelineDraftsV2Operations operations
    :vartype pipeline_drafts_v2: designer.operations.PipelineDraftsV2Operations
    :ivar pipeline_endpoints: PipelineEndpointsOperations operations
    :vartype pipeline_endpoints: designer.operations.PipelineEndpointsOperations
    :ivar pipeline_endpoints_v2: PipelineEndpointsV2Operations operations
    :vartype pipeline_endpoints_v2: designer.operations.PipelineEndpointsV2Operations
    :ivar pipeline_runs: PipelineRunsOperations operations
    :vartype pipeline_runs: designer.operations.PipelineRunsOperations
    :ivar pipeline_runs_v2: PipelineRunsV2Operations operations
    :vartype pipeline_runs_v2: designer.operations.PipelineRunsV2Operations
    :ivar published_pipelines: PublishedPipelinesOperations operations
    :vartype published_pipelines: designer.operations.PublishedPipelinesOperations
    :ivar published_pipelines_v2: PublishedPipelinesV2Operations operations
    :vartype published_pipelines_v2: designer.operations.PublishedPipelinesV2Operations
    :ivar real_time_endpoints: RealTimeEndpointsOperations operations
    :vartype real_time_endpoints: designer.operations.RealTimeEndpointsOperations
    :ivar real_time_endpoints_v2: RealTimeEndpointsV2Operations operations
    :vartype real_time_endpoints_v2: designer.operations.RealTimeEndpointsV2Operations
    :ivar runs: RunsOperations operations
    :vartype runs: designer.operations.RunsOperations
    :ivar runs_v2: RunsV2Operations operations
    :vartype runs_v2: designer.operations.RunsV2Operations
    :ivar samples: SamplesOperations operations
    :vartype samples: designer.operations.SamplesOperations
    :ivar samples_v2: SamplesV2Operations operations
    :vartype samples_v2: designer.operations.SamplesV2Operations
    :param base_url: Service URL. Default value is ''.
    :type base_url: str
    """

    def __init__(
        self,
        base_url="http://localhost",  # type: str
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        self._config = DesignerServiceClientConfiguration(**kwargs)

        # Provide user defined session according to the default session of RequestsTransport in
        # azure.core.pipeline.transport._requests_basic to avoid connection aborted 10054 error.
        # We configure max_retries as generated codes of swagger 2.0, which will configure default retry
        # policy and init session in msrest.universal_http.requests.
        def _init_session(session, **kwargs):
            # type: (requests.Session) -> None
            """Init session level configuration of requests.

            This is initialization I want to do once only on a session.
            """
            _protocols = ['http://', 'https://']
            session.trust_env = kwargs.pop('use_env_settings', True)
            method_whitelist = ['HEAD', 'TRACE', 'GET', 'PUT', 'OPTIONS', 'DELETE', 'POST', 'PATCH']
            try:
                # allowed_methods parameter is only supported in urllib3==1.26 or above versions.
                # low versions use the method_whitelist parameter.
                max_retries = Retry(total=3, connect=3, read=3, backoff_factor=0.8,
                                    status_forcelist=self._config.retry_policy._RETRY_CODES,
                                    allowed_methods=method_whitelist)
            except TypeError as e:
                max_retries = Retry(total=3, connect=3, read=3, backoff_factor=0.8,
                                    status_forcelist=self._config.retry_policy._RETRY_CODES,
                                    method_whitelist=method_whitelist)
            
            for p in _protocols:
                session.adapters[p].max_retries = max_retries

        self._session = requests.Session()
        _init_session(self._session, **kwargs)
        self._client = PipelineClient(base_url=base_url, config=self._config, connection_timeout=200, read_timeout=200,
                                      session=self._session, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)
        self._serialize.client_side_validation = False

        # follow azureml._restclient.clientbase.ClientBase's startegy to override
        def pretty_print(self):
            import json
            from azureml._restclient.clientbase import _ErrorEncoder
            return json.dumps(self, indent=4, cls=_ErrorEncoder)

        from azure.ml.component._restclients.designer.models import (DebugInfoResponse, InnerErrorResponse, RootError,
                                                                     ErrorResponse)
        classes_to_pretty_print = [DebugInfoResponse, InnerErrorResponse, RootError, ErrorResponse]
        for class_to_pretty_print in classes_to_pretty_print:
            class_to_pretty_print.__str__ = class_to_pretty_print.__repr__ = pretty_print

        def create_operation(operation_class):
            instance = operation_class(self._client, self._config, self._serialize, self._deserialize)
            wrap_api_caller_methods_with_error_handling(instance)
            return instance

        self.component = create_operation(ComponentOperations)

        self.components_workspace_independent = create_operation(ComponentsWorkspaceIndependentOperations)

        self.computes = create_operation(ComputesOperations)

        self.data_sets = create_operation(DataSetsOperations)

        self.experiments = create_operation(ExperimentsOperations)

        self.feeds = create_operation(FeedsOperations)

        self.models = create_operation(ModelsOperations)

        self.module = create_operation(ModuleOperations)

        self.modules = create_operation(ModulesOperations)

        self.module_with_auth = create_operation(ModuleWithAuthOperations)

        self.pipeline_component = create_operation(PipelineComponentOperations)

        self.pipeline_drafts = create_operation(PipelineDraftsOperations)

        self.pipeline_endpoints = create_operation(PipelineEndpointsOperations)

        self.pipeline_runs = create_operation(PipelineRunsOperations)

        self.published_pipelines = create_operation(PublishedPipelinesOperations)

        self.real_time_endpoints = create_operation(RealTimeEndpointsOperations)

        self.runs = create_operation(RunsOperations)

        self.samples = create_operation(SamplesOperations)

        self.computes_v2 = create_operation(ComputesV2Operations)

        self.data_sets_v2 = create_operation(DataSetsV2Operations)

        self.feeds = create_operation(FeedsOperations)

        self.feeds_v2 = create_operation(FeedsV2Operations)

        self.models = create_operation(ModelsOperations)

        self.models_v2 = create_operation(ModelsV2Operations)

        self.experiments_v2 = create_operation(ExperimentsV2Operations)

        self.models_v2 = create_operation(ModelsV2Operations)

        self.modules_v2 = create_operation(ModulesV2Operations)

        self.pipeline_drafts_v2 = create_operation(PipelineDraftsV2Operations)

        self.pipeline_endpoints_v2 = create_operation(PipelineEndpointsV2Operations)

        self.pipeline_runs_v2 = create_operation(PipelineRunsV2Operations)

        self.published_pipelines_v2 = create_operation(PublishedPipelinesV2Operations)

        self.real_time_endpoints_v2 = create_operation(RealTimeEndpointsV2Operations)

        self.runs_v2 = create_operation(RunsV2Operations)

        self.samples_v2 = create_operation(SamplesV2Operations)

    def _send_request(
        self,
        request,  # type: HttpRequest
        **kwargs  # type: Any
    ):
        # type: (...) -> HttpResponse
        """Runs the network request through the client's chained policies.

        >>> from azure.core.rest import HttpRequest
        >>> request = HttpRequest("GET", "https://www.example.org/")
        <HttpRequest [GET], url: 'https://www.example.org/'>
        >>> response = client._send_request(request)
        <HttpResponse: 200 OK>

        For more information on this code flow, see https://aka.ms/azsdk/python/protocol/quickstart

        :param request: The network request you want to make. Required.
        :type request: ~azure.core.rest.HttpRequest
        :keyword bool stream: Whether the response payload will be streamed. Defaults to False.
        :return: The response of your network call. Does not do error handling on your response.
        :rtype: ~azure.core.rest.HttpResponse
        """
        request_copy = deepcopy(request)
        request_copy.url = self._client.format_url(request_copy.url)
        return self._client.send_request(request_copy, **kwargs)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> DesignerServiceClient
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)