Metadata-Version: 2.1
Name: asyncio_task_logger
Version: 0.0.2
Summary: Allows logging on long running tasks that throw an exception but are still loaded into memory
Author-email: Quantlane <code@quantlane.com>, Jeremiah Payne <jeremiah@pinghajen.com>
Project-URL: Homepage, https://github.com/Pinghajen-Industries-LLC/asyncio-lask-logger
Project-URL: Bug Tracker, https://github.com/Pinghajen-Industries-LLC/asyncio-lask-logger/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE

# asyncio-task-logger
Allows logging on long-running tasks that throw an exception but are still loaded into memory. By default, a task's future doesn't spit out exceptions until it gets garbage collected or completed. This is a problem for long-running tasks.

# Where this code came from
This solution was created by [Quantlane](https://github.com/qntln "Quantlane on GitHub"), but as they didn't seem to be hosting it on PyPI and it would be convenient for me (and probably others) to have it on PyPI, I created this package.

[Link to the original article on Quantlane's website](https://quantlane.com/blog/ensure-asyncio-task-exceptions-get-logged/)
