# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['PublicIpAddressPoolArgs', 'PublicIpAddressPool']

@pulumi.input_type
class PublicIpAddressPoolArgs:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 isp: Optional[pulumi.Input[str]] = None,
                 public_ip_address_pool_name: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a PublicIpAddressPool resource.
        :param pulumi.Input[str] description: The description of the VPC Public IP address pool.
        :param pulumi.Input[str] isp: The Internet service provider. Valid values: `BGP`, `BGP_PRO`, `ChinaTelecom`, `ChinaUnicom`, `ChinaMobile`, `ChinaTelecom_L2`, `ChinaUnicom_L2`, `ChinaMobile_L2`, `BGP_FinanceCloud`. Default Value: `BGP`.
        :param pulumi.Input[str] public_ip_address_pool_name: The name of the VPC Public IP address pool.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if isp is not None:
            pulumi.set(__self__, "isp", isp)
        if public_ip_address_pool_name is not None:
            pulumi.set(__self__, "public_ip_address_pool_name", public_ip_address_pool_name)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the VPC Public IP address pool.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def isp(self) -> Optional[pulumi.Input[str]]:
        """
        The Internet service provider. Valid values: `BGP`, `BGP_PRO`, `ChinaTelecom`, `ChinaUnicom`, `ChinaMobile`, `ChinaTelecom_L2`, `ChinaUnicom_L2`, `ChinaMobile_L2`, `BGP_FinanceCloud`. Default Value: `BGP`.
        """
        return pulumi.get(self, "isp")

    @isp.setter
    def isp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "isp", value)

    @property
    @pulumi.getter(name="publicIpAddressPoolName")
    def public_ip_address_pool_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the VPC Public IP address pool.
        """
        return pulumi.get(self, "public_ip_address_pool_name")

    @public_ip_address_pool_name.setter
    def public_ip_address_pool_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "public_ip_address_pool_name", value)


@pulumi.input_type
class _PublicIpAddressPoolState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 isp: Optional[pulumi.Input[str]] = None,
                 public_ip_address_pool_name: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering PublicIpAddressPool resources.
        :param pulumi.Input[str] description: The description of the VPC Public IP address pool.
        :param pulumi.Input[str] isp: The Internet service provider. Valid values: `BGP`, `BGP_PRO`, `ChinaTelecom`, `ChinaUnicom`, `ChinaMobile`, `ChinaTelecom_L2`, `ChinaUnicom_L2`, `ChinaMobile_L2`, `BGP_FinanceCloud`. Default Value: `BGP`.
        :param pulumi.Input[str] public_ip_address_pool_name: The name of the VPC Public IP address pool.
        :param pulumi.Input[str] status: The status of the VPC Public IP address pool.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if isp is not None:
            pulumi.set(__self__, "isp", isp)
        if public_ip_address_pool_name is not None:
            pulumi.set(__self__, "public_ip_address_pool_name", public_ip_address_pool_name)
        if status is not None:
            pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the VPC Public IP address pool.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def isp(self) -> Optional[pulumi.Input[str]]:
        """
        The Internet service provider. Valid values: `BGP`, `BGP_PRO`, `ChinaTelecom`, `ChinaUnicom`, `ChinaMobile`, `ChinaTelecom_L2`, `ChinaUnicom_L2`, `ChinaMobile_L2`, `BGP_FinanceCloud`. Default Value: `BGP`.
        """
        return pulumi.get(self, "isp")

    @isp.setter
    def isp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "isp", value)

    @property
    @pulumi.getter(name="publicIpAddressPoolName")
    def public_ip_address_pool_name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the VPC Public IP address pool.
        """
        return pulumi.get(self, "public_ip_address_pool_name")

    @public_ip_address_pool_name.setter
    def public_ip_address_pool_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "public_ip_address_pool_name", value)

    @property
    @pulumi.getter
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        The status of the VPC Public IP address pool.
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)


class PublicIpAddressPool(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 isp: Optional[pulumi.Input[str]] = None,
                 public_ip_address_pool_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Provides a VPC Public Ip Address Pool resource.

        For information about VPC Public Ip Address Pool and how to use it, see [What is Public Ip Address Pool](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/createpublicipaddresspool).

        > **NOTE:** Available in v1.186.0+.

        ## Example Usage

        Basic Usage

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        default = alicloud.vpc.PublicIpAddressPool("default",
            description="example_value",
            isp="BGP_PRO",
            public_ip_address_pool_name="example_value")
        ```

        ## Import

        VPC Public Ip Address Pool can be imported using the id, e.g.

        ```sh
         $ pulumi import alicloud:vpc/publicIpAddressPool:PublicIpAddressPool example <id>
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the VPC Public IP address pool.
        :param pulumi.Input[str] isp: The Internet service provider. Valid values: `BGP`, `BGP_PRO`, `ChinaTelecom`, `ChinaUnicom`, `ChinaMobile`, `ChinaTelecom_L2`, `ChinaUnicom_L2`, `ChinaMobile_L2`, `BGP_FinanceCloud`. Default Value: `BGP`.
        :param pulumi.Input[str] public_ip_address_pool_name: The name of the VPC Public IP address pool.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[PublicIpAddressPoolArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Provides a VPC Public Ip Address Pool resource.

        For information about VPC Public Ip Address Pool and how to use it, see [What is Public Ip Address Pool](https://www.alibabacloud.com/help/en/virtual-private-cloud/latest/createpublicipaddresspool).

        > **NOTE:** Available in v1.186.0+.

        ## Example Usage

        Basic Usage

        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        default = alicloud.vpc.PublicIpAddressPool("default",
            description="example_value",
            isp="BGP_PRO",
            public_ip_address_pool_name="example_value")
        ```

        ## Import

        VPC Public Ip Address Pool can be imported using the id, e.g.

        ```sh
         $ pulumi import alicloud:vpc/publicIpAddressPool:PublicIpAddressPool example <id>
        ```

        :param str resource_name: The name of the resource.
        :param PublicIpAddressPoolArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PublicIpAddressPoolArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 isp: Optional[pulumi.Input[str]] = None,
                 public_ip_address_pool_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PublicIpAddressPoolArgs.__new__(PublicIpAddressPoolArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["isp"] = isp
            __props__.__dict__["public_ip_address_pool_name"] = public_ip_address_pool_name
            __props__.__dict__["status"] = None
        super(PublicIpAddressPool, __self__).__init__(
            'alicloud:vpc/publicIpAddressPool:PublicIpAddressPool',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[str]] = None,
            isp: Optional[pulumi.Input[str]] = None,
            public_ip_address_pool_name: Optional[pulumi.Input[str]] = None,
            status: Optional[pulumi.Input[str]] = None) -> 'PublicIpAddressPool':
        """
        Get an existing PublicIpAddressPool resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the VPC Public IP address pool.
        :param pulumi.Input[str] isp: The Internet service provider. Valid values: `BGP`, `BGP_PRO`, `ChinaTelecom`, `ChinaUnicom`, `ChinaMobile`, `ChinaTelecom_L2`, `ChinaUnicom_L2`, `ChinaMobile_L2`, `BGP_FinanceCloud`. Default Value: `BGP`.
        :param pulumi.Input[str] public_ip_address_pool_name: The name of the VPC Public IP address pool.
        :param pulumi.Input[str] status: The status of the VPC Public IP address pool.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PublicIpAddressPoolState.__new__(_PublicIpAddressPoolState)

        __props__.__dict__["description"] = description
        __props__.__dict__["isp"] = isp
        __props__.__dict__["public_ip_address_pool_name"] = public_ip_address_pool_name
        __props__.__dict__["status"] = status
        return PublicIpAddressPool(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        The description of the VPC Public IP address pool.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def isp(self) -> pulumi.Output[str]:
        """
        The Internet service provider. Valid values: `BGP`, `BGP_PRO`, `ChinaTelecom`, `ChinaUnicom`, `ChinaMobile`, `ChinaTelecom_L2`, `ChinaUnicom_L2`, `ChinaMobile_L2`, `BGP_FinanceCloud`. Default Value: `BGP`.
        """
        return pulumi.get(self, "isp")

    @property
    @pulumi.getter(name="publicIpAddressPoolName")
    def public_ip_address_pool_name(self) -> pulumi.Output[Optional[str]]:
        """
        The name of the VPC Public IP address pool.
        """
        return pulumi.get(self, "public_ip_address_pool_name")

    @property
    @pulumi.getter
    def status(self) -> pulumi.Output[str]:
        """
        The status of the VPC Public IP address pool.
        """
        return pulumi.get(self, "status")

