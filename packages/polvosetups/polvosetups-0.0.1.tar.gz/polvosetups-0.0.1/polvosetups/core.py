# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['bash', 'mkdir', 'test', 'miniconda', 'jupyter', 'git_clone', 'polvo_suite', 'controlnet', 'deepfloydif', 'SetupTools',
           'main']

# %% ../nbs/00_core.ipynb 3
import os
import fire
import subprocess
from pathlib import Path

# %% ../nbs/00_core.ipynb 5
def bash(s, **kwargs): subprocess.call(s.split(), **kwargs)

# %% ../nbs/00_core.ipynb 6
def mkdir(path, exist_ok=False, parents=False, overwrite=False, tmp=False, **kwargs):
    "Creates and returns a directory defined by `path`, optionally removing previous existing directory if `overwrite` is `True`"
    path = Path(path)
    if tmp:
        path = tempfile.gettempdir() / path
        parents = True
    if path.exists() and overwrite: shutil.rmtree(path)
    path.mkdir(exist_ok=exist_ok, parents=parents, **kwargs)
    return path

# %% ../nbs/00_core.ipynb 7
def test(): print('Test passed!')

# %% ../nbs/00_core.ipynb 9
def miniconda():
    print('Installing Miniconda...')
    subprocess.call(['wget', 'https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh'])
    subprocess.call(['bash', 'Miniconda3-latest-Linux-x86_64.sh'])
    print('Miniconda installed.')

# %% ../nbs/00_core.ipynb 10
def jupyter(): 
    bash('pip install notebook')

# %% ../nbs/00_core.ipynb 13
def git_clone(url, *args): subprocess.call(['git', 'clone', url, *map(str, args)])

# %% ../nbs/00_core.ipynb 16
def polvo_suite(*args, path=None):
    path = Path(path or '.')
    for name in 'polvo fastpolvo huggingpolvo'.split():
        git_clone(f'https://github.com/lgvaz/{name}', path/name, *args)

# %% ../nbs/00_core.ipynb 18
def controlnet(*args, install=True):
    git_clone('https://github.com/lgvaz/ControlNet', *args)
    subprocess.call('conda env create -f ControlNet/environment.yaml'.split())

# %% ../nbs/00_core.ipynb 19
def deepfloydif(*args):
    "Needs GPU with 40gb"
    bash('pip install deepfloyd_if==1.0.2rc0')
    bash('pip install xformers==0.0.16')
    bash('pip install git+https://github.com/openai/CLIP.git --no-deps')
    bash('protobuf==3.20.0')
    bash('https://raw.githubusercontent.com/huggingface/notebooks/main/diffusers/deepfloyd_if_free_tier_google_colab.ipynb')

# %% ../nbs/00_core.ipynb 20
class SetupTools(object):
    def __init__(self):
        self.test = test
        self.miniconda = miniconda
        self.jupyter = jupyter
        self.polvo_suite = polvo_suite
        self.controlnet = controlnet
        self.deepfloydif = deepfloydif

# %% ../nbs/00_core.ipynb 21
def main(): return fire.Fire(SetupTools)
# if __name__ == '__main__': fire.Fire(SetupTools)
