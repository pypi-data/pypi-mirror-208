[tool.poetry]
name = "txp"
version = "0.3.22.dev130520231238"
description = "Txp is the main Python Package from Tranxpert predictive maintenance solution"
authors = ["Tranxpert"]
readme = "README.md"
repository = "https://github.com/Traxpert/txp"
keywords = [
    "IOT",
    "IIOT",
    "Predictive Maintenance"
    ]
packages = [
    { include = "txp", from = "src" },
    { include = "IpMgrConnectorSerial", from = "thirdparties/SmartMeshSDK" },
    { include = "IpMgrConnectorMux", from = "thirdparties/SmartMeshSDK" },
    { include = "SerialConnector", from = "thirdparties/SmartMeshSDK" },
    { include = "SmartMeshSDK", from = "thirdparties" },
    { include = "iCOMOXSDK", from = "thirdparties" },
    { include = "common", from = "thirdparties/iCOMOXSDK"},
    { include = "ArmSDK", from = "thirdparties" }
]

exclude = [
    "./src/txp/common/credentials",
    "./src/txp/grpc/pub_sub_to_bigquery_credentials.json",
    "./src/txp/dashboard/auth.toml",
    "./src/txp/dashboard/pub_sub_to_bigquery_credentials.json",
    "./src/txp/cloud/dashboard_gcp/auth.toml",
    "./src/txp/cloud/dashboard_gcp/pub_sub_to_bigquery_credentials.json"
]

[tool.poetry.scripts]
txp = "txp.cli:txp_cli_entrypoint"

[tool.poetry.dependencies]
python = "^3.7"
dynaconf = "^3.1.4"
pyserial = "^3.5"
pydantic = "^1.9.1"
numpy = {version = "^1.21.2", python = ">=3.7,<3.11"}
pandas = {version = "1.3.5", python = ">=3.7.1,<4.0"}
streamlit = "1.4.0"
pytz = "^2022.1.0"
opencv-python-headless = "^4.5.5"
Markdown = "^3.3.6"
plotly = "^5.6.0"
tabulate = "^0.8.9"
matplotlib = "*"
streamlit-aggrid = {version = "^0.2.3", python = ">=3.7.1,<4.0"}
google-cloud-bigquery = {version = "^2.31.0", python = ">=3.7,<3.11"}
colorama = "^0.4.5"
firebase-admin = "^5.2.0"
protobuf = "3.20.0"
xgboost = {version = "^1.6.0", optional = true}
pytest = "6.2.5"
pytest-xdist = {version = "^2.4.0", optional = true}
black = {version = "^21.6b0", optional = true}
jupyterlab = {version = "^3.4.5", optional = true}
nbmake = {version = "^1.3.4", optional = true}
google-cloud-pubsub = {version = "^2.12.1", optional = true}
google-api-python-client = {version = "^2.23.0", optional = true}
google-auth = {version = "^2.2.1", optional=true}
google-cloud-iot = {version = "^2.3.0"}
google = {version = "^3.0.0"}
google-auth-oauthlib = "^1.0.0"
google-cloud-firestore = {version = "^2.3.0", optional=true}
cryptography = {version = "^35.0.0", optional = true}
scipy = {version = "^1.4.0"}
transitions = {version = "^0.8.8", optional = true}
PyJWT = {version = "^2.1.0", optional = true}
paho-mqtt = {version = "^1.5.1", optional = true}
ifaddr = {version = "^0.1.7", optional = true}
schedule = {version = "^1.1.0", optional = true}
requests = {version = "^2.26.0", optional = true}
psutil = {version = "^5.8.0", optional = true}
queuelib = {version = "^1.6.2", optional = true}
freezegun = {version = "^1.1.0", optional = true}
pyudev = {version = "^0.23.1", optional = true}
six = {version = "^1.13.0", optional = true}
mcp9600 = {version = "^0.0.4", optional = true}
deepdiff = {version = "^5.7.0", optional = true}
ray = {version = "^1.12.0", optional=true}
sklearn = {version = "^0.0", optional=true}
fastapi = {version = "^0.78.0", optional=true}
prophet = {version = "^1.1", optional=true}
kaleido = {version = "0.2.0", optional=true}
cronsim = {version = "^2.3", optional = true}
fpdf = {version = "^1.7.2", optional = true}
dash = {extras = ["diskcache"], version = "^2.9.3", optional=true}
dash-mantine-components = {version="^0.12.0", optional=true}
debugpy = {version="1.6.6", optional=true}
dash-bootstrap-components = {version="^1.4.1", optional=true}

[tool.poetry.extras]
dev = [
    "pytest",
    "pytest-xdist",
    "black",
    "pytest-cov",
    "jupyterlab",
    "nbmake",
    "google-cloud-pubsub",
    "google-api-python-client",
    "google-auth",
    "google-cloud-iot",
    "google",
    "google-auth-oauthlib",
    "google-cloud-firestore"
]

cloud = [
    "scipy",
    "prophet",
    "fpdf",
    "cronsim",
    "kaleido",
    "requests"
]

gateway = [
    "cryptography",
    "transitions",
    "PyJWT",
    "paho-mqtt",
    "ifaddr",
    "schedule",
    "requests",
    "psutil",
    "queuelib",
    "freezegun",
    "pyudev",
    "six",
    "mcp9600",
    "deepdiff"
]

ml = [
    "ray",
    "sklearn",
    "fastapi",
    "xgboost",
    "prophet",
    "kaleido"
]

dashboard = [
    "dash",
    "dash-mantine-components",
    "dash-bootstrap-components"
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
