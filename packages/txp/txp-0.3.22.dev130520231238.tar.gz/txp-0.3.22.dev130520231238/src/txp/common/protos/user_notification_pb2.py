# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: user_notification.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='user_notification.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x17user_notification.proto\"\xf6\x01\n\x0cNotification\x12&\n\x07\x63ontent\x18\x01 \x01(\x0b\x32\x15.Notification.Content\x12,\n\x04type\x18\x02 \x01(\x0e\x32\x1e.Notification.NotificationType\x1aj\n\x07\x43ontent\x12\x10\n\x08\x61sset_id\x18\x01 \x01(\t\x12\x11\n\ttenant_id\x18\x02 \x01(\t\x12\x1b\n\x13predicted_condition\x18\x03 \x01(\t\x12\x1d\n\x15observation_timestamp\x18\x04 \x01(\x03\"$\n\x10NotificationType\x12\x10\n\x0cSTATE_CHANGE\x10\x00\x62\x06proto3'
)



_NOTIFICATION_NOTIFICATIONTYPE = _descriptor.EnumDescriptor(
  name='NotificationType',
  full_name='Notification.NotificationType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STATE_CHANGE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=238,
  serialized_end=274,
)
_sym_db.RegisterEnumDescriptor(_NOTIFICATION_NOTIFICATIONTYPE)


_NOTIFICATION_CONTENT = _descriptor.Descriptor(
  name='Content',
  full_name='Notification.Content',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='asset_id', full_name='Notification.Content.asset_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tenant_id', full_name='Notification.Content.tenant_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='predicted_condition', full_name='Notification.Content.predicted_condition', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='observation_timestamp', full_name='Notification.Content.observation_timestamp', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=130,
  serialized_end=236,
)

_NOTIFICATION = _descriptor.Descriptor(
  name='Notification',
  full_name='Notification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='Notification.content', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='Notification.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_NOTIFICATION_CONTENT, ],
  enum_types=[
    _NOTIFICATION_NOTIFICATIONTYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=274,
)

_NOTIFICATION_CONTENT.containing_type = _NOTIFICATION
_NOTIFICATION.fields_by_name['content'].message_type = _NOTIFICATION_CONTENT
_NOTIFICATION.fields_by_name['type'].enum_type = _NOTIFICATION_NOTIFICATIONTYPE
_NOTIFICATION_NOTIFICATIONTYPE.containing_type = _NOTIFICATION
DESCRIPTOR.message_types_by_name['Notification'] = _NOTIFICATION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Notification = _reflection.GeneratedProtocolMessageType('Notification', (_message.Message,), {

  'Content' : _reflection.GeneratedProtocolMessageType('Content', (_message.Message,), {
    'DESCRIPTOR' : _NOTIFICATION_CONTENT,
    '__module__' : 'user_notification_pb2'
    # @@protoc_insertion_point(class_scope:Notification.Content)
    })
  ,
  'DESCRIPTOR' : _NOTIFICATION,
  '__module__' : 'user_notification_pb2'
  # @@protoc_insertion_point(class_scope:Notification)
  })
_sym_db.RegisterMessage(Notification)
_sym_db.RegisterMessage(Notification.Content)


# @@protoc_insertion_point(module_scope)