"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class DataInWrapper(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TS_FIELD_NUMBER: builtins.int
    INSTANCE_FIELD_NUMBER: builtins.int
    TRAFFIC_FLOW_FIELD_NUMBER: builtins.int
    BROOD_NEST_FIELD_NUMBER: builtins.int
    ENV_MONITOR_FIELD_NUMBER: builtins.int
    HIVE_SCALE_FIELD_NUMBER: builtins.int
    WEATHER_STATION_FIELD_NUMBER: builtins.int
    WEATHER_FORECAST_FIELD_NUMBER: builtins.int
    DANCE_DETECTION_FIELD_NUMBER: builtins.int
    ACTUATOR_STATUS_FIELD_NUMBER: builtins.int
    GNSS_FIELD_NUMBER: builtins.int
    POWER_SUPPLY_FIELD_NUMBER: builtins.int
    ts: builtins.int
    instance: builtins.int
    @property
    def traffic_flow(self) -> global___TrafficFlow: ...
    @property
    def brood_nest(self) -> global___BroodNest: ...
    @property
    def env_monitor(self) -> global___EnvironmentMonitor: ...
    @property
    def hive_scale(self) -> global___HiveScale: ...
    @property
    def weather_station(self) -> global___WeatherStation: ...
    @property
    def weather_forecast(self) -> global___WeatherForecast: ...
    @property
    def dance_detection(self) -> global___DanceDetection: ...
    @property
    def actuator_status(self) -> global___ActuatorStatus: ...
    @property
    def gnss(self) -> global___GNSS: ...
    @property
    def power_supply(self) -> global___PowerSupply: ...
    def __init__(
        self,
        *,
        ts: builtins.int = ...,
        instance: builtins.int = ...,
        traffic_flow: global___TrafficFlow | None = ...,
        brood_nest: global___BroodNest | None = ...,
        env_monitor: global___EnvironmentMonitor | None = ...,
        hive_scale: global___HiveScale | None = ...,
        weather_station: global___WeatherStation | None = ...,
        weather_forecast: global___WeatherForecast | None = ...,
        dance_detection: global___DanceDetection | None = ...,
        actuator_status: global___ActuatorStatus | None = ...,
        gnss: global___GNSS | None = ...,
        power_supply: global___PowerSupply | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["actuator_status", b"actuator_status", "brood_nest", b"brood_nest", "dance_detection", b"dance_detection", "data", b"data", "env_monitor", b"env_monitor", "gnss", b"gnss", "hive_scale", b"hive_scale", "power_supply", b"power_supply", "traffic_flow", b"traffic_flow", "weather_forecast", b"weather_forecast", "weather_station", b"weather_station"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["actuator_status", b"actuator_status", "brood_nest", b"brood_nest", "dance_detection", b"dance_detection", "data", b"data", "env_monitor", b"env_monitor", "gnss", b"gnss", "hive_scale", b"hive_scale", "instance", b"instance", "power_supply", b"power_supply", "traffic_flow", b"traffic_flow", "ts", b"ts", "weather_forecast", b"weather_forecast", "weather_station", b"weather_station"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["data", b"data"]) -> typing_extensions.Literal["traffic_flow", "brood_nest", "env_monitor", "hive_scale", "weather_station", "weather_forecast", "dance_detection", "actuator_status", "gnss", "power_supply"] | None: ...

global___DataInWrapper = DataInWrapper

@typing_extensions.final
class TrafficFlow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BEESIN_FIELD_NUMBER: builtins.int
    BEESOUT_FIELD_NUMBER: builtins.int
    beesIn: builtins.int
    beesOut: builtins.int
    def __init__(
        self,
        *,
        beesIn: builtins.int = ...,
        beesOut: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["beesIn", b"beesIn", "beesOut", b"beesOut"]) -> None: ...

global___TrafficFlow = TrafficFlow

@typing_extensions.final
class BroodNest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CO2_FIELD_NUMBER: builtins.int
    HUMIDITY_FIELD_NUMBER: builtins.int
    TEMPERATURE_FIELD_NUMBER: builtins.int
    co2: builtins.float
    @property
    def humidity(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def temperature(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(
        self,
        *,
        co2: builtins.float = ...,
        humidity: collections.abc.Iterable[builtins.float] | None = ...,
        temperature: collections.abc.Iterable[builtins.float] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["co2", b"co2", "humidity", b"humidity", "temperature", b"temperature"]) -> None: ...

global___BroodNest = BroodNest

@typing_extensions.final
class EnvironmentMonitor(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CO2_FIELD_NUMBER: builtins.int
    HUMIDITY_FIELD_NUMBER: builtins.int
    TEMPERATURE_FIELD_NUMBER: builtins.int
    SYS_HEALTH_FIELD_NUMBER: builtins.int
    co2: builtins.float
    @property
    def humidity(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def temperature(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def sys_health(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(
        self,
        *,
        co2: builtins.float = ...,
        humidity: collections.abc.Iterable[builtins.float] | None = ...,
        temperature: collections.abc.Iterable[builtins.float] | None = ...,
        sys_health: collections.abc.Iterable[builtins.float] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["co2", b"co2", "humidity", b"humidity", "sys_health", b"sys_health", "temperature", b"temperature"]) -> None: ...

global___EnvironmentMonitor = EnvironmentMonitor

@typing_extensions.final
class HiveScale(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WEIGHT_FIELD_NUMBER: builtins.int
    weight: builtins.float
    def __init__(
        self,
        *,
        weight: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["weight", b"weight"]) -> None: ...

global___HiveScale = HiveScale

@typing_extensions.final
class WeatherStation(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INDOOR_FIELD_NUMBER: builtins.int
    OUTDOOR_FIELD_NUMBER: builtins.int
    @property
    def indoor(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """TODO: define parameter names"""
    @property
    def outdoor(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(
        self,
        *,
        indoor: collections.abc.Iterable[builtins.float] | None = ...,
        outdoor: collections.abc.Iterable[builtins.float] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["indoor", b"indoor", "outdoor", b"outdoor"]) -> None: ...

global___WeatherStation = WeatherStation

@typing_extensions.final
class WeatherForecast(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CURRENT_FIELD_NUMBER: builtins.int
    NEXT_HOUR_FIELD_NUMBER: builtins.int
    NEXT_2DAYS_FIELD_NUMBER: builtins.int
    NEXT_7DAYS_FIELD_NUMBER: builtins.int
    @property
    def current(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """TODO: check value types, define better names, split into various arrays"""
    @property
    def next_hour(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def next_2days(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def next_7days(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(
        self,
        *,
        current: collections.abc.Iterable[builtins.float] | None = ...,
        next_hour: collections.abc.Iterable[builtins.float] | None = ...,
        next_2days: collections.abc.Iterable[builtins.float] | None = ...,
        next_7days: collections.abc.Iterable[builtins.float] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["current", b"current", "next_2days", b"next_2days", "next_7days", b"next_7days", "next_hour", b"next_hour"]) -> None: ...

global___WeatherForecast = WeatherForecast

@typing_extensions.final
class DanceDetection(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WAGGLE_RUN_INFO_FIELD_NUMBER: builtins.int
    DANCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def waggle_run_info(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """TODO: split into defined parts?"""
    @property
    def dance_info(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(
        self,
        *,
        waggle_run_info: collections.abc.Iterable[builtins.float] | None = ...,
        dance_info: collections.abc.Iterable[builtins.float] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["dance_info", b"dance_info", "waggle_run_info", b"waggle_run_info"]) -> None: ...

global___DanceDetection = DanceDetection

@typing_extensions.final
class ActuatorStatus(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Type:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[ActuatorStatus._Type.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        FrontGateClosure: ActuatorStatus._Type.ValueType  # 0
        TrafficControlModulator: ActuatorStatus._Type.ValueType  # 1
        HoneyHarvester: ActuatorStatus._Type.ValueType  # 2
        DanceRobot: ActuatorStatus._Type.ValueType  # 3
        DanceInhibitor: ActuatorStatus._Type.ValueType  # 4
        BroodNestHeater: ActuatorStatus._Type.ValueType  # 5
        """TODO: is it heater?"""

    class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...
    FrontGateClosure: ActuatorStatus.Type.ValueType  # 0
    TrafficControlModulator: ActuatorStatus.Type.ValueType  # 1
    HoneyHarvester: ActuatorStatus.Type.ValueType  # 2
    DanceRobot: ActuatorStatus.Type.ValueType  # 3
    DanceInhibitor: ActuatorStatus.Type.ValueType  # 4
    BroodNestHeater: ActuatorStatus.Type.ValueType  # 5
    """TODO: is it heater?"""

    @typing_extensions.final
    class Status(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        CODE_FIELD_NUMBER: builtins.int
        DATA_FIELD_NUMBER: builtins.int
        code: builtins.str
        data: builtins.bytes
        def __init__(
            self,
            *,
            code: builtins.str = ...,
            data: builtins.bytes = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["code", b"code", "data", b"data"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    STATUS_FIELD_NUMBER: builtins.int
    type: global___ActuatorStatus.Type.ValueType
    @property
    def status(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ActuatorStatus.Status]: ...
    def __init__(
        self,
        *,
        type: global___ActuatorStatus.Type.ValueType = ...,
        status: collections.abc.Iterable[global___ActuatorStatus.Status] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status", "type", b"type"]) -> None: ...

global___ActuatorStatus = ActuatorStatus

@typing_extensions.final
class GNSS(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TIME_REF_FIELD_NUMBER: builtins.int
    POS_FIELD_NUMBER: builtins.int
    time_ref: builtins.int
    @property
    def pos(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(
        self,
        *,
        time_ref: builtins.int = ...,
        pos: collections.abc.Iterable[builtins.float] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["pos", b"pos", "time_ref", b"time_ref"]) -> None: ...

global___GNSS = GNSS

@typing_extensions.final
class PowerSupply(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VOLTAGE_FIELD_NUMBER: builtins.int
    CURRENT_DRAW_FIELD_NUMBER: builtins.int
    CURRENT_RATE_FIELD_NUMBER: builtins.int
    voltage: builtins.float
    current_draw: builtins.float
    current_rate: builtins.float
    def __init__(
        self,
        *,
        voltage: builtins.float = ...,
        current_draw: builtins.float = ...,
        current_rate: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["current_draw", b"current_draw", "current_rate", b"current_rate", "voltage", b"voltage"]) -> None: ...

global___PowerSupply = PowerSupply

@typing_extensions.final
class DataInResponse(google.protobuf.message.Message):
    """not used currently"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Status:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _StatusEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[DataInResponse._Status.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        Ok: DataInResponse._Status.ValueType  # 0
        Nok: DataInResponse._Status.ValueType  # 1

    class Status(_Status, metaclass=_StatusEnumTypeWrapper): ...
    Ok: DataInResponse.Status.ValueType  # 0
    Nok: DataInResponse.Status.ValueType  # 1

    STATUS_FIELD_NUMBER: builtins.int
    status: global___DataInResponse.Status.ValueType
    def __init__(
        self,
        *,
        status: global___DataInResponse.Status.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["status", b"status"]) -> None: ...

global___DataInResponse = DataInResponse
