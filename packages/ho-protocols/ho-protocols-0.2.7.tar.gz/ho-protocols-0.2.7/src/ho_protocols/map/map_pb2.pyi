"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import ho_protocols.common_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class MapRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    HEADER_FIELD_NUMBER: builtins.int
    WEATHER_FORECAST_FIELD_NUMBER: builtins.int
    HARVESTING_RESOURCES_FIELD_NUMBER: builtins.int
    CROWD_INPUT_FIELD_NUMBER: builtins.int
    @property
    def header(self) -> ho_protocols.common_pb2.Header: ...
    @property
    def weather_forecast(self) -> global___WeatherForecast: ...
    @property
    def harvesting_resources(self) -> global___HarvestingResources: ...
    @property
    def crowd_input(self) -> global___CrowdInput: ...
    def __init__(
        self,
        *,
        header: ho_protocols.common_pb2.Header | None = ...,
        weather_forecast: global___WeatherForecast | None = ...,
        harvesting_resources: global___HarvestingResources | None = ...,
        crowd_input: global___CrowdInput | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["crowd_input", b"crowd_input", "harvesting_resources", b"harvesting_resources", "header", b"header", "query", b"query", "weather_forecast", b"weather_forecast"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["crowd_input", b"crowd_input", "harvesting_resources", b"harvesting_resources", "header", b"header", "query", b"query", "weather_forecast", b"weather_forecast"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["query", b"query"]) -> typing_extensions.Literal["weather_forecast", "harvesting_resources", "crowd_input"] | None: ...

global___MapRequest = MapRequest

@typing_extensions.final
class MapResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WEATHER_FORECAST_FIELD_NUMBER: builtins.int
    HARVESTING_RESOURCES_FIELD_NUMBER: builtins.int
    CROWD_INPUT_FIELD_NUMBER: builtins.int
    @property
    def weather_forecast(self) -> global___WeatherForecastResult: ...
    @property
    def harvesting_resources(self) -> global___HarvestingResourcesResult: ...
    @property
    def crowd_input(self) -> global___CrowdInputResult: ...
    def __init__(
        self,
        *,
        weather_forecast: global___WeatherForecastResult | None = ...,
        harvesting_resources: global___HarvestingResourcesResult | None = ...,
        crowd_input: global___CrowdInputResult | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["crowd_input", b"crowd_input", "harvesting_resources", b"harvesting_resources", "result", b"result", "weather_forecast", b"weather_forecast"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["crowd_input", b"crowd_input", "harvesting_resources", b"harvesting_resources", "result", b"result", "weather_forecast", b"weather_forecast"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["result", b"result"]) -> typing_extensions.Literal["weather_forecast", "harvesting_resources", "crowd_input"] | None: ...

global___MapResponse = MapResponse

@typing_extensions.final
class WeatherForecast(google.protobuf.message.Message):
    """#####"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LAT_FIELD_NUMBER: builtins.int
    LNG_FIELD_NUMBER: builtins.int
    PERIODS_FIELD_NUMBER: builtins.int
    lat: builtins.float
    lng: builtins.float
    periods: builtins.int
    def __init__(
        self,
        *,
        lat: builtins.float = ...,
        lng: builtins.float = ...,
        periods: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["lat", b"lat", "lng", b"lng", "periods", b"periods"]) -> None: ...

global___WeatherForecast = WeatherForecast

@typing_extensions.final
class WeatherForecastResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Item(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        TS_FIELD_NUMBER: builtins.int
        TEMPERATURE_FIELD_NUMBER: builtins.int
        HUMIDITY_FIELD_NUMBER: builtins.int
        WIND_SPEED_FIELD_NUMBER: builtins.int
        WIND_DEG_FIELD_NUMBER: builtins.int
        ts: builtins.int
        temperature: builtins.float
        humidity: builtins.float
        wind_speed: builtins.float
        wind_deg: builtins.float
        def __init__(
            self,
            *,
            ts: builtins.int = ...,
            temperature: builtins.float = ...,
            humidity: builtins.float = ...,
            wind_speed: builtins.float = ...,
            wind_deg: builtins.float = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["humidity", b"humidity", "temperature", b"temperature", "ts", b"ts", "wind_deg", b"wind_deg", "wind_speed", b"wind_speed"]) -> None: ...

    ITEM_FIELD_NUMBER: builtins.int
    @property
    def item(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WeatherForecastResult.Item]: ...
    def __init__(
        self,
        *,
        item: collections.abc.Iterable[global___WeatherForecastResult.Item] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["item", b"item"]) -> None: ...

global___WeatherForecastResult = WeatherForecastResult

@typing_extensions.final
class HarvestingResources(google.protobuf.message.Message):
    """#####"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LAT_FIELD_NUMBER: builtins.int
    LNG_FIELD_NUMBER: builtins.int
    TS_FIELD_NUMBER: builtins.int
    lat: builtins.float
    lng: builtins.float
    ts: builtins.int
    def __init__(
        self,
        *,
        lat: builtins.float = ...,
        lng: builtins.float = ...,
        ts: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["lat", b"lat", "lng", b"lng", "ts", b"ts"]) -> None: ...

global___HarvestingResources = HarvestingResources

@typing_extensions.final
class HarvestingResourcesResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Field(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        PLANT_NAME_FIELD_NUMBER: builtins.int
        AMOUNT_FIELD_NUMBER: builtins.int
        DIR_FIELD_NUMBER: builtins.int
        plant_name: builtins.str
        amount: builtins.float
        dir: builtins.float
        def __init__(
            self,
            *,
            plant_name: builtins.str = ...,
            amount: builtins.float = ...,
            dir: builtins.float = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["amount", b"amount", "dir", b"dir", "plant_name", b"plant_name"]) -> None: ...

    OVERALL_INDEX_FIELD_NUMBER: builtins.int
    NECTAR_INDEX_FIELD_NUMBER: builtins.int
    POLLEN_INDEX_FIELD_NUMBER: builtins.int
    WATER_INDEX_FIELD_NUMBER: builtins.int
    ROAD_INDEX_FIELD_NUMBER: builtins.int
    FIELD_FIELD_NUMBER: builtins.int
    overall_index: builtins.float
    nectar_index: builtins.float
    pollen_index: builtins.float
    water_index: builtins.float
    road_index: builtins.float
    @property
    def field(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HarvestingResourcesResult.Field]: ...
    def __init__(
        self,
        *,
        overall_index: builtins.float = ...,
        nectar_index: builtins.float = ...,
        pollen_index: builtins.float = ...,
        water_index: builtins.float = ...,
        road_index: builtins.float = ...,
        field: collections.abc.Iterable[global___HarvestingResourcesResult.Field] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["field", b"field", "nectar_index", b"nectar_index", "overall_index", b"overall_index", "pollen_index", b"pollen_index", "road_index", b"road_index", "water_index", b"water_index"]) -> None: ...

global___HarvestingResourcesResult = HarvestingResourcesResult

@typing_extensions.final
class CrowdInput(google.protobuf.message.Message):
    """######"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LAT_FIELD_NUMBER: builtins.int
    LNG_FIELD_NUMBER: builtins.int
    TS_FIELD_NUMBER: builtins.int
    NOTE_FIELD_NUMBER: builtins.int
    lat: builtins.float
    lng: builtins.float
    ts: builtins.int
    note: builtins.str
    def __init__(
        self,
        *,
        lat: builtins.float = ...,
        lng: builtins.float = ...,
        ts: builtins.int = ...,
        note: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["lat", b"lat", "lng", b"lng", "note", b"note", "ts", b"ts"]) -> None: ...

global___CrowdInput = CrowdInput

@typing_extensions.final
class CrowdInputResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ACKResult(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        def __init__(
            self,
        ) -> None: ...

    @typing_extensions.final
    class NACKResult(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        def __init__(
            self,
        ) -> None: ...

    ACK_FIELD_NUMBER: builtins.int
    NACK_FIELD_NUMBER: builtins.int
    @property
    def ack(self) -> global___CrowdInputResult.ACKResult: ...
    @property
    def nack(self) -> global___CrowdInputResult.NACKResult: ...
    def __init__(
        self,
        *,
        ack: global___CrowdInputResult.ACKResult | None = ...,
        nack: global___CrowdInputResult.NACKResult | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ack", b"ack", "nack", b"nack", "status", b"status"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ack", b"ack", "nack", b"nack", "status", b"status"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["status", b"status"]) -> typing_extensions.Literal["ack", "nack"] | None: ...

global___CrowdInputResult = CrowdInputResult
