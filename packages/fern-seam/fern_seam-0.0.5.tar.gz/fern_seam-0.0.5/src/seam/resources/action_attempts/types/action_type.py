# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class ActionType(str, enum.Enum):
    DELETE_ACCESS_CODE = "DELETE_ACCESS_CODE"
    LOCK_DOOR = "LOCK_DOOR"
    UNLOCK_DOOR = "UNLOCK_DOOR"
    CREATE_NOISE_THRESHOLD = "CREATE_NOISE_THRESHOLD"
    REMOVE_NOISE_THRESHOLD = "REMOVE_NOISE_THRESHOLD"

    def visit(
        self,
        delete_access_code: typing.Callable[[], T_Result],
        lock_door: typing.Callable[[], T_Result],
        unlock_door: typing.Callable[[], T_Result],
        create_noise_threshold: typing.Callable[[], T_Result],
        remove_noise_threshold: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is ActionType.DELETE_ACCESS_CODE:
            return delete_access_code()
        if self is ActionType.LOCK_DOOR:
            return lock_door()
        if self is ActionType.UNLOCK_DOOR:
            return unlock_door()
        if self is ActionType.CREATE_NOISE_THRESHOLD:
            return create_noise_threshold()
        if self is ActionType.REMOVE_NOISE_THRESHOLD:
            return remove_noise_threshold()
